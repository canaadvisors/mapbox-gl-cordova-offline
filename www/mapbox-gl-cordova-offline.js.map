{"version":3,"file":"mapbox-gl-cordova-offline.js","sources":["../node_modules/pbf/index.js","../node_modules/mapbox-gl/src/style/parse_glyph_pbf.js","../node_modules/mapbox-gl/src/util/actor.js","../node_modules/@mapbox/whoots-js/index.mjs","../node_modules/mapbox-gl/src/geo/lng_lat_bounds.js","../node_modules/mapbox-gl/src/geo/lng_lat.js","../node_modules/mapbox-gl/src/geo/mercator_coordinate.js","../node_modules/mapbox-gl/src/source/tile_id.js","../node_modules/mapbox-gl/src/source/tile_bounds.js","../node_modules/mapbox-gl/src/source/raster_tile_source.js","../node_modules/mapbox-gl/src/data/dem_data.js","../node_modules/mapbox-gl/src/util/dictionary_coder.js","../node_modules/mapbox-gl/src/util/vectortile_to_geojson.js","../node_modules/mapbox-gl/src/source/source_state.js","../node_modules/mapbox-gl/src/style-spec/group_by_layout.js","../node_modules/mapbox-gl/src/style/style_layer_index.js","../node_modules/mapbox-gl/src/symbol/check_max_angle.js","../node_modules/mapbox-gl/src/symbol/get_anchors.js","../node_modules/mapbox-gl/src/symbol/collision_feature.js","../node_modules/tinyqueue/index.js","../node_modules/mapbox-gl/src/util/find_pole_of_inaccessibility.js","../node_modules/murmurhash-js/murmurhash3_gc.js","../node_modules/murmurhash-js/murmurhash2_gc.js","../node_modules/murmurhash-js/index.js","../node_modules/mapbox-gl/src/symbol/symbol_layout.js","../node_modules/mapbox-gl/src/symbol/quads.js","../node_modules/mapbox-gl/src/symbol/clip_line.js","../node_modules/mapbox-gl/src/render/glyph_atlas.js","../node_modules/mapbox-gl/src/source/worker_tile.js","../node_modules/mapbox-gl/src/util/performance.js","../node_modules/mapbox-gl/src/source/vector_tile_worker_source.js","../node_modules/mapbox-gl/src/source/raster_dem_tile_worker_source.js","../node_modules/wgs84/index.js","../node_modules/@mapbox/geojson-area/index.js","../node_modules/@mapbox/geojson-rewind/index.js","../node_modules/mapbox-gl/src/source/geojson_wrapper.js","../node_modules/vt-pbf/lib/geojson_wrapper.js","../node_modules/vt-pbf/index.js","../node_modules/mapbox-gl/src/render/draw_debug.js","../node_modules/pako/lib/utils/strings.js","../node_modules/pako/lib/zlib/constants.js","../node_modules/pako/lib/zlib/messages.js","../node_modules/pako/lib/zlib/zstream.js","../node_modules/pako/lib/zlib/gzheader.js","../node_modules/pako/lib/inflate.js","../src/mbtiles_source.js","../src/offline_map.js","../src/index.js","../rollup/mapboxgl.js"],"sourcesContent":["'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","// @flow\n\nimport { AlphaImage } from '../util/image';\n\nimport Protobuf from 'pbf';\nconst border = 3;\n\nimport type {StyleGlyph} from './style_glyph';\n\nfunction readFontstacks(tag: number, glyphs: Array<StyleGlyph>, pbf: Protobuf) {\n    if (tag === 1) {\n        pbf.readMessage(readFontstack, glyphs);\n    }\n}\n\nfunction readFontstack(tag: number, glyphs: Array<StyleGlyph>, pbf: Protobuf) {\n    if (tag === 3) {\n        const {id, bitmap, width, height, left, top, advance} = pbf.readMessage(readGlyph, {});\n        glyphs.push({\n            id,\n            bitmap: new AlphaImage({\n                width: width + 2 * border,\n                height: height + 2 * border\n            }, bitmap),\n            metrics: {width, height, left, top, advance}\n        });\n    }\n}\n\nfunction readGlyph(tag: number, glyph: Object, pbf: Protobuf) {\n    if (tag === 1) glyph.id = pbf.readVarint();\n    else if (tag === 2) glyph.bitmap = pbf.readBytes();\n    else if (tag === 3) glyph.width = pbf.readVarint();\n    else if (tag === 4) glyph.height = pbf.readVarint();\n    else if (tag === 5) glyph.left = pbf.readSVarint();\n    else if (tag === 6) glyph.top = pbf.readSVarint();\n    else if (tag === 7) glyph.advance = pbf.readVarint();\n}\n\nexport default function (data: ArrayBuffer | Uint8Array): Array<StyleGlyph> {\n    return new Protobuf(data).readFields(readFontstacks, []);\n}\n\nexport const GLYPH_PBF_BORDER = border;\n","// @flow\n\nimport { bindAll } from './util';\nimport { serialize, deserialize } from './web_worker_transfer';\n\nimport type {Transferable} from '../types/transferable';\nimport type {Cancelable} from '../types/cancelable';\n\n/**\n * An implementation of the [Actor design pattern](http://en.wikipedia.org/wiki/Actor_model)\n * that maintains the relationship between asynchronous tasks and the objects\n * that spin them off - in this case, tasks like parsing parts of styles,\n * owned by the styles\n *\n * @param {WebWorker} target\n * @param {WebWorker} parent\n * @param {string|number} mapId A unique identifier for the Map instance using this Actor.\n * @private\n */\nclass Actor {\n    target: any;\n    parent: any;\n    mapId: string;\n    callbacks: any;\n    callbackID: number;\n    name: string;\n\n    constructor(target: any, parent: any, mapId: any) {\n        this.target = target;\n        this.parent = parent;\n        this.mapId = mapId;\n        this.callbacks = {};\n        this.callbackID = 0;\n        bindAll(['receive'], this);\n        this.target.addEventListener('message', this.receive, false);\n    }\n\n    /**\n     * Sends a message from a main-thread map to a Worker or from a Worker back to\n     * a main-thread map instance.\n     *\n     * @param type The name of the target method to invoke or '[source-type].[source-name].name' for a method on a WorkerSource.\n     * @param targetMapId A particular mapId to which to send this message.\n     * @private\n     */\n    send(type: string, data: mixed, callback: ?Function, targetMapId: ?string): ?Cancelable {\n        const id = callback ? `${this.mapId}:${this.callbackID++}` : null;\n        if (callback) this.callbacks[id] = callback;\n        const buffers: Array<Transferable> = [];\n        this.target.postMessage({\n            targetMapId,\n            sourceMapId: this.mapId,\n            type,\n            id: String(id),\n            data: serialize(data, buffers)\n        }, buffers);\n        if (callback) {\n            return {\n                cancel: () => this.target.postMessage({\n                    targetMapId,\n                    sourceMapId: this.mapId,\n                    type: '<cancel>',\n                    id: String(id)\n                })\n            };\n        }\n    }\n\n    receive(message: Object) {\n        const data = message.data,\n            id = data.id;\n        let callback;\n\n        if (data.targetMapId && this.mapId !== data.targetMapId)\n            return;\n\n        const done = (err, data) => {\n            delete this.callbacks[id];\n            const buffers: Array<Transferable> = [];\n            this.target.postMessage({\n                sourceMapId: this.mapId,\n                type: '<response>',\n                id: String(id),\n                error: err ? serialize(err) : null,\n                data: serialize(data, buffers)\n            }, buffers);\n        };\n\n        if (data.type === '<response>' || data.type === '<cancel>') {\n            callback = this.callbacks[data.id];\n            delete this.callbacks[data.id];\n            if (callback && data.error) {\n                callback(deserialize(data.error));\n            } else if (callback) {\n                callback(null, deserialize(data.data));\n            }\n        } else if (typeof data.id !== 'undefined' && this.parent[data.type]) {\n            // data.type == 'loadTile', 'removeTile', etc.\n            // Add a placeholder so that we can discover when the done callback was called already.\n            this.callbacks[data.id] = null;\n            const cancelable = this.parent[data.type](data.sourceMapId, deserialize(data.data), done);\n            if (cancelable && this.callbacks[data.id] === null) {\n                // Only add the cancelable callback if the done callback wasn't already called.\n                // Otherwise we will never be able to delete it.\n                this.callbacks[data.id]  = cancelable;\n            }\n        } else if (typeof data.id !== 'undefined' && this.parent.getWorkerSource) {\n            // data.type == sourcetype.method\n            const keys = data.type.split('.');\n            const params = (deserialize(data.data): any);\n            const workerSource = (this.parent: any).getWorkerSource(data.sourceMapId, keys[0], params.source);\n            workerSource[keys[1]](params, done);\n        } else {\n            this.parent[data.type](deserialize(data.data));\n        }\n    }\n\n    remove() {\n        this.target.removeEventListener('message', this.receive, false);\n    }\n}\n\nexport default Actor;\n","export { getURL, getTileBBox, getMercCoords };\n\n\n/**\n * getURL\n *\n * @param    {String}  baseUrl  Base url of the WMS server\n * @param    {String}  layer    Layer name\n * @param    {Number}  x        Tile coordinate x\n * @param    {Number}  y        Tile coordinate y\n * @param    {Number}  z        Tile zoom\n * @param    {Object}  [options]\n * @param    {String}  [options.format='image/png']\n * @param    {String}  [options.service='WMS']\n * @param    {String}  [options.version='1.1.1']\n * @param    {String}  [options.request='GetMap']\n * @param    {String}  [options.srs='EPSG:3857']\n * @param    {Number}  [options.width='256']\n * @param    {Number}  [options.height='256']\n * @returns  {String}  url\n * @example\n * var baseUrl = 'http://geodata.state.nj.us/imagerywms/Natural2015';\n * var layer = 'Natural2015';\n * var url = whoots.getURL(baseUrl, layer, 154308, 197167, 19);\n */\nfunction getURL(baseUrl, layer, x, y, z, options) {\n    options = options || {};\n\n    var url = baseUrl + '?' + [\n        'bbox='    + getTileBBox(x, y, z),\n        'format='  + (options.format || 'image/png'),\n        'service=' + (options.service || 'WMS'),\n        'version=' + (options.version || '1.1.1'),\n        'request=' + (options.request || 'GetMap'),\n        'srs='     + (options.srs || 'EPSG:3857'),\n        'width='   + (options.width || 256),\n        'height='  + (options.height || 256),\n        'layers='  + layer\n    ].join('&');\n\n    return url;\n}\n\n\n/**\n * getTileBBox\n *\n * @param    {Number}  x  Tile coordinate x\n * @param    {Number}  y  Tile coordinate y\n * @param    {Number}  z  Tile zoom\n * @returns  {String}  String of the bounding box\n */\nfunction getTileBBox(x, y, z) {\n    // for Google/OSM tile scheme we need to alter the y\n    y = (Math.pow(2, z) - y - 1);\n\n    var min = getMercCoords(x * 256, y * 256, z),\n        max = getMercCoords((x + 1) * 256, (y + 1) * 256, z);\n\n    return min[0] + ',' + min[1] + ',' + max[0] + ',' + max[1];\n}\n\n\n/**\n * getMercCoords\n *\n * @param    {Number}  x  Pixel coordinate x\n * @param    {Number}  y  Pixel coordinate y\n * @param    {Number}  z  Tile zoom\n * @returns  {Array}   [x, y]\n */\nfunction getMercCoords(x, y, z) {\n    var resolution = (2 * Math.PI * 6378137 / 256) / Math.pow(2, z),\n        merc_x = (x * resolution - 2 * Math.PI  * 6378137 / 2.0),\n        merc_y = (y * resolution - 2 * Math.PI  * 6378137 / 2.0);\n\n    return [merc_x, merc_y];\n}\n","// @flow\n\nimport LngLat from './lng_lat';\n\nimport type {LngLatLike} from './lng_lat';\n\n/**\n * A `LngLatBounds` object represents a geographical bounding box,\n * defined by its southwest and northeast points in longitude and latitude.\n *\n * If no arguments are provided to the constructor, a `null` bounding box is created.\n *\n * Note that any Mapbox GL method that accepts a `LngLatBounds` object as an argument or option\n * can also accept an `Array` of two {@link LngLatLike} constructs and will perform an implicit conversion.\n * This flexible type is documented as {@link LngLatBoundsLike}.\n *\n * @param {LngLatLike} [sw] The southwest corner of the bounding box.\n * @param {LngLatLike} [ne] The northeast corner of the bounding box.\n * @example\n * var sw = new mapboxgl.LngLat(-73.9876, 40.7661);\n * var ne = new mapboxgl.LngLat(-73.9397, 40.8002);\n * var llb = new mapboxgl.LngLatBounds(sw, ne);\n */\nclass LngLatBounds {\n    _ne: LngLat;\n    _sw: LngLat;\n\n    // This constructor is too flexible to type. It should not be so flexible.\n    constructor(sw: any, ne: any) {\n        if (!sw) {\n            // noop\n        } else if (ne) {\n            this.setSouthWest(sw).setNorthEast(ne);\n        } else if (sw.length === 4) {\n            this.setSouthWest([sw[0], sw[1]]).setNorthEast([sw[2], sw[3]]);\n        } else {\n            this.setSouthWest(sw[0]).setNorthEast(sw[1]);\n        }\n    }\n\n    /**\n     * Set the northeast corner of the bounding box\n     *\n     * @param {LngLatLike} ne\n     * @returns {LngLatBounds} `this`\n     */\n    setNorthEast(ne: LngLatLike) {\n        this._ne = ne instanceof LngLat ? new LngLat(ne.lng, ne.lat) : LngLat.convert(ne);\n        return this;\n    }\n\n    /**\n     * Set the southwest corner of the bounding box\n     *\n     * @param {LngLatLike} sw\n     * @returns {LngLatBounds} `this`\n     */\n    setSouthWest(sw: LngLatLike) {\n        this._sw = sw instanceof LngLat ? new LngLat(sw.lng, sw.lat) : LngLat.convert(sw);\n        return this;\n    }\n\n    /**\n     * Extend the bounds to include a given LngLat or LngLatBounds.\n     *\n     * @param {LngLat|LngLatBounds} obj object to extend to\n     * @returns {LngLatBounds} `this`\n     */\n    extend(obj: LngLat | LngLatBounds) {\n        const sw = this._sw,\n            ne = this._ne;\n        let sw2, ne2;\n\n        if (obj instanceof LngLat) {\n            sw2 = obj;\n            ne2 = obj;\n\n        } else if (obj instanceof LngLatBounds) {\n            sw2 = obj._sw;\n            ne2 = obj._ne;\n\n            if (!sw2 || !ne2) return this;\n\n        } else {\n            if (Array.isArray(obj)) {\n                if (obj.every(Array.isArray)) {\n                    return this.extend(LngLatBounds.convert(obj));\n                } else {\n                    return this.extend(LngLat.convert(obj));\n                }\n            }\n            return this;\n        }\n\n        if (!sw && !ne) {\n            this._sw = new LngLat(sw2.lng, sw2.lat);\n            this._ne = new LngLat(ne2.lng, ne2.lat);\n\n        } else {\n            sw.lng = Math.min(sw2.lng, sw.lng);\n            sw.lat = Math.min(sw2.lat, sw.lat);\n            ne.lng = Math.max(ne2.lng, ne.lng);\n            ne.lat = Math.max(ne2.lat, ne.lat);\n        }\n\n        return this;\n    }\n\n    /**\n     * Returns the geographical coordinate equidistant from the bounding box's corners.\n     *\n     * @returns {LngLat} The bounding box's center.\n     * @example\n     * var llb = new mapboxgl.LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n     * llb.getCenter(); // = LngLat {lng: -73.96365, lat: 40.78315}\n     */\n    getCenter(): LngLat {\n        return new LngLat((this._sw.lng + this._ne.lng) / 2, (this._sw.lat + this._ne.lat) / 2);\n    }\n\n    /**\n     * Returns the southwest corner of the bounding box.\n     *\n     * @returns {LngLat} The southwest corner of the bounding box.\n     */\n    getSouthWest(): LngLat { return this._sw; }\n\n    /**\n    * Returns the northeast corner of the bounding box.\n    *\n    * @returns {LngLat} The northeast corner of the bounding box.\n     */\n    getNorthEast(): LngLat { return this._ne; }\n\n    /**\n    * Returns the northwest corner of the bounding box.\n    *\n    * @returns {LngLat} The northwest corner of the bounding box.\n     */\n    getNorthWest(): LngLat { return new LngLat(this.getWest(), this.getNorth()); }\n\n    /**\n    * Returns the southeast corner of the bounding box.\n    *\n    * @returns {LngLat} The southeast corner of the bounding box.\n     */\n    getSouthEast(): LngLat { return new LngLat(this.getEast(), this.getSouth()); }\n\n    /**\n    * Returns the west edge of the bounding box.\n    *\n    * @returns {number} The west edge of the bounding box.\n     */\n    getWest(): number { return this._sw.lng; }\n\n    /**\n    * Returns the south edge of the bounding box.\n    *\n    * @returns {number} The south edge of the bounding box.\n     */\n    getSouth(): number { return this._sw.lat; }\n\n    /**\n    * Returns the east edge of the bounding box.\n    *\n    * @returns {number} The east edge of the bounding box.\n     */\n    getEast(): number { return this._ne.lng; }\n\n    /**\n    * Returns the north edge of the bounding box.\n    *\n    * @returns {number} The north edge of the bounding box.\n     */\n    getNorth(): number { return this._ne.lat; }\n\n    /**\n     * Returns the bounding box represented as an array.\n     *\n     * @returns {Array<Array<number>>} The bounding box represented as an array, consisting of the\n     *   southwest and northeast coordinates of the bounding represented as arrays of numbers.\n     * @example\n     * var llb = new mapboxgl.LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n     * llb.toArray(); // = [[-73.9876, 40.7661], [-73.9397, 40.8002]]\n     */\n    toArray() {\n        return [this._sw.toArray(), this._ne.toArray()];\n    }\n\n    /**\n     * Return the bounding box represented as a string.\n     *\n     * @returns {string} The bounding box represents as a string of the format\n     *   `'LngLatBounds(LngLat(lng, lat), LngLat(lng, lat))'`.\n     * @example\n     * var llb = new mapboxgl.LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n     * llb.toString(); // = \"LngLatBounds(LngLat(-73.9876, 40.7661), LngLat(-73.9397, 40.8002))\"\n     */\n    toString() {\n        return `LngLatBounds(${this._sw.toString()}, ${this._ne.toString()})`;\n    }\n\n    /**\n     * Check if the bounding box is an empty/`null`-type box.\n     *\n     * @returns {boolean} True if bounds have been defined, otherwise false.\n     */\n    isEmpty() {\n        return !(this._sw && this._ne);\n    }\n\n    /**\n     * Converts an array to a `LngLatBounds` object.\n     *\n     * If a `LngLatBounds` object is passed in, the function returns it unchanged.\n     *\n     * Internally, the function calls `LngLat#convert` to convert arrays to `LngLat` values.\n     *\n     * @param {LngLatBoundsLike} input An array of two coordinates to convert, or a `LngLatBounds` object to return.\n     * @returns {LngLatBounds} A new `LngLatBounds` object, if a conversion occurred, or the original `LngLatBounds` object.\n     * @example\n     * var arr = [[-73.9876, 40.7661], [-73.9397, 40.8002]];\n     * var llb = mapboxgl.LngLatBounds.convert(arr);\n     * llb;   // = LngLatBounds {_sw: LngLat {lng: -73.9876, lat: 40.7661}, _ne: LngLat {lng: -73.9397, lat: 40.8002}}\n     */\n    static convert(input: LngLatBoundsLike): LngLatBounds {\n        if (!input || input instanceof LngLatBounds) return input;\n        return new LngLatBounds(input);\n    }\n}\n\n/**\n * A {@link LngLatBounds} object, an array of {@link LngLatLike} objects in [sw, ne] order,\n * or an array of numbers in [west, south, east, north] order.\n *\n * @typedef {LngLatBounds | [LngLatLike, LngLatLike] | [number, number, number, number]} LngLatBoundsLike\n * @example\n * var v1 = new mapboxgl.LngLatBounds(\n *   new mapboxgl.LngLat(-73.9876, 40.7661),\n *   new mapboxgl.LngLat(-73.9397, 40.8002)\n * );\n * var v2 = new mapboxgl.LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002])\n * var v3 = [[-73.9876, 40.7661], [-73.9397, 40.8002]];\n */\nexport type LngLatBoundsLike = LngLatBounds | [LngLatLike, LngLatLike] | [number, number, number, number];\n\nexport default LngLatBounds;\n","// @flow\n\nimport { wrap } from '../util/util';\nimport LngLatBounds from './lng_lat_bounds';\n\n/**\n * A `LngLat` object represents a given longitude and latitude coordinate, measured in degrees.\n *\n * Mapbox GL uses longitude, latitude coordinate order (as opposed to latitude, longitude) to match GeoJSON.\n *\n * Note that any Mapbox GL method that accepts a `LngLat` object as an argument or option\n * can also accept an `Array` of two numbers and will perform an implicit conversion.\n * This flexible type is documented as {@link LngLatLike}.\n *\n * @param {number} lng Longitude, measured in degrees.\n * @param {number} lat Latitude, measured in degrees.\n * @example\n * var ll = new mapboxgl.LngLat(-73.9749, 40.7736);\n * @see [Get coordinates of the mouse pointer](https://www.mapbox.com/mapbox-gl-js/example/mouse-position/)\n * @see [Display a popup](https://www.mapbox.com/mapbox-gl-js/example/popup/)\n * @see [Highlight features within a bounding box](https://www.mapbox.com/mapbox-gl-js/example/using-box-queryrenderedfeatures/)\n * @see [Create a timeline animation](https://www.mapbox.com/mapbox-gl-js/example/timeline-animation/)\n */\nclass LngLat {\n    lng: number;\n    lat: number;\n\n    constructor(lng: number, lat: number) {\n        if (isNaN(lng) || isNaN(lat)) {\n            throw new Error(`Invalid LngLat object: (${lng}, ${lat})`);\n        }\n        this.lng = +lng;\n        this.lat = +lat;\n        if (this.lat > 90 || this.lat < -90) {\n            throw new Error('Invalid LngLat latitude value: must be between -90 and 90');\n        }\n    }\n\n    /**\n     * Returns a new `LngLat` object whose longitude is wrapped to the range (-180, 180).\n     *\n     * @returns {LngLat} The wrapped `LngLat` object.\n     * @example\n     * var ll = new mapboxgl.LngLat(286.0251, 40.7736);\n     * var wrapped = ll.wrap();\n     * wrapped.lng; // = -73.9749\n     */\n    wrap() {\n        return new LngLat(wrap(this.lng, -180, 180), this.lat);\n    }\n\n    /**\n     * Returns the coordinates represented as an array of two numbers.\n     *\n     * @returns {Array<number>} The coordinates represeted as an array of longitude and latitude.\n     * @example\n     * var ll = new mapboxgl.LngLat(-73.9749, 40.7736);\n     * ll.toArray(); // = [-73.9749, 40.7736]\n     */\n    toArray() {\n        return [this.lng, this.lat];\n    }\n\n    /**\n     * Returns the coordinates represent as a string.\n     *\n     * @returns {string} The coordinates represented as a string of the format `'LngLat(lng, lat)'`.\n     * @example\n     * var ll = new mapboxgl.LngLat(-73.9749, 40.7736);\n     * ll.toString(); // = \"LngLat(-73.9749, 40.7736)\"\n     */\n    toString() {\n        return `LngLat(${this.lng}, ${this.lat})`;\n    }\n\n    /**\n     * Returns a `LngLatBounds` from the coordinates extended by a given `radius`.\n     *\n     * @param {number} [radius=0] Distance in meters from the coordinates to extend the bounds.\n     * @returns {LngLatBounds} A new `LngLatBounds` object representing the coordinates extended by the `radius`.\n     * @example\n     * var ll = new mapboxgl.LngLat(-73.9749, 40.7736);\n     * ll.toBounds(100).toArray(); // = [[-73.97501862141328, 40.77351016847229], [-73.97478137858673, 40.77368983152771]]\n     */\n    toBounds(radius?: number = 0) {\n        const earthCircumferenceInMetersAtEquator = 40075017;\n        const latAccuracy = 360 * radius / earthCircumferenceInMetersAtEquator,\n            lngAccuracy = latAccuracy / Math.cos((Math.PI / 180) * this.lat);\n\n        return new LngLatBounds(new LngLat(this.lng - lngAccuracy, this.lat - latAccuracy),\n            new LngLat(this.lng + lngAccuracy, this.lat + latAccuracy));\n    }\n\n    /**\n     * Converts an array of two numbers or an object with `lng` and `lat` or `lon` and `lat` properties\n     * to a `LngLat` object.\n     *\n     * If a `LngLat` object is passed in, the function returns it unchanged.\n     *\n     * @param {LngLatLike} input An array of two numbers or object to convert, or a `LngLat` object to return.\n     * @returns {LngLat} A new `LngLat` object, if a conversion occurred, or the original `LngLat` object.\n     * @example\n     * var arr = [-73.9749, 40.7736];\n     * var ll = mapboxgl.LngLat.convert(arr);\n     * ll;   // = LngLat {lng: -73.9749, lat: 40.7736}\n     */\n    static convert(input: LngLatLike): LngLat {\n        if (input instanceof LngLat) {\n            return input;\n        }\n        if (Array.isArray(input) && (input.length === 2 || input.length === 3)) {\n            return new LngLat(Number(input[0]), Number(input[1]));\n        }\n        if (!Array.isArray(input) && typeof input === 'object' && input !== null) {\n            return new LngLat(\n                // flow can't refine this to have one of lng or lat, so we have to cast to any\n                Number('lng' in input ? (input: any).lng : (input: any).lon),\n                Number(input.lat)\n            );\n        }\n        throw new Error(\"`LngLatLike` argument must be specified as a LngLat instance, an object {lng: <lng>, lat: <lat>}, an object {lon: <lng>, lat: <lat>}, or an array of [<lng>, <lat>]\");\n    }\n}\n\n/**\n * A {@link LngLat} object, an array of two numbers representing longitude and latitude,\n * or an object with `lng` and `lat` or `lon` and `lat` properties.\n *\n * @typedef {LngLat | {lng: number, lat: number} | {lon: number, lat: number} | [number, number]} LngLatLike\n * @example\n * var v1 = new mapboxgl.LngLat(-122.420679, 37.772537);\n * var v2 = [-122.420679, 37.772537];\n * var v3 = {lon: -122.420679, lat: 37.772537};\n */\nexport type LngLatLike = LngLat | {lng: number, lat: number} | {lon: number, lat: number} | [number, number];\n\nexport default LngLat;\n","// @flow\n\nimport LngLat from '../geo/lng_lat';\nimport type {LngLatLike} from '../geo/lng_lat';\n\n/*\n * The circumference of the world in meters at the given latitude.\n */\nfunction circumferenceAtLatitude(latitude: number) {\n    const circumference = 2 * Math.PI * 6378137;\n    return circumference * Math.cos(latitude * Math.PI / 180);\n}\n\nexport function mercatorXfromLng(lng: number) {\n    return (180 + lng) / 360;\n}\n\nexport function mercatorYfromLat(lat: number) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nexport function mercatorZfromAltitude(altitude: number, lat: number) {\n    return altitude / circumferenceAtLatitude(lat);\n}\n\nexport function lngFromMercatorX(x: number) {\n    return x * 360 - 180;\n}\n\nexport function latFromMercatorY(y: number) {\n    const y2 = 180 - y * 360;\n    return 360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90;\n}\n\nexport function altitudeFromMercatorZ(z: number, y: number) {\n    return z * circumferenceAtLatitude(latFromMercatorY(y));\n}\n\n/**\n * A `MercatorCoordinate` object represents a projected three dimensional position.\n *\n * `MercatorCoordinate` uses the web mercator projection ([EPSG:3857](https://epsg.io/3857)) with slightly different units:\n * - the size of 1 unit is the width of the projected world instead of the \"mercator meter\"\n * - the origin of the coordinate space is at the north-west corner instead of the middle\n *\n * For example, `MercatorCoordinate(0, 0, 0)` is the north-west corner of the mercator world and\n * `MercatorCoordinate(1, 1, 0)` is the south-east corner. If you are familiar with\n * [vector tiles](https://github.com/mapbox/vector-tile-spec) it may be helpful to think\n * of the coordinate space as the `0/0/0` tile with an extent of `1`.\n *\n * The `z` dimension of `MercatorCoordinate` is conformal. A cube in the mercator coordinate space would be rendered as a cube.\n *\n * @param {number} x The x component of the position.\n * @param {number} y The y component of the position.\n * @param {number} z The z component of the position.\n * @example\n * var nullIsland = new mapboxgl.MercatorCoordinate(0.5, 0.5, 0);\n *\n * @see [Add a custom style layer](https://www.mapbox.com/mapbox-gl-js/example/custom-style-layer/)\n */\nclass MercatorCoordinate {\n    x: number;\n    y: number;\n    z: number;\n\n    constructor(x: number, y: number, z: number = 0) {\n        this.x = +x;\n        this.y = +y;\n        this.z = +z;\n    }\n\n    /**\n     * Project a `LngLat` to a `MercatorCoordinate`.\n     *\n     * @param {LngLatLike} lngLatLike The location to project.\n     * @param {number} altitude The altitude in meters of the position.\n     * @returns {MercatorCoordinate} The projected mercator coordinate.\n     * @example\n     * var coord = mapboxgl.MercatorCoordinate.fromLngLat({ lng: 0, lat: 0}, 0);\n     * coord; // MercatorCoordinate(0.5, 0.5, 0)\n     */\n    static fromLngLat(lngLatLike: LngLatLike, altitude: number = 0) {\n        const lngLat = LngLat.convert(lngLatLike);\n\n        return new MercatorCoordinate(\n                mercatorXfromLng(lngLat.lng),\n                mercatorYfromLat(lngLat.lat),\n                mercatorZfromAltitude(altitude, lngLat.lat));\n    }\n\n    /**\n     * Returns the `LngLat` for the coordinate.\n     *\n     * @returns {LngLat} The `LngLat` object.\n     * @example\n     * var coord = new mapboxgl.MercatorCoordinate(0.5, 0.5, 0);\n     * var latLng = coord.toLngLat(); // LngLat(0, 0)\n     */\n    toLngLat() {\n        return new LngLat(\n                lngFromMercatorX(this.x),\n                latFromMercatorY(this.y));\n    }\n\n    /**\n     * Returns the altitude in meters of the coordinate.\n     *\n     * @returns {number} The altitude in meters.\n     * @example\n     * var coord = new mapboxgl.MercatorCoordinate(0, 0, 0.02);\n     * coord.toAltitude(); // 6914.281956295339\n     */\n    toAltitude() {\n        return altitudeFromMercatorZ(this.z, this.y);\n    }\n}\n\nexport default MercatorCoordinate;\n","// @flow\n\nimport {getTileBBox} from '@mapbox/whoots-js';\nimport EXTENT from '../data/extent';\nimport Point from '@mapbox/point-geometry';\nimport MercatorCoordinate from '../geo/mercator_coordinate';\n\nimport assert from 'assert';\nimport { register } from '../util/web_worker_transfer';\n\nexport class CanonicalTileID {\n    z: number;\n    x: number;\n    y: number;\n    key: number;\n\n    constructor(z: number, x: number, y: number) {\n        assert(z >= 0 && z <= 25);\n        assert(x >= 0 && x < Math.pow(2, z));\n        assert(y >= 0 && y < Math.pow(2, z));\n        this.z = z;\n        this.x = x;\n        this.y = y;\n        this.key = calculateKey(0, z, x, y);\n    }\n\n    equals(id: CanonicalTileID) {\n        return this.z === id.z && this.x === id.x && this.y === id.y;\n    }\n\n    // given a list of urls, choose a url template and return a tile URL\n    url(urls: Array<string>, scheme: ?string) {\n        const bbox = getTileBBox(this.x, this.y, this.z);\n        const quadkey = getQuadkey(this.z, this.x, this.y);\n\n        return urls[(this.x + this.y) % urls.length]\n            .replace('{prefix}', (this.x % 16).toString(16) + (this.y % 16).toString(16))\n            .replace('{z}', String(this.z))\n            .replace('{x}', String(this.x))\n            .replace('{y}', String(scheme === 'tms' ? (Math.pow(2, this.z) - this.y - 1) : this.y))\n            .replace('{quadkey}', quadkey)\n            .replace('{bbox-epsg-3857}', bbox);\n    }\n\n    getTilePoint(coord: MercatorCoordinate) {\n        const tilesAtZoom = Math.pow(2, this.z);\n        return new Point(\n            (coord.x * tilesAtZoom - this.x) * EXTENT,\n            (coord.y * tilesAtZoom - this.y) * EXTENT);\n    }\n}\n\nexport class UnwrappedTileID {\n    wrap: number;\n    canonical: CanonicalTileID;\n    key: number;\n\n    constructor(wrap: number, canonical: CanonicalTileID) {\n        this.wrap = wrap;\n        this.canonical = canonical;\n        this.key = calculateKey(wrap, canonical.z, canonical.x, canonical.y);\n    }\n}\n\nexport class OverscaledTileID {\n    overscaledZ: number;\n    wrap: number;\n    canonical: CanonicalTileID;\n    key: number;\n    posMatrix: Float32Array;\n\n    constructor(overscaledZ: number, wrap: number, z: number, x: number, y: number) {\n        assert(overscaledZ >= z);\n        this.overscaledZ = overscaledZ;\n        this.wrap = wrap;\n        this.canonical = new CanonicalTileID(z, +x, +y);\n        this.key = calculateKey(wrap, overscaledZ, x, y);\n    }\n\n    equals(id: OverscaledTileID) {\n        return this.overscaledZ === id.overscaledZ && this.wrap === id.wrap && this.canonical.equals(id.canonical);\n    }\n\n    scaledTo(targetZ: number) {\n        assert(targetZ <= this.overscaledZ);\n        const zDifference = this.canonical.z - targetZ;\n        if (targetZ > this.canonical.z) {\n            return new OverscaledTileID(targetZ, this.wrap, this.canonical.z, this.canonical.x, this.canonical.y);\n        } else {\n            return new OverscaledTileID(targetZ, this.wrap, targetZ, this.canonical.x >> zDifference, this.canonical.y >> zDifference);\n        }\n    }\n\n    isChildOf(parent: OverscaledTileID) {\n        if (parent.wrap !== this.wrap) {\n            // We can't be a child if we're in a different world copy\n            return false;\n        }\n        const zDifference = this.canonical.z - parent.canonical.z;\n        // We're first testing for z == 0, to avoid a 32 bit shift, which is undefined.\n        return parent.overscaledZ === 0 || (\n            parent.overscaledZ < this.overscaledZ &&\n                parent.canonical.x === (this.canonical.x >> zDifference) &&\n                parent.canonical.y === (this.canonical.y >> zDifference));\n    }\n\n    children(sourceMaxZoom: number) {\n        if (this.overscaledZ >= sourceMaxZoom) {\n            // return a single tile coord representing a an overscaled tile\n            return [new OverscaledTileID(this.overscaledZ + 1, this.wrap, this.canonical.z, this.canonical.x, this.canonical.y)];\n        }\n\n        const z = this.canonical.z + 1;\n        const x = this.canonical.x * 2;\n        const y = this.canonical.y * 2;\n        return [\n            new OverscaledTileID(z, this.wrap, z, x, y),\n            new OverscaledTileID(z, this.wrap, z, x + 1, y),\n            new OverscaledTileID(z, this.wrap, z, x, y + 1),\n            new OverscaledTileID(z, this.wrap, z, x + 1, y + 1)\n        ];\n    }\n\n    isLessThan(rhs: OverscaledTileID) {\n        if (this.wrap < rhs.wrap) return true;\n        if (this.wrap > rhs.wrap) return false;\n\n        if (this.overscaledZ < rhs.overscaledZ) return true;\n        if (this.overscaledZ > rhs.overscaledZ) return false;\n\n        if (this.canonical.x < rhs.canonical.x) return true;\n        if (this.canonical.x > rhs.canonical.x) return false;\n\n        if (this.canonical.y < rhs.canonical.y) return true;\n        return false;\n    }\n\n    wrapped() {\n        return new OverscaledTileID(this.overscaledZ, 0, this.canonical.z, this.canonical.x, this.canonical.y);\n    }\n\n    unwrapTo(wrap: number) {\n        return new OverscaledTileID(this.overscaledZ, wrap, this.canonical.z, this.canonical.x, this.canonical.y);\n    }\n\n    overscaleFactor() {\n        return Math.pow(2, this.overscaledZ - this.canonical.z);\n    }\n\n    toUnwrapped() {\n        return new UnwrappedTileID(this.wrap, this.canonical);\n    }\n\n    toString() {\n        return `${this.overscaledZ}/${this.canonical.x}/${this.canonical.y}`;\n    }\n\n    getTilePoint(coord: MercatorCoordinate) {\n        return this.canonical.getTilePoint(new MercatorCoordinate(coord.x - this.wrap, coord.y));\n    }\n}\n\nfunction calculateKey(wrap: number, z: number, x: number, y: number) {\n    wrap *= 2;\n    if (wrap < 0) wrap = wrap * -1 - 1;\n    const dim = 1 << z;\n    return ((dim * dim * wrap + dim * y + x) * 32) + z;\n}\n\n\nfunction getQuadkey(z, x, y) {\n    let quadkey = '', mask;\n    for (let i = z; i > 0; i--) {\n        mask = 1 << (i - 1);\n        quadkey += ((x & mask ? 1 : 0) + (y & mask ? 2 : 0));\n    }\n    return quadkey;\n}\n\nregister('CanonicalTileID', CanonicalTileID);\nregister('OverscaledTileID', OverscaledTileID, {omit: ['posMatrix']});\n","// @flow\n\nimport LngLatBounds from '../geo/lng_lat_bounds';\nimport {mercatorXfromLng, mercatorYfromLat} from '../geo/mercator_coordinate';\n\nimport type {CanonicalTileID} from './tile_id';\n\nclass TileBounds {\n    bounds: LngLatBounds;\n    minzoom: number;\n    maxzoom: number;\n\n    constructor(bounds: [number, number, number, number], minzoom: ?number, maxzoom: ?number) {\n        this.bounds = LngLatBounds.convert(this.validateBounds(bounds));\n        this.minzoom = minzoom || 0;\n        this.maxzoom = maxzoom || 24;\n    }\n\n    validateBounds(bounds: [number, number, number, number]) {\n        // make sure the bounds property contains valid longitude and latitudes\n        if (!Array.isArray(bounds) || bounds.length !== 4) return [-180, -90, 180, 90];\n        return [Math.max(-180, bounds[0]), Math.max(-90, bounds[1]), Math.min(180, bounds[2]), Math.min(90, bounds[3])];\n    }\n\n    contains(tileID: CanonicalTileID) {\n        const worldSize = Math.pow(2, tileID.z);\n        const level = {\n            minX: Math.floor(mercatorXfromLng(this.bounds.getWest()) * worldSize),\n            minY: Math.floor(mercatorYfromLat(this.bounds.getNorth()) * worldSize),\n            maxX: Math.ceil(mercatorXfromLng(this.bounds.getEast()) * worldSize),\n            maxY: Math.ceil(mercatorYfromLat(this.bounds.getSouth()) * worldSize)\n        };\n        const hit = tileID.x >= level.minX && tileID.x < level.maxX && tileID.y >= level.minY && tileID.y < level.maxY;\n        return hit;\n    }\n}\n\nexport default TileBounds;\n","// @flow\n\nimport { extend, pick } from '../util/util';\n\nimport { getImage, ResourceType } from '../util/ajax';\nimport { Event, ErrorEvent, Evented } from '../util/evented';\nimport loadTileJSON from './load_tilejson';\nimport { normalizeTileURL as normalizeURL, postTurnstileEvent, postMapLoadEvent } from '../util/mapbox';\nimport TileBounds from './tile_bounds';\nimport Texture from '../render/texture';\n\nimport type {Source} from './source';\nimport type {OverscaledTileID} from './tile_id';\nimport type Map from '../ui/map';\nimport type Dispatcher from '../util/dispatcher';\nimport type Tile from './tile';\nimport type {Callback} from '../types/callback';\nimport type {Cancelable} from '../types/cancelable';\nimport type {\n    RasterSourceSpecification,\n    RasterDEMSourceSpecification\n} from '../style-spec/types';\n\nclass RasterTileSource extends Evented implements Source {\n    type: 'raster' | 'raster-dem';\n    id: string;\n    minzoom: number;\n    maxzoom: number;\n    url: string;\n    scheme: string;\n    tileSize: number;\n\n    bounds: ?[number, number, number, number];\n    tileBounds: TileBounds;\n    roundZoom: boolean;\n    dispatcher: Dispatcher;\n    map: Map;\n    tiles: Array<string>;\n\n    _loaded: boolean;\n    _options: RasterSourceSpecification | RasterDEMSourceSpecification;\n    _tileJSONRequest: ?Cancelable;\n\n    constructor(id: string, options: RasterSourceSpecification | RasterDEMSourceSpecification, dispatcher: Dispatcher, eventedParent: Evented) {\n        super();\n        this.id = id;\n        this.dispatcher = dispatcher;\n        this.setEventedParent(eventedParent);\n\n        this.type = 'raster';\n        this.minzoom = 0;\n        this.maxzoom = 22;\n        this.roundZoom = true;\n        this.scheme = 'xyz';\n        this.tileSize = 512;\n        this._loaded = false;\n\n        this._options = extend({}, options);\n        extend(this, pick(options, ['url', 'scheme', 'tileSize']));\n    }\n\n    load() {\n        this.fire(new Event('dataloading', {dataType: 'source'}));\n        this._tileJSONRequest = loadTileJSON(this._options, this.map._transformRequest, (err, tileJSON) => {\n            this._tileJSONRequest = null;\n            if (err) {\n                this.fire(new ErrorEvent(err));\n            } else if (tileJSON) {\n                extend(this, tileJSON);\n                if (tileJSON.bounds) this.tileBounds = new TileBounds(tileJSON.bounds, this.minzoom, this.maxzoom);\n\n                postTurnstileEvent(tileJSON.tiles);\n                postMapLoadEvent(tileJSON.tiles, this.map._getMapId());\n\n                // `content` is included here to prevent a race condition where `Style#_updateSources` is called\n                // before the TileJSON arrives. this makes sure the tiles needed are loaded once TileJSON arrives\n                // ref: https://github.com/mapbox/mapbox-gl-js/pull/4347#discussion_r104418088\n                this.fire(new Event('data', {dataType: 'source', sourceDataType: 'metadata'}));\n                this.fire(new Event('data', {dataType: 'source', sourceDataType: 'content'}));\n            }\n        });\n    }\n\n    onAdd(map: Map) {\n        this.map = map;\n        this.load();\n    }\n\n    onRemove() {\n        if (this._tileJSONRequest) {\n            this._tileJSONRequest.cancel();\n            this._tileJSONRequest = null;\n        }\n    }\n\n    serialize() {\n        return extend({}, this._options);\n    }\n\n    hasTile(tileID: OverscaledTileID) {\n        return !this.tileBounds || this.tileBounds.contains(tileID.canonical);\n    }\n\n    loadTile(tile: Tile, callback: Callback<void>) {\n        const url = normalizeURL(tile.tileID.canonical.url(this.tiles, this.scheme), this.url, this.tileSize);\n        tile.request = getImage(this.map._transformRequest(url, ResourceType.Tile), (err, img) => {\n            delete tile.request;\n\n            if (tile.aborted) {\n                tile.state = 'unloaded';\n                callback(null);\n            } else if (err) {\n                tile.state = 'errored';\n                callback(err);\n            } else if (img) {\n                if (this.map._refreshExpiredTiles) tile.setExpiryData(img);\n                delete (img: any).cacheControl;\n                delete (img: any).expires;\n\n                const context = this.map.painter.context;\n                const gl = context.gl;\n                tile.texture = this.map.painter.getTileTexture(img.width);\n                if (tile.texture) {\n                    tile.texture.update(img, { useMipmap: true });\n                } else {\n                    tile.texture = new Texture(context, img, gl.RGBA, { useMipmap: true });\n                    tile.texture.bind(gl.LINEAR, gl.CLAMP_TO_EDGE, gl.LINEAR_MIPMAP_NEAREST);\n\n                    if (context.extTextureFilterAnisotropic) {\n                        gl.texParameterf(gl.TEXTURE_2D, context.extTextureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT, context.extTextureFilterAnisotropicMax);\n                    }\n                }\n\n                tile.state = 'loaded';\n\n                callback(null);\n            }\n        });\n    }\n\n    abortTile(tile: Tile, callback: Callback<void>) {\n        if (tile.request) {\n            tile.request.cancel();\n            delete tile.request;\n        }\n        callback();\n    }\n\n    unloadTile(tile: Tile, callback: Callback<void>) {\n        if (tile.texture) this.map.painter.saveTileTexture(tile.texture);\n        callback();\n    }\n\n    hasTransition() {\n        return false;\n    }\n}\n\nexport default RasterTileSource;\n","// @flow\nimport { RGBAImage } from '../util/image';\n\nimport { warnOnce } from '../util/util';\nimport { register } from '../util/web_worker_transfer';\n\n// DEMData is a data structure for decoding, backfilling, and storing elevation data for processing in the hillshade shaders\n// data can be populated either from a pngraw image tile or from serliazed data sent back from a worker. When data is initially\n// loaded from a image tile, we decode the pixel values using the appropriate decoding formula, but we store the\n// elevation data as an Int32 value. we add 65536 (2^16) to eliminate negative values and enable the use of\n// integer overflow when creating the texture used in the hillshadePrepare step.\n\n// DEMData also handles the backfilling of data from a tile's neighboring tiles. This is necessary because we use a pixel's 8\n// surrounding pixel values to compute the slope at that pixel, and we cannot accurately calculate the slope at pixels on a\n// tile's edge without backfilling from neighboring tiles.\n\nexport default class DEMData {\n    uid: string;\n    data: Int32Array;\n    stride: number;\n    dim: number;\n\n    constructor(uid: string, data: RGBAImage, encoding: \"mapbox\" | \"terrarium\") {\n        this.uid = uid;\n        if (data.height !== data.width) throw new RangeError('DEM tiles must be square');\n        if (encoding && encoding !== \"mapbox\" && encoding !== \"terrarium\") return warnOnce(\n            `\"${encoding}\" is not a valid encoding type. Valid types include \"mapbox\" and \"terrarium\".`\n        );\n        const dim = this.dim = data.height;\n        this.stride = this.dim + 2;\n        this.data = new Int32Array(this.stride * this.stride);\n\n        const pixels = data.data;\n        const unpack = encoding === \"terrarium\" ? this._unpackTerrarium : this._unpackMapbox;\n        for (let y = 0; y < dim; y++) {\n            for (let x = 0; x < dim; x++) {\n                const i = y * dim + x;\n                const j = i * 4;\n                this.set(x, y, unpack(pixels[j], pixels[j + 1], pixels[j + 2]));\n            }\n        }\n\n        // in order to avoid flashing seams between tiles, here we are initially populating a 1px border of pixels around the image\n        // with the data of the nearest pixel from the image. this data is eventually replaced when the tile's neighboring\n        // tiles are loaded and the accurate data can be backfilled using DEMData#backfillBorder\n        for (let x = 0; x < dim; x++) {\n            // left vertical border\n            this.set(-1, x, this.get(0, x));\n            // right vertical border\n            this.set(dim, x, this.get(dim - 1, x));\n            // left horizontal border\n            this.set(x, -1, this.get(x, 0));\n            // right horizontal border\n            this.set(x, dim, this.get(x, dim - 1));\n        }\n        // corners\n        this.set(-1, -1, this.get(0, 0));\n        this.set(dim, -1, this.get(dim - 1, 0));\n        this.set(-1, dim, this.get(0, dim - 1));\n        this.set(dim, dim, this.get(dim - 1, dim - 1));\n    }\n\n    set(x: number, y: number, value: number) {\n        this.data[this._idx(x, y)] = value + 65536;\n    }\n\n    get(x: number, y: number) {\n        return this.data[this._idx(x, y)] - 65536;\n    }\n\n    _idx(x: number, y: number) {\n        if (x < -1 || x >= this.dim + 1 ||  y < -1 || y >= this.dim + 1) throw new RangeError('out of range source coordinates for DEM data');\n        return (y + 1) * this.stride + (x + 1);\n    }\n\n    _unpackMapbox(r: number, g: number, b: number) {\n        // unpacking formula for mapbox.terrain-rgb:\n        // https://www.mapbox.com/help/access-elevation-data/#mapbox-terrain-rgb\n        return ((r * 256 * 256 + g * 256.0 + b) / 10.0 - 10000.0);\n    }\n\n    _unpackTerrarium(r: number, g: number, b: number) {\n        // unpacking formula for mapzen terrarium:\n        // https://aws.amazon.com/public-datasets/terrain/\n        return ((r * 256 + g + b / 256) - 32768.0);\n    }\n\n    getPixels() {\n        return new RGBAImage({width: this.stride, height: this.stride}, new Uint8Array(this.data.buffer));\n    }\n\n    backfillBorder(borderTile: DEMData, dx: number, dy: number) {\n        if (this.dim !== borderTile.dim) throw new Error('dem dimension mismatch');\n\n        let xMin = dx * this.dim,\n            xMax = dx * this.dim + this.dim,\n            yMin = dy * this.dim,\n            yMax = dy * this.dim + this.dim;\n\n        switch (dx) {\n        case -1:\n            xMin = xMax - 1;\n            break;\n        case 1:\n            xMax = xMin + 1;\n            break;\n        }\n\n        switch (dy) {\n        case -1:\n            yMin = yMax - 1;\n            break;\n        case 1:\n            yMax = yMin + 1;\n            break;\n        }\n\n        const ox = -dx * this.dim;\n        const oy = -dy * this.dim;\n        for (let y = yMin; y < yMax; y++) {\n            for (let x = xMin; x < xMax; x++) {\n                this.set(x, y, borderTile.get(x + ox, y + oy));\n            }\n        }\n    }\n}\n\nregister('DEMData', DEMData);\n","// @flow\n\nimport assert from 'assert';\n\nclass DictionaryCoder {\n    _stringToNumber: { [string]: number };\n    _numberToString: Array<string>;\n\n    constructor(strings: Array<string>) {\n        this._stringToNumber = {};\n        this._numberToString = [];\n        for (let i = 0; i < strings.length; i++) {\n            const string = strings[i];\n            this._stringToNumber[string] = i;\n            this._numberToString[i] = string;\n        }\n    }\n\n    encode(string: string) {\n        assert(string in this._stringToNumber);\n        return this._stringToNumber[string];\n    }\n\n    decode(n: number) {\n        assert(n < this._numberToString.length);\n        return this._numberToString[n];\n    }\n}\n\nexport default DictionaryCoder;\n","// @flow\nimport type {GeoJSONGeometry} from '@mapbox/geojson-types';\n\nclass Feature {\n    type: 'Feature';\n    _geometry: ?GeoJSONGeometry;\n    properties: {};\n    id: number | string | void;\n\n    _vectorTileFeature: VectorTileFeature;\n\n    constructor(vectorTileFeature: VectorTileFeature, z: number, x: number, y: number) {\n        this.type = 'Feature';\n\n        this._vectorTileFeature = vectorTileFeature;\n        (vectorTileFeature: any)._z = z;\n        (vectorTileFeature: any)._x = x;\n        (vectorTileFeature: any)._y = y;\n\n        this.properties = vectorTileFeature.properties;\n\n        if (vectorTileFeature.id != null) {\n            this.id = vectorTileFeature.id;\n        }\n    }\n\n    get geometry(): ?GeoJSONGeometry {\n        if (this._geometry === undefined) {\n            this._geometry = this._vectorTileFeature.toGeoJSON(\n                (this._vectorTileFeature: any)._x,\n                (this._vectorTileFeature: any)._y,\n                (this._vectorTileFeature: any)._z).geometry;\n        }\n        return this._geometry;\n    }\n\n    set geometry(g: ?GeoJSONGeometry) {\n        this._geometry = g;\n    }\n\n    toJSON() {\n        const json = {\n            geometry: this.geometry\n        };\n        for (const i in this) {\n            if (i === '_geometry' || i === '_vectorTileFeature') continue;\n            json[i] = (this: any)[i];\n        }\n        return json;\n    }\n}\n\nexport default Feature;\n","// @flow\n\nimport { extend } from '../util/util';\nimport Tile from './tile';\nimport type {FeatureState} from '../style-spec/expression';\n\nexport type FeatureStates = {[feature_id: string]: FeatureState};\nexport type LayerFeatureStates = {[layer: string]: FeatureStates};\n\n/**\n * SourceFeatureState manages the state and pending changes\n * to features in a source, separated by source layer.\n * stateChanges and deletedStates batch all changes to the tile (updates and removes, respectively)\n * between coalesce() events. addFeatureState() and removeFeatureState() also update their counterpart's\n * list of changes, such that coalesce() can apply the proper state changes while agnostic to the order of operations.\n * In deletedStates, all null's denote complete removal of state at that scope\n * @private\n*/\nclass SourceFeatureState {\n    state: LayerFeatureStates;\n    stateChanges: LayerFeatureStates;\n    deletedStates: {};\n\n    constructor() {\n        this.state = {};\n        this.stateChanges = {};\n        this.deletedStates = {};\n    }\n\n    updateState(sourceLayer: string, featureId: number, newState: Object) {\n        const feature = String(featureId);\n        this.stateChanges[sourceLayer] = this.stateChanges[sourceLayer] || {};\n        this.stateChanges[sourceLayer][feature] = this.stateChanges[sourceLayer][feature] || {};\n        extend(this.stateChanges[sourceLayer][feature], newState);\n\n        if (this.deletedStates[sourceLayer] === null) {\n            this.deletedStates[sourceLayer] = {};\n            for (const ft in this.state[sourceLayer]) {\n                if (ft !== feature) this.deletedStates[sourceLayer][ft] = null;\n            }\n        } else {\n            const featureDeletionQueued = this.deletedStates[sourceLayer] && this.deletedStates[sourceLayer][feature] === null;\n            if (featureDeletionQueued) {\n                this.deletedStates[sourceLayer][feature] = {};\n                for (const prop in this.state[sourceLayer][feature]) {\n                    if (!newState[prop]) this.deletedStates[sourceLayer][feature][prop] = null;\n                }\n            } else {\n                for (const key in newState) {\n                    const deletionInQueue = this.deletedStates[sourceLayer] && this.deletedStates[sourceLayer][feature] && this.deletedStates[sourceLayer][feature][key] === null;\n                    if (deletionInQueue) delete this.deletedStates[sourceLayer][feature][key];\n                }\n            }\n        }\n    }\n\n    removeFeatureState(sourceLayer: string, featureId?: number, key?: string) {\n        const sourceLayerDeleted = this.deletedStates[sourceLayer] === null;\n        if (sourceLayerDeleted) return;\n\n        const feature = String(featureId);\n\n        this.deletedStates[sourceLayer] = this.deletedStates[sourceLayer] || {};\n\n        if (key && featureId) {\n            if (this.deletedStates[sourceLayer][feature] !== null) {\n                this.deletedStates[sourceLayer][feature] = this.deletedStates[sourceLayer][feature] || {};\n                this.deletedStates[sourceLayer][feature][key] = null;\n            }\n        } else if (featureId) {\n            const updateInQueue = this.stateChanges[sourceLayer] && this.stateChanges[sourceLayer][feature];\n            if (updateInQueue) {\n                this.deletedStates[sourceLayer][feature] = {};\n                for (key in this.stateChanges[sourceLayer][feature]) this.deletedStates[sourceLayer][feature][key] = null;\n\n            } else {\n                this.deletedStates[sourceLayer][feature] = null;\n            }\n        } else {\n            this.deletedStates[sourceLayer] = null;\n        }\n\n    }\n\n    getState(sourceLayer: string, featureId: number) {\n        const feature = String(featureId);\n        const base = this.state[sourceLayer] || {};\n        const changes = this.stateChanges[sourceLayer] || {};\n\n        const reconciledState = extend({}, base[feature], changes[feature]);\n\n        //return empty object if the whole source layer is awaiting deletion\n        if (this.deletedStates[sourceLayer] === null) return {};\n        else if (this.deletedStates[sourceLayer]) {\n            const featureDeletions = this.deletedStates[sourceLayer][featureId];\n            if (featureDeletions === null) return {};\n            for (const prop in featureDeletions) delete reconciledState[prop];\n        }\n        return reconciledState;\n    }\n\n    initializeTileState(tile: Tile, painter: any) {\n        tile.setFeatureState(this.state, painter);\n    }\n\n    coalesceChanges(tiles: {[any]: Tile}, painter: any) {\n        //track changes with full state objects, but only for features that got modified\n        const featuresChanged: LayerFeatureStates = {};\n\n        for (const sourceLayer in this.stateChanges) {\n            this.state[sourceLayer]  = this.state[sourceLayer] || {};\n            const layerStates = {};\n            for (const feature in this.stateChanges[sourceLayer]) {\n                if (!this.state[sourceLayer][feature]) this.state[sourceLayer][feature] = {};\n                extend(this.state[sourceLayer][feature], this.stateChanges[sourceLayer][feature]);\n                layerStates[feature] = this.state[sourceLayer][feature];\n            }\n            featuresChanged[sourceLayer] = layerStates;\n        }\n\n        for (const sourceLayer in this.deletedStates) {\n            this.state[sourceLayer]  = this.state[sourceLayer] || {};\n            const layerStates = {};\n\n            if (this.deletedStates[sourceLayer] === null) {\n                for (const ft in this.state[sourceLayer]) layerStates[ft] = {};\n                this.state[sourceLayer] = {};\n            } else {\n                for (const feature in this.deletedStates[sourceLayer]) {\n                    const deleteWholeFeatureState = this.deletedStates[sourceLayer][feature] === null;\n                    if (deleteWholeFeatureState) this.state[sourceLayer][feature] = {};\n                    else {\n                        for (const key of Object.keys(this.deletedStates[sourceLayer][feature])) {\n                            delete this.state[sourceLayer][feature][key];\n                        }\n                    }\n                    layerStates[feature] = this.state[sourceLayer][feature];\n                }\n            }\n\n            featuresChanged[sourceLayer] = featuresChanged[sourceLayer] || {};\n            extend(featuresChanged[sourceLayer], layerStates);\n        }\n\n        this.stateChanges = {};\n        this.deletedStates = {};\n\n        if (Object.keys(featuresChanged).length === 0) return;\n\n        for (const id in tiles) {\n            const tile = tiles[id];\n            tile.setFeatureState(featuresChanged, painter);\n        }\n    }\n}\n\nexport default SourceFeatureState;\n","\nimport refProperties from './util/ref_properties';\n\nfunction stringify(obj) {\n    const type = typeof obj;\n    if (type === 'number' || type === 'boolean' || type === 'string' || obj === undefined || obj === null)\n        return JSON.stringify(obj);\n\n    if (Array.isArray(obj)) {\n        let str = '[';\n        for (const val of obj) {\n            str += `${stringify(val)},`;\n        }\n        return `${str}]`;\n    }\n\n    const keys = Object.keys(obj).sort();\n\n    let str = '{';\n    for (let i = 0; i < keys.length; i++) {\n        str += `${JSON.stringify(keys[i])}:${stringify(obj[keys[i]])},`;\n    }\n    return `${str}}`;\n}\n\nfunction getKey(layer) {\n    let key = '';\n    for (const k of refProperties) {\n        key += `/${stringify(layer[k])}`;\n    }\n    return key;\n}\n\nexport default groupByLayout;\n\n/**\n * Given an array of layers, return an array of arrays of layers where all\n * layers in each group have identical layout-affecting properties. These\n * are the properties that were formerly used by explicit `ref` mechanism\n * for layers: 'type', 'source', 'source-layer', 'minzoom', 'maxzoom',\n * 'filter', and 'layout'.\n *\n * The input is not modified. The output layers are references to the\n * input layers.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Array<Layer>>}\n */\nfunction groupByLayout(layers) {\n    const groups = {};\n\n    for (let i = 0; i < layers.length; i++) {\n        const k = getKey(layers[i]);\n        let group = groups[k];\n        if (!group) {\n            group = groups[k] = [];\n        }\n        group.push(layers[i]);\n    }\n\n    const result = [];\n\n    for (const k in groups) {\n        result.push(groups[k]);\n    }\n\n    return result;\n}\n","// @flow\n\nimport StyleLayer from './style_layer';\nimport createStyleLayer from './create_style_layer';\n\nimport { values } from '../util/util';\nimport featureFilter from '../style-spec/feature_filter';\nimport groupByLayout from '../style-spec/group_by_layout';\n\nimport type {TypedStyleLayer} from './style_layer/typed_style_layer';\nimport type {LayerSpecification} from '../style-spec/types';\n\nexport type LayerConfigs = { [string]: LayerSpecification };\nexport type Family<Layer: TypedStyleLayer> = Array<Layer>;\n\nclass StyleLayerIndex {\n    familiesBySource: { [source: string]: { [sourceLayer: string]: Array<Family<*>> } };\n\n    _layerConfigs: LayerConfigs;\n    _layers: { [string]: StyleLayer };\n\n    constructor(layerConfigs: ?Array<LayerSpecification>) {\n        if (layerConfigs) {\n            this.replace(layerConfigs);\n        }\n    }\n\n    replace(layerConfigs: Array<LayerSpecification>) {\n        this._layerConfigs = {};\n        this._layers = {};\n        this.update(layerConfigs, []);\n    }\n\n    update(layerConfigs: Array<LayerSpecification>, removedIds: Array<string>) {\n        for (const layerConfig of layerConfigs) {\n            this._layerConfigs[layerConfig.id] = layerConfig;\n\n            const layer = this._layers[layerConfig.id] = createStyleLayer(layerConfig);\n            layer._featureFilter = featureFilter(layer.filter);\n        }\n        for (const id of removedIds) {\n            delete this._layerConfigs[id];\n            delete this._layers[id];\n        }\n\n        this.familiesBySource = {};\n\n        const groups = groupByLayout(values(this._layerConfigs));\n\n        for (const layerConfigs of groups) {\n            const layers = layerConfigs.map((layerConfig) => this._layers[layerConfig.id]);\n\n            const layer = layers[0];\n            if (layer.visibility === 'none') {\n                continue;\n            }\n\n            const sourceId = layer.source || '';\n            let sourceGroup = this.familiesBySource[sourceId];\n            if (!sourceGroup) {\n                sourceGroup = this.familiesBySource[sourceId] = {};\n            }\n\n            const sourceLayerId = layer.sourceLayer || '_geojsonTileLayer';\n            let sourceLayerFamilies = sourceGroup[sourceLayerId];\n            if (!sourceLayerFamilies) {\n                sourceLayerFamilies = sourceGroup[sourceLayerId] = [];\n            }\n\n            sourceLayerFamilies.push(layers);\n        }\n    }\n}\n\nexport default StyleLayerIndex;\n","// @flow\n\nexport default checkMaxAngle;\n\nimport type Point from '@mapbox/point-geometry';\nimport type Anchor from './anchor';\n\n/**\n * Labels placed around really sharp angles aren't readable. Check if any\n * part of the potential label has a combined angle that is too big.\n *\n * @param line\n * @param anchor The point on the line around which the label is anchored.\n * @param labelLength The length of the label in geometry units.\n * @param windowSize The check fails if the combined angles within a part of the line that is `windowSize` long is too big.\n * @param maxAngle The maximum combined angle that any window along the label is allowed to have.\n *\n * @returns {boolean} whether the label should be placed\n * @private\n */\nfunction checkMaxAngle(line: Array<Point>, anchor: Anchor, labelLength: number, windowSize: number, maxAngle: number) {\n\n    // horizontal labels always pass\n    if (anchor.segment === undefined) return true;\n\n    let p = anchor;\n    let index = anchor.segment + 1;\n    let anchorDistance = 0;\n\n    // move backwards along the line to the first segment the label appears on\n    while (anchorDistance > -labelLength / 2) {\n        index--;\n\n        // there isn't enough room for the label after the beginning of the line\n        if (index < 0) return false;\n\n        anchorDistance -= line[index].dist(p);\n        p = line[index];\n    }\n\n    anchorDistance += line[index].dist(line[index + 1]);\n    index++;\n\n    // store recent corners and their total angle difference\n    const recentCorners = [];\n    let recentAngleDelta = 0;\n\n    // move forwards by the length of the label and check angles along the way\n    while (anchorDistance < labelLength / 2) {\n        const prev = line[index - 1];\n        const current = line[index];\n        const next = line[index + 1];\n\n        // there isn't enough room for the label before the end of the line\n        if (!next) return false;\n\n        let angleDelta = prev.angleTo(current) - current.angleTo(next);\n        // restrict angle to -pi..pi range\n        angleDelta = Math.abs(((angleDelta + 3 * Math.PI) % (Math.PI * 2)) - Math.PI);\n\n        recentCorners.push({\n            distance: anchorDistance,\n            angleDelta\n        });\n        recentAngleDelta += angleDelta;\n\n        // remove corners that are far enough away from the list of recent anchors\n        while (anchorDistance - recentCorners[0].distance > windowSize) {\n            recentAngleDelta -= recentCorners.shift().angleDelta;\n        }\n\n        // the sum of angles within the window area exceeds the maximum allowed value. check fails.\n        if (recentAngleDelta > maxAngle) return false;\n\n        index++;\n        anchorDistance += current.dist(next);\n    }\n\n    // no part of the line had an angle greater than the maximum allowed. check passes.\n    return true;\n}\n","// @flow\n\nimport { number as interpolate } from '../style-spec/util/interpolate';\n\nimport Anchor from '../symbol/anchor';\nimport checkMaxAngle from './check_max_angle';\n\nimport type Point from '@mapbox/point-geometry';\nimport type {Shaping, PositionedIcon} from './shaping';\n\nexport { getAnchors, getCenterAnchor };\n\nfunction getLineLength(line: Array<Point>): number {\n    let lineLength = 0;\n    for (let k = 0; k < line.length - 1; k++) {\n        lineLength += line[k].dist(line[k + 1]);\n    }\n    return lineLength;\n}\n\nfunction getAngleWindowSize(shapedText: ?Shaping,\n                            glyphSize: number,\n                            boxScale: number): number {\n    return shapedText ?\n        3 / 5 * glyphSize * boxScale :\n        0;\n}\n\nfunction getShapedLabelLength(shapedText: ?Shaping, shapedIcon: ?PositionedIcon): number {\n    return Math.max(\n        shapedText ? shapedText.right - shapedText.left : 0,\n        shapedIcon ? shapedIcon.right - shapedIcon.left : 0);\n}\n\nfunction getCenterAnchor(line: Array<Point>,\n                         maxAngle: number,\n                         shapedText: ?Shaping,\n                         shapedIcon: ?PositionedIcon,\n                         glyphSize: number,\n                         boxScale: number) {\n    const angleWindowSize = getAngleWindowSize(shapedText, glyphSize, boxScale);\n    const labelLength = getShapedLabelLength(shapedText, shapedIcon) * boxScale;\n\n    let prevDistance = 0;\n    const centerDistance = getLineLength(line) / 2;\n\n    for (let i = 0; i < line.length - 1; i++) {\n\n        const a = line[i],\n            b = line[i + 1];\n\n        const segmentDistance = a.dist(b);\n\n        if (prevDistance + segmentDistance > centerDistance) {\n            // The center is on this segment\n            const t = (centerDistance - prevDistance) / segmentDistance,\n                x = interpolate(a.x, b.x, t),\n                y = interpolate(a.y, b.y, t);\n\n            const anchor = new Anchor(x, y, b.angleTo(a), i);\n            anchor._round();\n            if (!angleWindowSize || checkMaxAngle(line, anchor, labelLength, angleWindowSize, maxAngle)) {\n                return anchor;\n            } else {\n                return;\n            }\n        }\n\n        prevDistance += segmentDistance;\n    }\n}\n\nfunction getAnchors(line: Array<Point>,\n                    spacing: number,\n                    maxAngle: number,\n                    shapedText: ?Shaping,\n                    shapedIcon: ?PositionedIcon,\n                    glyphSize: number,\n                    boxScale: number,\n                    overscaling: number,\n                    tileExtent: number) {\n\n    // Resample a line to get anchor points for labels and check that each\n    // potential label passes text-max-angle check and has enough froom to fit\n    // on the line.\n\n    const angleWindowSize = getAngleWindowSize(shapedText, glyphSize, boxScale);\n    const shapedLabelLength = getShapedLabelLength(shapedText, shapedIcon);\n    const labelLength = shapedLabelLength * boxScale;\n\n    // Is the line continued from outside the tile boundary?\n    const isLineContinued = line[0].x === 0 || line[0].x === tileExtent || line[0].y === 0 || line[0].y === tileExtent;\n\n    // Is the label long, relative to the spacing?\n    // If so, adjust the spacing so there is always a minimum space of `spacing / 4` between label edges.\n    if (spacing - labelLength < spacing / 4) {\n        spacing = labelLength + spacing / 4;\n    }\n\n    // Offset the first anchor by:\n    // Either half the label length plus a fixed extra offset if the line is not continued\n    // Or half the spacing if the line is continued.\n\n    // For non-continued lines, add a bit of fixed extra offset to avoid collisions at T intersections.\n    const fixedExtraOffset = glyphSize * 2;\n\n    const offset = !isLineContinued ?\n        ((shapedLabelLength / 2 + fixedExtraOffset) * boxScale * overscaling) % spacing :\n        (spacing / 2 * overscaling) % spacing;\n\n    return resample(line, offset, spacing, angleWindowSize, maxAngle, labelLength, isLineContinued, false, tileExtent);\n}\n\n\nfunction resample(line, offset, spacing, angleWindowSize, maxAngle, labelLength, isLineContinued, placeAtMiddle, tileExtent) {\n\n    const halfLabelLength = labelLength / 2;\n    const lineLength = getLineLength(line);\n\n    let distance = 0,\n        markedDistance = offset - spacing;\n\n    let anchors = [];\n\n    for (let i = 0; i < line.length - 1; i++) {\n\n        const a = line[i],\n            b = line[i + 1];\n\n        const segmentDist = a.dist(b),\n            angle = b.angleTo(a);\n\n        while (markedDistance + spacing < distance + segmentDist) {\n            markedDistance += spacing;\n\n            const t = (markedDistance - distance) / segmentDist,\n                x = interpolate(a.x, b.x, t),\n                y = interpolate(a.y, b.y, t);\n\n            // Check that the point is within the tile boundaries and that\n            // the label would fit before the beginning and end of the line\n            // if placed at this point.\n            if (x >= 0 && x < tileExtent && y >= 0 && y < tileExtent &&\n                    markedDistance - halfLabelLength >= 0 &&\n                    markedDistance + halfLabelLength <= lineLength) {\n                const anchor = new Anchor(x, y, angle, i);\n                anchor._round();\n\n                if (!angleWindowSize || checkMaxAngle(line, anchor, labelLength, angleWindowSize, maxAngle)) {\n                    anchors.push(anchor);\n                }\n            }\n        }\n\n        distance += segmentDist;\n    }\n\n    if (!placeAtMiddle && !anchors.length && !isLineContinued) {\n        // The first attempt at finding anchors at which labels can be placed failed.\n        // Try again, but this time just try placing one anchor at the middle of the line.\n        // This has the most effect for short lines in overscaled tiles, since the\n        // initial offset used in overscaled tiles is calculated to align labels with positions in\n        // parent tiles instead of placing the label as close to the beginning as possible.\n        anchors = resample(line, distance / 2, spacing, angleWindowSize, maxAngle, labelLength, isLineContinued, true, tileExtent);\n    }\n\n    return anchors;\n}\n","// @flow\n\nimport type {CollisionBoxArray} from '../data/array_types';\nimport Point from '@mapbox/point-geometry';\nimport type Anchor from './anchor';\n\n/**\n * A CollisionFeature represents the area of the tile covered by a single label.\n * It is used with CollisionIndex to check if the label overlaps with any\n * previous labels. A CollisionFeature is mostly just a set of CollisionBox\n * objects.\n *\n * @private\n */\nclass CollisionFeature {\n    boxStartIndex: number;\n    boxEndIndex: number;\n\n    /**\n     * Create a CollisionFeature, adding its collision box data to the given collisionBoxArray in the process.\n     *\n     * @param line The geometry the label is placed on.\n     * @param anchor The point along the line around which the label is anchored.\n     * @param shaped The text or icon shaping results.\n     * @param boxScale A magic number used to convert from glyph metrics units to geometry units.\n     * @param padding The amount of padding to add around the label edges.\n     * @param alignLine Whether the label is aligned with the line or the viewport.\n     */\n    constructor(collisionBoxArray: CollisionBoxArray,\n                line: Array<Point>,\n                anchor: Anchor,\n                featureIndex: number,\n                sourceLayerIndex: number,\n                bucketIndex: number,\n                shaped: Object,\n                boxScale: number,\n                padding: number,\n                alignLine: boolean,\n                overscaling: number,\n                rotate: number) {\n        let y1 = shaped.top * boxScale - padding;\n        let y2 = shaped.bottom * boxScale + padding;\n        let x1 = shaped.left * boxScale - padding;\n        let x2 = shaped.right * boxScale + padding;\n\n        this.boxStartIndex = collisionBoxArray.length;\n\n        if (alignLine) {\n\n            let height = y2 - y1;\n            const length = x2 - x1;\n\n            if (height > 0) {\n                // set minimum box height to avoid very many small labels\n                height = Math.max(10 * boxScale, height);\n\n                this._addLineCollisionCircles(collisionBoxArray, line, anchor, (anchor.segment: any), length, height, featureIndex, sourceLayerIndex, bucketIndex, overscaling);\n            }\n\n        } else {\n            if (rotate) {\n                // Account for *-rotate in point collision boxes\n                // See https://github.com/mapbox/mapbox-gl-js/issues/6075\n                // Doesn't account for icon-text-fit\n\n                const tl = new Point(x1, y1);\n                const tr = new Point(x2, y1);\n                const bl = new Point(x1, y2);\n                const br = new Point(x2, y2);\n\n                const rotateRadians = rotate * Math.PI / 180;\n\n                tl._rotate(rotateRadians);\n                tr._rotate(rotateRadians);\n                bl._rotate(rotateRadians);\n                br._rotate(rotateRadians);\n\n                // Collision features require an \"on-axis\" geometry,\n                // so take the envelope of the rotated geometry\n                // (may be quite large for wide labels rotated 45 degrees)\n                x1 = Math.min(tl.x, tr.x, bl.x, br.x);\n                x2 = Math.max(tl.x, tr.x, bl.x, br.x);\n                y1 = Math.min(tl.y, tr.y, bl.y, br.y);\n                y2 = Math.max(tl.y, tr.y, bl.y, br.y);\n            }\n            collisionBoxArray.emplaceBack(anchor.x, anchor.y, x1, y1, x2, y2, featureIndex, sourceLayerIndex, bucketIndex,\n                0, 0);\n        }\n\n        this.boxEndIndex = collisionBoxArray.length;\n    }\n\n    /**\n     * Create a set of CollisionBox objects for a line.\n     *\n     * @param labelLength The length of the label in geometry units.\n     * @param anchor The point along the line around which the label is anchored.\n     * @param boxSize The size of the collision boxes that will be created.\n     * @private\n     */\n    _addLineCollisionCircles(collisionBoxArray: CollisionBoxArray,\n                           line: Array<Point>,\n                           anchor: Anchor,\n                           segment: number,\n                           labelLength: number,\n                           boxSize: number,\n                           featureIndex: number,\n                           sourceLayerIndex: number,\n                           bucketIndex: number,\n                           overscaling: number) {\n        const step = boxSize / 2;\n        const nBoxes = Math.floor(labelLength / step) || 1;\n        // We calculate line collision circles out to 300% of what would normally be our\n        // max size, to allow collision detection to work on labels that expand as\n        // they move into the distance\n        // Vertically oriented labels in the distant field can extend past this padding\n        // This is a noticeable problem in overscaled tiles where the pitch 0-based\n        // symbol spacing will put labels very close together in a pitched map.\n        // To reduce the cost of adding extra collision circles, we slowly increase\n        // them for overscaled tiles.\n        const overscalingPaddingFactor = 1 + .4 * Math.log(overscaling) / Math.LN2;\n        const nPitchPaddingBoxes = Math.floor(nBoxes * overscalingPaddingFactor / 2);\n\n        // offset the center of the first box by half a box so that the edge of the\n        // box is at the edge of the label.\n        const firstBoxOffset = -boxSize / 2;\n\n        let p = anchor;\n        let index = segment + 1;\n        let anchorDistance = firstBoxOffset;\n        const labelStartDistance = -labelLength / 2;\n        const paddingStartDistance = labelStartDistance - labelLength / 4;\n        // move backwards along the line to the first segment the label appears on\n        do {\n            index--;\n\n            if (index < 0) {\n                if (anchorDistance > labelStartDistance) {\n                    // there isn't enough room for the label after the beginning of the line\n                    // checkMaxAngle should have already caught this\n                    return;\n                } else {\n                    // The line doesn't extend far enough back for all of our padding,\n                    // but we got far enough to show the label under most conditions.\n                    index = 0;\n                    break;\n                }\n            } else {\n                anchorDistance -= line[index].dist(p);\n                p = line[index];\n            }\n        } while (anchorDistance > paddingStartDistance);\n\n        let segmentLength = line[index].dist(line[index + 1]);\n\n        for (let i = -nPitchPaddingBoxes; i < nBoxes + nPitchPaddingBoxes; i++) {\n\n            // the distance the box will be from the anchor\n            const boxOffset = i * step;\n            let boxDistanceToAnchor = labelStartDistance + boxOffset;\n\n            // make the distance between pitch padding boxes bigger\n            if (boxOffset < 0) boxDistanceToAnchor += boxOffset;\n            if (boxOffset > labelLength) boxDistanceToAnchor += boxOffset - labelLength;\n\n            if (boxDistanceToAnchor < anchorDistance) {\n                // The line doesn't extend far enough back for this box, skip it\n                // (This could allow for line collisions on distant tiles)\n                continue;\n            }\n\n            // the box is not on the current segment. Move to the next segment.\n            while (anchorDistance + segmentLength < boxDistanceToAnchor) {\n                anchorDistance += segmentLength;\n                index++;\n\n                // There isn't enough room before the end of the line.\n                if (index + 1 >= line.length) {\n                    return;\n                }\n\n                segmentLength = line[index].dist(line[index + 1]);\n            }\n\n            // the distance the box will be from the beginning of the segment\n            const segmentBoxDistance = boxDistanceToAnchor - anchorDistance;\n\n            const p0 = line[index];\n            const p1 = line[index + 1];\n            const boxAnchorPoint = p1.sub(p0)._unit()._mult(segmentBoxDistance)._add(p0)._round();\n\n            // If the box is within boxSize of the anchor, force the box to be used\n            // (so even 0-width labels use at least one box)\n            // Otherwise, the .8 multiplication gives us a little bit of conservative\n            // padding in choosing which boxes to use (see CollisionIndex#placedCollisionCircles)\n            const paddedAnchorDistance = Math.abs(boxDistanceToAnchor - firstBoxOffset) < step ?\n                0 :\n                (boxDistanceToAnchor - firstBoxOffset) * 0.8;\n\n            collisionBoxArray.emplaceBack(boxAnchorPoint.x, boxAnchorPoint.y,\n                -boxSize / 2, -boxSize / 2, boxSize / 2, boxSize / 2,\n                featureIndex, sourceLayerIndex, bucketIndex,\n                boxSize / 2, paddedAnchorDistance);\n        }\n    }\n}\n\nexport default CollisionFeature;\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = this.data[this.length];\n            this._down(0);\n        }\n        this.data.pop();\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","// @flow\n\nimport Queue from 'tinyqueue';\n\nimport Point from '@mapbox/point-geometry';\nimport { distToSegmentSquared } from './intersection_tests';\n\n/**\n * Finds an approximation of a polygon's Pole Of Inaccessibiliy https://en.wikipedia.org/wiki/Pole_of_inaccessibility\n * This is a copy of http://github.com/mapbox/polylabel adapted to use Points\n *\n * @param polygonRings first item in array is the outer ring followed optionally by the list of holes, should be an element of the result of util/classify_rings\n * @param precision Specified in input coordinate units. If 0 returns after first run, if > 0 repeatedly narrows the search space until the radius of the area searched for the best pole is less than precision\n * @param debug Print some statistics to the console during execution\n * @returns Pole of Inaccessibiliy.\n * @private\n */\nexport default function (polygonRings: Array<Array<Point>>, precision?: number = 1, debug?: boolean = false): Point {\n    // find the bounding box of the outer ring\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n    const outerRing = polygonRings[0];\n    for (let i = 0; i < outerRing.length; i++) {\n        const p = outerRing[i];\n        if (!i || p.x < minX) minX = p.x;\n        if (!i || p.y < minY) minY = p.y;\n        if (!i || p.x > maxX) maxX = p.x;\n        if (!i || p.y > maxY) maxY = p.y;\n    }\n\n    const width = maxX - minX;\n    const height = maxY - minY;\n    const cellSize = Math.min(width, height);\n    let h = cellSize / 2;\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    const cellQueue = new Queue([], compareMax);\n\n    if (cellSize === 0) return new Point(minX, minY);\n\n    // cover polygon with initial cells\n    for (let x = minX; x < maxX; x += cellSize) {\n        for (let y = minY; y < maxY; y += cellSize) {\n            cellQueue.push(new Cell(x + h, y + h, h, polygonRings));\n        }\n    }\n\n    // take centroid as the first best guess\n    let bestCell = getCentroidCell(polygonRings);\n    let numProbes = cellQueue.length;\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        const cell = cellQueue.pop();\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d || !bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log('found best %d after %d probes', Math.round(1e4 * cell.d) / 1e4, numProbes);\n        }\n\n        // do not drill down further if there's no chance of a better solution\n        if (cell.max - bestCell.d <= precision) continue;\n\n        // split the cell into four cells\n        h = cell.h / 2;\n        cellQueue.push(new Cell(cell.p.x - h, cell.p.y - h, h, polygonRings));\n        cellQueue.push(new Cell(cell.p.x + h, cell.p.y - h, h, polygonRings));\n        cellQueue.push(new Cell(cell.p.x - h, cell.p.y + h, h, polygonRings));\n        cellQueue.push(new Cell(cell.p.x + h, cell.p.y + h, h, polygonRings));\n        numProbes += 4;\n    }\n\n    if (debug) {\n        console.log(`num probes: ${numProbes}`);\n        console.log(`best distance: ${bestCell.d}`);\n    }\n\n    return bestCell.p;\n}\n\nfunction compareMax(a, b) {\n    return b.max - a.max;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.p = new Point(x, y);\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(this.p, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(p, polygon) {\n    let inside = false;\n    let minDistSq = Infinity;\n\n    for (let k = 0; k < polygon.length; k++) {\n        const ring = polygon[k];\n\n        for (let i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            const a = ring[i];\n            const b = ring[j];\n\n            if ((a.y > p.y !== b.y > p.y) &&\n                (p.x < (b.x - a.x) * (p.y - a.y) / (b.y - a.y) + a.x)) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, distToSegmentSquared(p, a, b));\n        }\n    }\n\n    return (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    let area = 0;\n    let x = 0;\n    let y = 0;\n    const points = polygon[0];\n    for (let i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        const a = points[i];\n        const b = points[j];\n        const f = a.x * b.y - b.x * a.y;\n        x += (a.x + b.x) * f;\n        y += (a.y + b.y) * f;\n        area += f * 3;\n    }\n    return new Cell(x / area, y / area, 0, polygon);\n}\n","/**\n * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n * \n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n * \n * @param {string} key ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash \n */\n\nfunction murmurhash3_32_gc(key, seed) {\n\tvar remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;\n\t\n\tremainder = key.length & 3; // key.length % 4\n\tbytes = key.length - remainder;\n\th1 = seed;\n\tc1 = 0xcc9e2d51;\n\tc2 = 0x1b873593;\n\ti = 0;\n\t\n\twhile (i < bytes) {\n\t  \tk1 = \n\t  \t  ((key.charCodeAt(i) & 0xff)) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 8) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 16) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 24);\n\t\t++i;\n\t\t\n\t\tk1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n\t\th1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n\t\th1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n\t\th1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n\t}\n\t\n\tk1 = 0;\n\t\n\tswitch (remainder) {\n\t\tcase 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n\t\tcase 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n\t\tcase 1: k1 ^= (key.charCodeAt(i) & 0xff);\n\t\t\n\t\tk1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n\t\th1 ^= k1;\n\t}\n\t\n\th1 ^= key.length;\n\n\th1 ^= h1 >>> 16;\n\th1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n\th1 ^= h1 >>> 13;\n\th1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n\th1 ^= h1 >>> 16;\n\n\treturn h1 >>> 0;\n}\n\nif(typeof module !== \"undefined\") {\n  module.exports = murmurhash3_32_gc\n}","/**\n * JS Implementation of MurmurHash2\n * \n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n * \n * @param {string} str ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash\n */\n\nfunction murmurhash2_32_gc(str, seed) {\n  var\n    l = str.length,\n    h = seed ^ l,\n    i = 0,\n    k;\n  \n  while (l >= 4) {\n  \tk = \n  \t  ((str.charCodeAt(i) & 0xff)) |\n  \t  ((str.charCodeAt(++i) & 0xff) << 8) |\n  \t  ((str.charCodeAt(++i) & 0xff) << 16) |\n  \t  ((str.charCodeAt(++i) & 0xff) << 24);\n    \n    k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n    k ^= k >>> 24;\n    k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n\n\th = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^ k;\n\n    l -= 4;\n    ++i;\n  }\n  \n  switch (l) {\n  case 3: h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n  case 2: h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n  case 1: h ^= (str.charCodeAt(i) & 0xff);\n          h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n  }\n\n  h ^= h >>> 13;\n  h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n  h ^= h >>> 15;\n\n  return h >>> 0;\n}\n\nif(typeof module !== undefined) {\n  module.exports = murmurhash2_32_gc\n}\n","var murmur3 = require(\"./murmurhash3_gc.js\")\nvar murmur2 = require(\"./murmurhash2_gc.js\")\n\nmodule.exports = murmur3\nmodule.exports.murmur3 = murmur3\nmodule.exports.murmur2 = murmur2\n","// @flow\n\nimport Anchor from './anchor';\n\nimport { getAnchors, getCenterAnchor } from './get_anchors';\nimport clipLine from './clip_line';\nimport { shapeText, shapeIcon, WritingMode } from './shaping';\nimport { getGlyphQuads, getIconQuads } from './quads';\nimport CollisionFeature from './collision_feature';\nimport { warnOnce } from '../util/util';\nimport {\n    allowsVerticalWritingMode,\n    allowsLetterSpacing\n} from '../util/script_detection';\nimport findPoleOfInaccessibility from '../util/find_pole_of_inaccessibility';\nimport classifyRings from '../util/classify_rings';\nimport EXTENT from '../data/extent';\nimport SymbolBucket from '../data/bucket/symbol_bucket';\nimport EvaluationParameters from '../style/evaluation_parameters';\nimport {SIZE_PACK_FACTOR} from './symbol_size';\n\nimport type {Shaping, PositionedIcon} from './shaping';\nimport type {CollisionBoxArray} from '../data/array_types';\nimport type {SymbolFeature} from '../data/bucket/symbol_bucket';\nimport type {StyleImage} from '../style/style_image';\nimport type {StyleGlyph} from '../style/style_glyph';\nimport type SymbolStyleLayer from '../style/style_layer/symbol_style_layer';\nimport type {ImagePosition} from '../render/image_atlas';\nimport type {GlyphPosition} from '../render/glyph_atlas';\nimport type {PossiblyEvaluatedPropertyValue} from '../style/properties';\n\nimport Point from '@mapbox/point-geometry';\nimport murmur3 from 'murmurhash-js';\n\n// The symbol layout process needs `text-size` evaluated at up to five different zoom levels, and\n// `icon-size` at up to three:\n//\n//   1. `text-size` at the zoom level of the bucket. Used to calculate a per-feature size for source `text-size`\n//       expressions, and to calculate the box dimensions for icon-text-fit.\n//   2. `icon-size` at the zoom level of the bucket. Used to calculate a per-feature size for source `icon-size`\n//       expressions.\n//   3. `text-size` and `icon-size` at the zoom level of the bucket, plus one. Used to calculate collision boxes.\n//   4. `text-size` at zoom level 18. Used for something line-symbol-placement-related.\n//   5.  For composite `*-size` expressions: two zoom levels of curve stops that \"cover\" the zoom level of the\n//       bucket. These go into a vertex buffer and are used by the shader to interpolate the size at render time.\n//\n// (1) and (2) are stored in `bucket.layers[0].layout`. The remainder are below.\n//\ntype Sizes = {\n    layoutTextSize: PossiblyEvaluatedPropertyValue<number>, // (3)\n    layoutIconSize: PossiblyEvaluatedPropertyValue<number>, // (3)\n    textMaxSize: PossiblyEvaluatedPropertyValue<number>,    // (4)\n    compositeTextSizes: [PossiblyEvaluatedPropertyValue<number>, PossiblyEvaluatedPropertyValue<number>], // (5)\n    compositeIconSizes: [PossiblyEvaluatedPropertyValue<number>, PossiblyEvaluatedPropertyValue<number>], // (5)\n};\n\nexport function performSymbolLayout(bucket: SymbolBucket,\n                             glyphMap: {[string]: {[number]: ?StyleGlyph}},\n                             glyphPositions: {[string]: {[number]: GlyphPosition}},\n                             imageMap: {[string]: StyleImage},\n                             imagePositions: {[string]: ImagePosition},\n                             showCollisionBoxes: boolean) {\n    bucket.createArrays();\n\n    const tileSize = 512 * bucket.overscaling;\n    bucket.tilePixelRatio = EXTENT / tileSize;\n    bucket.compareText = {};\n    bucket.iconsNeedLinear = false;\n\n    const layout = bucket.layers[0].layout;\n    const unevaluatedLayoutValues = bucket.layers[0]._unevaluatedLayout._values;\n\n    const sizes = {};\n\n    if (bucket.textSizeData.functionType === 'composite') {\n        const {min, max} = bucket.textSizeData.zoomRange;\n        sizes.compositeTextSizes = [\n            unevaluatedLayoutValues['text-size'].possiblyEvaluate(new EvaluationParameters(min)),\n            unevaluatedLayoutValues['text-size'].possiblyEvaluate(new EvaluationParameters(max))\n        ];\n    }\n\n    if (bucket.iconSizeData.functionType === 'composite') {\n        const {min, max} = bucket.iconSizeData.zoomRange;\n        sizes.compositeIconSizes = [\n            unevaluatedLayoutValues['icon-size'].possiblyEvaluate(new EvaluationParameters(min)),\n            unevaluatedLayoutValues['icon-size'].possiblyEvaluate(new EvaluationParameters(max))\n        ];\n    }\n\n    sizes.layoutTextSize = unevaluatedLayoutValues['text-size'].possiblyEvaluate(new EvaluationParameters(bucket.zoom + 1));\n    sizes.layoutIconSize = unevaluatedLayoutValues['icon-size'].possiblyEvaluate(new EvaluationParameters(bucket.zoom + 1));\n    sizes.textMaxSize = unevaluatedLayoutValues['text-size'].possiblyEvaluate(new EvaluationParameters(18));\n\n    const oneEm = 24;\n    const lineHeight = layout.get('text-line-height') * oneEm;\n    const textAlongLine = layout.get('text-rotation-alignment') === 'map' && layout.get('symbol-placement') !== 'point';\n    const keepUpright = layout.get('text-keep-upright');\n\n\n    for (const feature of bucket.features) {\n        const fontstack = layout.get('text-font').evaluate(feature, {}).join(',');\n        const glyphPositionMap = glyphPositions;\n\n        const shapedTextOrientations = {};\n        const text = feature.text;\n        if (text) {\n            const unformattedText = text.toString();\n            const textOffset: [number, number] = (layout.get('text-offset').evaluate(feature, {}).map((t) => t * oneEm): any);\n            const spacing = layout.get('text-letter-spacing').evaluate(feature, {}) * oneEm;\n            const spacingIfAllowed = allowsLetterSpacing(unformattedText) ? spacing : 0;\n            const textAnchor = layout.get('text-anchor').evaluate(feature, {});\n            const textJustify = layout.get('text-justify').evaluate(feature, {});\n            const maxWidth = layout.get('symbol-placement') === 'point' ?\n                layout.get('text-max-width').evaluate(feature, {}) * oneEm :\n                0;\n\n            shapedTextOrientations.horizontal = shapeText(text, glyphMap, fontstack, maxWidth, lineHeight, textAnchor, textJustify, spacingIfAllowed, textOffset, oneEm, WritingMode.horizontal);\n            if (allowsVerticalWritingMode(unformattedText) && textAlongLine && keepUpright) {\n                shapedTextOrientations.vertical = shapeText(text, glyphMap, fontstack, maxWidth, lineHeight, textAnchor, textJustify, spacingIfAllowed, textOffset, oneEm, WritingMode.vertical);\n            }\n        }\n\n        let shapedIcon;\n        if (feature.icon) {\n            const image = imageMap[feature.icon];\n            if (image) {\n                shapedIcon = shapeIcon(\n                    imagePositions[feature.icon],\n                    layout.get('icon-offset').evaluate(feature, {}),\n                    layout.get('icon-anchor').evaluate(feature, {}));\n                if (bucket.sdfIcons === undefined) {\n                    bucket.sdfIcons = image.sdf;\n                } else if (bucket.sdfIcons !== image.sdf) {\n                    warnOnce('Style sheet warning: Cannot mix SDF and non-SDF icons in one buffer');\n                }\n                if (image.pixelRatio !== bucket.pixelRatio) {\n                    bucket.iconsNeedLinear = true;\n                } else if (layout.get('icon-rotate').constantOr(1) !== 0) {\n                    bucket.iconsNeedLinear = true;\n                }\n            }\n        }\n\n        if (shapedTextOrientations.horizontal || shapedIcon) {\n            addFeature(bucket, feature, shapedTextOrientations, shapedIcon, glyphPositionMap, sizes);\n        }\n    }\n\n    if (showCollisionBoxes) {\n        bucket.generateCollisionDebugBuffers();\n    }\n}\n\n\n/**\n * Given a feature and its shaped text and icon data, add a 'symbol\n * instance' for each _possible_ placement of the symbol feature.\n * (At render timePlaceSymbols#place() selects which of these instances to\n * show or hide based on collisions with symbols in other layers.)\n * @private\n */\nfunction addFeature(bucket: SymbolBucket,\n                    feature: SymbolFeature,\n                    shapedTextOrientations: any,\n                    shapedIcon: PositionedIcon | void,\n                    glyphPositionMap: {[string]: {[number]: GlyphPosition}},\n                    sizes: Sizes) {\n    const layoutTextSize = sizes.layoutTextSize.evaluate(feature, {});\n    const layoutIconSize = sizes.layoutIconSize.evaluate(feature, {});\n\n    // To reduce the number of labels that jump around when zooming we need\n    // to use a text-size value that is the same for all zoom levels.\n    // bucket calculates text-size at a high zoom level so that all tiles can\n    // use the same value when calculating anchor positions.\n    let textMaxSize = sizes.textMaxSize.evaluate(feature, {});\n    if (textMaxSize === undefined) {\n        textMaxSize = layoutTextSize;\n    }\n\n    const layout = bucket.layers[0].layout;\n    const textOffset = layout.get('text-offset').evaluate(feature, {});\n    const iconOffset = layout.get('icon-offset').evaluate(feature, {});\n\n    const glyphSize = 24,\n        fontScale = layoutTextSize / glyphSize,\n        textBoxScale = bucket.tilePixelRatio * fontScale,\n        textMaxBoxScale = bucket.tilePixelRatio * textMaxSize / glyphSize,\n        iconBoxScale = bucket.tilePixelRatio * layoutIconSize,\n        symbolMinDistance = bucket.tilePixelRatio * layout.get('symbol-spacing'),\n        textPadding = layout.get('text-padding') * bucket.tilePixelRatio,\n        iconPadding = layout.get('icon-padding') * bucket.tilePixelRatio,\n        textMaxAngle = layout.get('text-max-angle') / 180 * Math.PI,\n        textAlongLine = layout.get('text-rotation-alignment') === 'map' && layout.get('symbol-placement') !== 'point',\n        iconAlongLine = layout.get('icon-rotation-alignment') === 'map' && layout.get('symbol-placement') !== 'point',\n        symbolPlacement = layout.get('symbol-placement'),\n        textRepeatDistance = symbolMinDistance / 2;\n\n    const addSymbolAtAnchor = (line, anchor) => {\n        if (anchor.x < 0 || anchor.x >= EXTENT || anchor.y < 0 || anchor.y >= EXTENT) {\n            // Symbol layers are drawn across tile boundaries, We filter out symbols\n            // outside our tile boundaries (which may be included in vector tile buffers)\n            // to prevent double-drawing symbols.\n            return;\n        }\n\n        addSymbol(bucket, anchor, line, shapedTextOrientations, shapedIcon, bucket.layers[0],\n            bucket.collisionBoxArray, feature.index, feature.sourceLayerIndex, bucket.index,\n            textBoxScale, textPadding, textAlongLine, textOffset,\n            iconBoxScale, iconPadding, iconAlongLine, iconOffset,\n            feature, glyphPositionMap, sizes);\n    };\n\n    if (symbolPlacement === 'line') {\n        for (const line of clipLine(feature.geometry, 0, 0, EXTENT, EXTENT)) {\n            const anchors = getAnchors(\n                line,\n                symbolMinDistance,\n                textMaxAngle,\n                shapedTextOrientations.vertical || shapedTextOrientations.horizontal,\n                shapedIcon,\n                glyphSize,\n                textMaxBoxScale,\n                bucket.overscaling,\n                EXTENT\n            );\n            for (const anchor of anchors) {\n                const shapedText = shapedTextOrientations.horizontal;\n                if (!shapedText || !anchorIsTooClose(bucket, shapedText.text, textRepeatDistance, anchor)) {\n                    addSymbolAtAnchor(line, anchor);\n                }\n            }\n        }\n    } else if (symbolPlacement === 'line-center') {\n        // No clipping, multiple lines per feature are allowed\n        // \"lines\" with only one point are ignored as in clipLines\n        for (const line of feature.geometry) {\n            if (line.length > 1) {\n                const anchor = getCenterAnchor(\n                    line,\n                    textMaxAngle,\n                    shapedTextOrientations.vertical || shapedTextOrientations.horizontal,\n                    shapedIcon,\n                    glyphSize,\n                    textMaxBoxScale);\n                if (anchor) {\n                    addSymbolAtAnchor(line, anchor);\n                }\n            }\n        }\n    } else if (feature.type === 'Polygon') {\n        for (const polygon of classifyRings(feature.geometry, 0)) {\n            // 16 here represents 2 pixels\n            const poi = findPoleOfInaccessibility(polygon, 16);\n            addSymbolAtAnchor(polygon[0], new Anchor(poi.x, poi.y, 0));\n        }\n    } else if (feature.type === 'LineString') {\n        // https://github.com/mapbox/mapbox-gl-js/issues/3808\n        for (const line of feature.geometry) {\n            addSymbolAtAnchor(line, new Anchor(line[0].x, line[0].y, 0));\n        }\n    } else if (feature.type === 'Point') {\n        for (const points of feature.geometry) {\n            for (const point of points) {\n                addSymbolAtAnchor([point], new Anchor(point.x, point.y, 0));\n            }\n        }\n    }\n}\n\nconst MAX_PACKED_SIZE = 65535;\n\nfunction addTextVertices(bucket: SymbolBucket,\n                         anchor: Point,\n                         shapedText: Shaping,\n                         layer: SymbolStyleLayer,\n                         textAlongLine: boolean,\n                         feature: SymbolFeature,\n                         textOffset: [number, number],\n                         lineArray: {lineStartIndex: number, lineLength: number},\n                         writingMode: number,\n                         placedTextSymbolIndices: Array<number>,\n                         glyphPositionMap: {[string]: {[number]: GlyphPosition}},\n                         sizes: Sizes) {\n    const glyphQuads = getGlyphQuads(anchor, shapedText,\n                            layer, textAlongLine, feature, glyphPositionMap);\n\n    const sizeData = bucket.textSizeData;\n    let textSizeData = null;\n\n    if (sizeData.functionType === 'source') {\n        textSizeData = [\n            SIZE_PACK_FACTOR * layer.layout.get('text-size').evaluate(feature, {})\n        ];\n        if (textSizeData[0] > MAX_PACKED_SIZE) {\n            warnOnce(`${bucket.layerIds[0]}: Value for \"text-size\" is >= 256. Reduce your \"text-size\".`);\n        }\n    } else if (sizeData.functionType === 'composite') {\n        textSizeData = [\n            SIZE_PACK_FACTOR * sizes.compositeTextSizes[0].evaluate(feature, {}),\n            SIZE_PACK_FACTOR * sizes.compositeTextSizes[1].evaluate(feature, {})\n        ];\n        if (textSizeData[0] > MAX_PACKED_SIZE || textSizeData[1] > MAX_PACKED_SIZE) {\n            warnOnce(`${bucket.layerIds[0]}: Value for \"text-size\" is >= 256. Reduce your \"text-size\".`);\n        }\n    }\n\n    bucket.addSymbols(\n        bucket.text,\n        glyphQuads,\n        textSizeData,\n        textOffset,\n        textAlongLine,\n        feature,\n        writingMode,\n        anchor,\n        lineArray.lineStartIndex,\n        lineArray.lineLength);\n\n    // The placedSymbolArray is used at render time in drawTileSymbols\n    // These indices allow access to the array at collision detection time\n    placedTextSymbolIndices.push(bucket.text.placedSymbolArray.length - 1);\n\n    return glyphQuads.length * 4;\n}\n\n\n/**\n * Add a single label & icon placement.\n *\n * @private\n */\nfunction addSymbol(bucket: SymbolBucket,\n                   anchor: Anchor,\n                   line: Array<Point>,\n                   shapedTextOrientations: any,\n                   shapedIcon: PositionedIcon | void,\n                   layer: SymbolStyleLayer,\n                   collisionBoxArray: CollisionBoxArray,\n                   featureIndex: number,\n                   sourceLayerIndex: number,\n                   bucketIndex: number,\n                   textBoxScale: number,\n                   textPadding: number,\n                   textAlongLine: boolean,\n                   textOffset: [number, number],\n                   iconBoxScale: number,\n                   iconPadding: number,\n                   iconAlongLine: boolean,\n                   iconOffset: [number, number],\n                   feature: SymbolFeature,\n                   glyphPositionMap: {[string]: {[number]: GlyphPosition}},\n                   sizes: Sizes) {\n    const lineArray = bucket.addToLineVertexArray(anchor, line);\n\n    let textCollisionFeature, iconCollisionFeature;\n\n    let numIconVertices = 0;\n    let numGlyphVertices = 0;\n    let numVerticalGlyphVertices = 0;\n    const key = murmur3(shapedTextOrientations.horizontal ? shapedTextOrientations.horizontal.text : '');\n    const placedTextSymbolIndices = [];\n    if (shapedTextOrientations.horizontal) {\n        // As a collision approximation, we can use either the vertical or the horizontal version of the feature\n        // We're counting on the two versions having similar dimensions\n        const textRotate = layer.layout.get('text-rotate').evaluate(feature, {});\n        textCollisionFeature = new CollisionFeature(collisionBoxArray, line, anchor, featureIndex, sourceLayerIndex, bucketIndex, shapedTextOrientations.horizontal, textBoxScale, textPadding, textAlongLine, bucket.overscaling, textRotate);\n        numGlyphVertices += addTextVertices(bucket, anchor, shapedTextOrientations.horizontal, layer, textAlongLine, feature, textOffset, lineArray, shapedTextOrientations.vertical ? WritingMode.horizontal : WritingMode.horizontalOnly, placedTextSymbolIndices, glyphPositionMap, sizes);\n\n        if (shapedTextOrientations.vertical) {\n            numVerticalGlyphVertices += addTextVertices(bucket, anchor, shapedTextOrientations.vertical, layer, textAlongLine, feature, textOffset, lineArray, WritingMode.vertical, placedTextSymbolIndices, glyphPositionMap, sizes);\n        }\n    }\n\n    const textBoxStartIndex = textCollisionFeature ? textCollisionFeature.boxStartIndex : bucket.collisionBoxArray.length;\n    const textBoxEndIndex = textCollisionFeature ? textCollisionFeature.boxEndIndex : bucket.collisionBoxArray.length;\n\n    if (shapedIcon) {\n        const iconQuads = getIconQuads(anchor, shapedIcon, layer,\n                            iconAlongLine, shapedTextOrientations.horizontal,\n                            feature);\n        const iconRotate = layer.layout.get('icon-rotate').evaluate(feature, {});\n        iconCollisionFeature = new CollisionFeature(collisionBoxArray, line, anchor, featureIndex, sourceLayerIndex, bucketIndex, shapedIcon, iconBoxScale, iconPadding, /*align boxes to line*/false, bucket.overscaling, iconRotate);\n\n        numIconVertices = iconQuads.length * 4;\n\n        const sizeData = bucket.iconSizeData;\n        let iconSizeData = null;\n\n        if (sizeData.functionType === 'source') {\n            iconSizeData = [\n                SIZE_PACK_FACTOR * layer.layout.get('icon-size').evaluate(feature, {})\n            ];\n            if (iconSizeData[0] > MAX_PACKED_SIZE) {\n                warnOnce(`${bucket.layerIds[0]}: Value for \"icon-size\" is >= 256. Reduce your \"icon-size\".`);\n            }\n        } else if (sizeData.functionType === 'composite') {\n            iconSizeData = [\n                SIZE_PACK_FACTOR * sizes.compositeIconSizes[0].evaluate(feature, {}),\n                SIZE_PACK_FACTOR * sizes.compositeIconSizes[1].evaluate(feature, {})\n            ];\n            if (iconSizeData[0] > MAX_PACKED_SIZE || iconSizeData[1] > MAX_PACKED_SIZE) {\n                warnOnce(`${bucket.layerIds[0]}: Value for \"icon-size\" is >= 256. Reduce your \"icon-size\".`);\n            }\n        }\n\n        bucket.addSymbols(\n            bucket.icon,\n            iconQuads,\n            iconSizeData,\n            iconOffset,\n            iconAlongLine,\n            feature,\n            false,\n            anchor,\n            lineArray.lineStartIndex,\n            lineArray.lineLength);\n    }\n\n    const iconBoxStartIndex = iconCollisionFeature ? iconCollisionFeature.boxStartIndex : bucket.collisionBoxArray.length;\n    const iconBoxEndIndex = iconCollisionFeature ? iconCollisionFeature.boxEndIndex : bucket.collisionBoxArray.length;\n\n    if (bucket.glyphOffsetArray.length >= SymbolBucket.MAX_GLYPHS) warnOnce(\n        \"Too many glyphs being rendered in a tile. See https://github.com/mapbox/mapbox-gl-js/issues/2907\"\n    );\n\n    bucket.symbolInstances.emplaceBack(\n        anchor.x,\n        anchor.y,\n        placedTextSymbolIndices.length > 0 ? placedTextSymbolIndices[0] : -1,\n        placedTextSymbolIndices.length > 1 ? placedTextSymbolIndices[1] : -1,\n        key,\n        textBoxStartIndex,\n        textBoxEndIndex,\n        iconBoxStartIndex,\n        iconBoxEndIndex,\n        featureIndex,\n        numGlyphVertices,\n        numVerticalGlyphVertices,\n        numIconVertices,\n        0);\n}\n\nfunction anchorIsTooClose(bucket: any, text: string, repeatDistance: number, anchor: Point) {\n    const compareText = bucket.compareText;\n    if (!(text in compareText)) {\n        compareText[text] = [];\n    } else {\n        const otherAnchors = compareText[text];\n        for (let k = otherAnchors.length - 1; k >= 0; k--) {\n            if (anchor.dist(otherAnchors[k]) < repeatDistance) {\n                // If it's within repeatDistance of one anchor, stop looking\n                return true;\n            }\n        }\n    }\n    // If anchor is not within repeatDistance of any other anchor, add to array\n    compareText[text].push(anchor);\n    return false;\n}\n","// @flow\n\nimport Point from '@mapbox/point-geometry';\n\nimport { GLYPH_PBF_BORDER } from '../style/parse_glyph_pbf';\n\nimport type Anchor from './anchor';\nimport type {PositionedIcon, Shaping} from './shaping';\nimport type SymbolStyleLayer from '../style/style_layer/symbol_style_layer';\nimport type {Feature} from '../style-spec/expression';\nimport type {GlyphPosition} from '../render/glyph_atlas';\n\n/**\n * A textured quad for rendering a single icon or glyph.\n *\n * The zoom range the glyph can be shown is defined by minScale and maxScale.\n *\n * @param tl The offset of the top left corner from the anchor.\n * @param tr The offset of the top right corner from the anchor.\n * @param bl The offset of the bottom left corner from the anchor.\n * @param br The offset of the bottom right corner from the anchor.\n * @param tex The texture coordinates.\n *\n * @private\n */\nexport type SymbolQuad = {\n    tl: Point,\n    tr: Point,\n    bl: Point,\n    br: Point,\n    tex: {\n        x: number,\n        y: number,\n        w: number,\n        h: number\n    },\n    writingMode: any | void,\n    glyphOffset: [number, number]\n};\n\n/**\n * Create the quads used for rendering an icon.\n * @private\n */\nexport function getIconQuads(anchor: Anchor,\n                      shapedIcon: PositionedIcon,\n                      layer: SymbolStyleLayer,\n                      alongLine: boolean,\n                      shapedText: Shaping,\n                      feature: Feature): Array<SymbolQuad> {\n    const image = shapedIcon.image;\n    const layout = layer.layout;\n\n    // If you have a 10px icon that isn't perfectly aligned to the pixel grid it will cover 11 actual\n    // pixels. The quad needs to be padded to account for this, otherwise they'll look slightly clipped\n    // on one edge in some cases.\n    const border = 1;\n\n    const top = shapedIcon.top - border / image.pixelRatio;\n    const left = shapedIcon.left - border / image.pixelRatio;\n    const bottom = shapedIcon.bottom + border / image.pixelRatio;\n    const right = shapedIcon.right + border / image.pixelRatio;\n    let tl, tr, br, bl;\n\n    // text-fit mode\n    if (layout.get('icon-text-fit') !== 'none' && shapedText) {\n        const iconWidth = (right - left),\n            iconHeight = (bottom - top),\n            size = layout.get('text-size').evaluate(feature, {}) / 24,\n            textLeft = shapedText.left * size,\n            textRight = shapedText.right * size,\n            textTop = shapedText.top * size,\n            textBottom = shapedText.bottom * size,\n            textWidth = textRight - textLeft,\n            textHeight = textBottom - textTop,\n            padT = layout.get('icon-text-fit-padding')[0],\n            padR = layout.get('icon-text-fit-padding')[1],\n            padB = layout.get('icon-text-fit-padding')[2],\n            padL = layout.get('icon-text-fit-padding')[3],\n            offsetY = layout.get('icon-text-fit') === 'width' ? (textHeight - iconHeight) * 0.5 : 0,\n            offsetX = layout.get('icon-text-fit') === 'height' ? (textWidth - iconWidth) * 0.5 : 0,\n            width = layout.get('icon-text-fit') === 'width' || layout.get('icon-text-fit') === 'both' ? textWidth : iconWidth,\n            height = layout.get('icon-text-fit') === 'height' || layout.get('icon-text-fit') === 'both' ? textHeight : iconHeight;\n        tl = new Point(textLeft + offsetX - padL,         textTop + offsetY - padT);\n        tr = new Point(textLeft + offsetX + padR + width, textTop + offsetY - padT);\n        br = new Point(textLeft + offsetX + padR + width, textTop + offsetY + padB + height);\n        bl = new Point(textLeft + offsetX - padL,         textTop + offsetY + padB + height);\n    // Normal icon size mode\n    } else {\n        tl = new Point(left, top);\n        tr = new Point(right, top);\n        br = new Point(right, bottom);\n        bl = new Point(left, bottom);\n    }\n\n    const angle = layer.layout.get('icon-rotate').evaluate(feature, {}) * Math.PI / 180;\n\n    if (angle) {\n        const sin = Math.sin(angle),\n            cos = Math.cos(angle),\n            matrix = [cos, -sin, sin, cos];\n\n        tl._matMult(matrix);\n        tr._matMult(matrix);\n        bl._matMult(matrix);\n        br._matMult(matrix);\n    }\n\n    // Icon quad is padded, so texture coordinates also need to be padded.\n    return [{tl, tr, bl, br, tex: image.paddedRect, writingMode: undefined, glyphOffset: [0, 0]}];\n}\n\n/**\n * Create the quads used for rendering a text label.\n * @private\n */\nexport function getGlyphQuads(anchor: Anchor,\n                       shaping: Shaping,\n                       layer: SymbolStyleLayer,\n                       alongLine: boolean,\n                       feature: Feature,\n                       positions: {[string]: {[number]: GlyphPosition}}): Array<SymbolQuad> {\n\n    const oneEm = 24;\n    const textRotate = layer.layout.get('text-rotate').evaluate(feature, {}) * Math.PI / 180;\n    const textOffset = layer.layout.get('text-offset').evaluate(feature, {}).map((t) => t * oneEm);\n\n    const positionedGlyphs = shaping.positionedGlyphs;\n    const quads = [];\n\n\n    for (let k = 0; k < positionedGlyphs.length; k++) {\n        const positionedGlyph = positionedGlyphs[k];\n        const glyphPositions = positions[positionedGlyph.fontStack];\n        const glyph = glyphPositions && glyphPositions[positionedGlyph.glyph];\n        if (!glyph) continue;\n\n        const rect = glyph.rect;\n        if (!rect) continue;\n\n        // The rects have an addditional buffer that is not included in their size.\n        const glyphPadding = 1.0;\n        const rectBuffer = GLYPH_PBF_BORDER + glyphPadding;\n\n        const halfAdvance = glyph.metrics.advance * positionedGlyph.scale / 2;\n\n        const glyphOffset = alongLine ?\n            [positionedGlyph.x + halfAdvance, positionedGlyph.y] :\n            [0, 0];\n\n        const builtInOffset = alongLine ?\n            [0, 0] :\n            [positionedGlyph.x + halfAdvance + textOffset[0], positionedGlyph.y + textOffset[1]];\n\n        const x1 = (glyph.metrics.left - rectBuffer) * positionedGlyph.scale - halfAdvance + builtInOffset[0];\n        const y1 = (-glyph.metrics.top - rectBuffer) * positionedGlyph.scale + builtInOffset[1];\n        const x2 = x1 + rect.w * positionedGlyph.scale;\n        const y2 = y1 + rect.h * positionedGlyph.scale;\n\n        const tl = new Point(x1, y1);\n        const tr = new Point(x2, y1);\n        const bl  = new Point(x1, y2);\n        const br = new Point(x2, y2);\n\n        if (alongLine && positionedGlyph.vertical) {\n            // Vertical-supporting glyphs are laid out in 24x24 point boxes (1 square em)\n            // In horizontal orientation, the y values for glyphs are below the midline\n            // and we use a \"yOffset\" of -17 to pull them up to the middle.\n            // By rotating counter-clockwise around the point at the center of the left\n            // edge of a 24x24 layout box centered below the midline, we align the center\n            // of the glyphs with the horizontal midline, so the yOffset is no longer\n            // necessary, but we also pull the glyph to the left along the x axis\n            const center = new Point(-halfAdvance, halfAdvance);\n            const verticalRotation = -Math.PI / 2;\n            const xOffsetCorrection = new Point(5, 0);\n            tl._rotateAround(verticalRotation, center)._add(xOffsetCorrection);\n            tr._rotateAround(verticalRotation, center)._add(xOffsetCorrection);\n            bl._rotateAround(verticalRotation, center)._add(xOffsetCorrection);\n            br._rotateAround(verticalRotation, center)._add(xOffsetCorrection);\n        }\n\n        if (textRotate) {\n            const sin = Math.sin(textRotate),\n                cos = Math.cos(textRotate),\n                matrix = [cos, -sin, sin, cos];\n\n            tl._matMult(matrix);\n            tr._matMult(matrix);\n            bl._matMult(matrix);\n            br._matMult(matrix);\n        }\n\n        quads.push({tl, tr, bl, br, tex: rect, writingMode: shaping.writingMode, glyphOffset});\n    }\n\n    return quads;\n}\n","// @flow\n\nimport Point from '@mapbox/point-geometry';\n\nexport default clipLine;\n\n/**\n * Returns the part of a multiline that intersects with the provided rectangular box.\n *\n * @param lines\n * @param x1 the left edge of the box\n * @param y1 the top edge of the box\n * @param x2 the right edge of the box\n * @param y2 the bottom edge of the box\n * @returns lines\n * @private\n */\nfunction clipLine(lines: Array<Array<Point>>, x1: number, y1: number, x2: number, y2: number): Array<Array<Point>> {\n    const clippedLines = [];\n\n    for (let l = 0; l < lines.length; l++) {\n        const line = lines[l];\n        let clippedLine;\n\n        for (let i = 0; i < line.length - 1; i++) {\n            let p0 = line[i];\n            let p1 = line[i + 1];\n\n\n            if (p0.x < x1 && p1.x < x1) {\n                continue;\n            } else if (p0.x < x1) {\n                p0 = new Point(x1, p0.y + (p1.y - p0.y) * ((x1 - p0.x) / (p1.x - p0.x)))._round();\n            } else if (p1.x < x1) {\n                p1 = new Point(x1, p0.y + (p1.y - p0.y) * ((x1 - p0.x) / (p1.x - p0.x)))._round();\n            }\n\n            if (p0.y < y1 && p1.y < y1) {\n                continue;\n            } else if (p0.y < y1) {\n                p0 = new Point(p0.x + (p1.x - p0.x) * ((y1 - p0.y) / (p1.y - p0.y)), y1)._round();\n            } else if (p1.y < y1) {\n                p1 = new Point(p0.x + (p1.x - p0.x) * ((y1 - p0.y) / (p1.y - p0.y)), y1)._round();\n            }\n\n            if (p0.x >= x2 && p1.x >= x2) {\n                continue;\n            } else if (p0.x >= x2) {\n                p0 = new Point(x2, p0.y + (p1.y - p0.y) * ((x2 - p0.x) / (p1.x - p0.x)))._round();\n            } else if (p1.x >= x2) {\n                p1 = new Point(x2, p0.y + (p1.y - p0.y) * ((x2 - p0.x) / (p1.x - p0.x)))._round();\n            }\n\n            if (p0.y >= y2 && p1.y >= y2) {\n                continue;\n            } else if (p0.y >= y2) {\n                p0 = new Point(p0.x + (p1.x - p0.x) * ((y2 - p0.y) / (p1.y - p0.y)), y2)._round();\n            } else if (p1.y >= y2) {\n                p1 = new Point(p0.x + (p1.x - p0.x) * ((y2 - p0.y) / (p1.y - p0.y)), y2)._round();\n            }\n\n            if (!clippedLine || !p0.equals(clippedLine[clippedLine.length - 1])) {\n                clippedLine = [p0];\n                clippedLines.push(clippedLine);\n            }\n\n            clippedLine.push(p1);\n        }\n    }\n\n    return clippedLines;\n}\n","// @flow\n\nimport { AlphaImage } from '../util/image';\nimport { register } from '../util/web_worker_transfer';\nimport potpack from 'potpack';\n\nimport type {GlyphMetrics, StyleGlyph} from '../style/style_glyph';\n\nconst padding = 1;\n\ntype Rect = {\n    x: number,\n    y: number,\n    w: number,\n    h: number\n};\n\nexport type GlyphPosition = {\n    rect: Rect,\n    metrics: GlyphMetrics\n};\n\nexport type GlyphPositions = { [string]: { [number]: GlyphPosition } }\n\nexport default class GlyphAtlas {\n    image: AlphaImage;\n    positions: GlyphPositions;\n\n    constructor(stacks: { [string]: { [number]: ?StyleGlyph } }) {\n        const positions = {};\n        const bins = [];\n\n        for (const stack in stacks) {\n            const glyphs = stacks[stack];\n            const stackPositions = positions[stack] = {};\n\n            for (const id in glyphs) {\n                const src = glyphs[+id];\n                if (!src || src.bitmap.width === 0 || src.bitmap.height === 0) continue;\n\n                const bin = {\n                    x: 0,\n                    y: 0,\n                    w: src.bitmap.width + 2 * padding,\n                    h: src.bitmap.height + 2 * padding\n                };\n                bins.push(bin);\n                stackPositions[id] = {rect: bin, metrics: src.metrics};\n            }\n        }\n\n        const {w, h} = potpack(bins);\n        const image = new AlphaImage({width: w || 1, height: h || 1});\n\n        for (const stack in stacks) {\n            const glyphs = stacks[stack];\n\n            for (const id in glyphs) {\n                const src = glyphs[+id];\n                if (!src || src.bitmap.width === 0 || src.bitmap.height === 0) continue;\n                const bin = positions[stack][id].rect;\n                AlphaImage.copy(src.bitmap, image, {x: 0, y: 0}, {x: bin.x + padding, y: bin.y + padding}, src.bitmap);\n            }\n        }\n\n        this.image = image;\n        this.positions = positions;\n    }\n}\n\nregister('GlyphAtlas', GlyphAtlas);\n","// @flow\n\nimport FeatureIndex from '../data/feature_index';\n\nimport { performSymbolLayout } from '../symbol/symbol_layout';\nimport { CollisionBoxArray } from '../data/array_types';\nimport DictionaryCoder from '../util/dictionary_coder';\nimport SymbolBucket from '../data/bucket/symbol_bucket';\nimport LineBucket from '../data/bucket/line_bucket';\nimport FillBucket from '../data/bucket/fill_bucket';\nimport FillExtrusionBucket from '../data/bucket/fill_extrusion_bucket';\nimport { warnOnce, mapObject, values } from '../util/util';\nimport assert from 'assert';\nimport ImageAtlas from '../render/image_atlas';\nimport GlyphAtlas from '../render/glyph_atlas';\nimport EvaluationParameters from '../style/evaluation_parameters';\nimport { OverscaledTileID } from './tile_id';\n\nimport type {Bucket} from '../data/bucket';\nimport type Actor from '../util/actor';\nimport type StyleLayer from '../style/style_layer';\nimport type StyleLayerIndex from '../style/style_layer_index';\nimport type {StyleImage} from '../style/style_image';\nimport type {StyleGlyph} from '../style/style_glyph';\nimport type {\n    WorkerTileParameters,\n    WorkerTileCallback,\n} from '../source/worker_source';\n\nclass WorkerTile {\n    tileID: OverscaledTileID;\n    uid: string;\n    zoom: number;\n    pixelRatio: number;\n    tileSize: number;\n    source: string;\n    overscaling: number;\n    showCollisionBoxes: boolean;\n    collectResourceTiming: boolean;\n    returnDependencies: boolean;\n\n    status: 'parsing' | 'done';\n    data: VectorTile;\n    collisionBoxArray: CollisionBoxArray;\n\n    abort: ?() => void;\n    reloadCallback: WorkerTileCallback;\n    vectorTile: VectorTile;\n\n    constructor(params: WorkerTileParameters) {\n        this.tileID = new OverscaledTileID(params.tileID.overscaledZ, params.tileID.wrap, params.tileID.canonical.z, params.tileID.canonical.x, params.tileID.canonical.y);\n        this.uid = params.uid;\n        this.zoom = params.zoom;\n        this.pixelRatio = params.pixelRatio;\n        this.tileSize = params.tileSize;\n        this.source = params.source;\n        this.overscaling = this.tileID.overscaleFactor();\n        this.showCollisionBoxes = params.showCollisionBoxes;\n        this.collectResourceTiming = !!params.collectResourceTiming;\n        this.returnDependencies = !!params.returnDependencies;\n    }\n\n    parse(data: VectorTile, layerIndex: StyleLayerIndex, actor: Actor, callback: WorkerTileCallback) {\n        this.status = 'parsing';\n        this.data = data;\n\n        this.collisionBoxArray = new CollisionBoxArray();\n        const sourceLayerCoder = new DictionaryCoder(Object.keys(data.layers).sort());\n\n        const featureIndex = new FeatureIndex(this.tileID);\n        featureIndex.bucketLayerIDs = [];\n\n        const buckets: {[string]: Bucket} = {};\n\n        const options = {\n            featureIndex,\n            iconDependencies: {},\n            patternDependencies: {},\n            glyphDependencies: {}\n        };\n\n        const layerFamilies = layerIndex.familiesBySource[this.source];\n        for (const sourceLayerId in layerFamilies) {\n            const sourceLayer = data.layers[sourceLayerId];\n            if (!sourceLayer) {\n                continue;\n            }\n\n            if (sourceLayer.version === 1) {\n                warnOnce(`Vector tile source \"${this.source}\" layer \"${sourceLayerId}\" ` +\n                    `does not use vector tile spec v2 and therefore may have some rendering errors.`);\n            }\n\n            const sourceLayerIndex = sourceLayerCoder.encode(sourceLayerId);\n            const features = [];\n            for (let index = 0; index < sourceLayer.length; index++) {\n                const feature = sourceLayer.feature(index);\n                features.push({ feature, index, sourceLayerIndex });\n            }\n\n            for (const family of layerFamilies[sourceLayerId]) {\n                const layer = family[0];\n\n                assert(layer.source === this.source);\n                if (layer.minzoom && this.zoom < Math.floor(layer.minzoom)) continue;\n                if (layer.maxzoom && this.zoom >= layer.maxzoom) continue;\n                if (layer.visibility === 'none') continue;\n\n                recalculateLayers(family, this.zoom);\n\n                const bucket = buckets[layer.id] = layer.createBucket({\n                    index: featureIndex.bucketLayerIDs.length,\n                    layers: family,\n                    zoom: this.zoom,\n                    pixelRatio: this.pixelRatio,\n                    overscaling: this.overscaling,\n                    collisionBoxArray: this.collisionBoxArray,\n                    sourceLayerIndex,\n                    sourceID: this.source\n                });\n\n                bucket.populate(features, options);\n                featureIndex.bucketLayerIDs.push(family.map((l) => l.id));\n            }\n        }\n\n        let error: ?Error;\n        let glyphMap: ?{[string]: {[number]: ?StyleGlyph}};\n        let iconMap: ?{[string]: StyleImage};\n        let patternMap: ?{[string]: StyleImage};\n\n        const stacks = mapObject(options.glyphDependencies, (glyphs) => Object.keys(glyphs).map(Number));\n        if (Object.keys(stacks).length) {\n            actor.send('getGlyphs', {uid: this.uid, stacks}, (err, result) => {\n                if (!error) {\n                    error = err;\n                    glyphMap = result;\n                    maybePrepare.call(this);\n                }\n            });\n        } else {\n            glyphMap = {};\n        }\n\n        const icons = Object.keys(options.iconDependencies);\n        if (icons.length) {\n            actor.send('getImages', {icons}, (err, result) => {\n                if (!error) {\n                    error = err;\n                    iconMap = result;\n                    maybePrepare.call(this);\n                }\n            });\n        } else {\n            iconMap = {};\n        }\n\n        const patterns = Object.keys(options.patternDependencies);\n        if (patterns.length) {\n            actor.send('getImages', {icons: patterns}, (err, result) => {\n                if (!error) {\n                    error = err;\n                    patternMap = result;\n                    maybePrepare.call(this);\n                }\n            });\n        } else {\n            patternMap = {};\n        }\n\n\n        maybePrepare.call(this);\n\n        function maybePrepare() {\n            if (error) {\n                return callback(error);\n            } else if (glyphMap && iconMap && patternMap) {\n                const glyphAtlas = new GlyphAtlas(glyphMap);\n                const imageAtlas = new ImageAtlas(iconMap, patternMap);\n\n                for (const key in buckets) {\n                    const bucket = buckets[key];\n                    if (bucket instanceof SymbolBucket) {\n                        recalculateLayers(bucket.layers, this.zoom);\n                        performSymbolLayout(bucket, glyphMap, glyphAtlas.positions, iconMap, imageAtlas.iconPositions, this.showCollisionBoxes);\n                    } else if (bucket.hasPattern &&\n                        (bucket instanceof LineBucket ||\n                         bucket instanceof FillBucket ||\n                         bucket instanceof FillExtrusionBucket)) {\n                        recalculateLayers(bucket.layers, this.zoom);\n                        bucket.addFeatures(options, imageAtlas.patternPositions);\n                    }\n                }\n\n                this.status = 'done';\n                callback(null, {\n                    buckets: values(buckets).filter(b => !b.isEmpty()),\n                    featureIndex,\n                    collisionBoxArray: this.collisionBoxArray,\n                    glyphAtlasImage: glyphAtlas.image,\n                    imageAtlas,\n                    // Only used for benchmarking:\n                    glyphMap: this.returnDependencies ? glyphMap : null,\n                    iconMap: this.returnDependencies ? iconMap : null,\n                    glyphPositions: this.returnDependencies ? glyphAtlas.positions : null\n                });\n            }\n        }\n    }\n}\n\nfunction recalculateLayers(layers: $ReadOnlyArray<StyleLayer>, zoom: number) {\n    // Layers are shared and may have been used by a WorkerTile with a different zoom.\n    const parameters = new EvaluationParameters(zoom);\n    for (const layer of layers) {\n        layer.recalculate(parameters);\n    }\n}\n\nexport default WorkerTile;\n","// @flow\n\nimport type {RequestParameters} from '../util/ajax';\n\n// Wraps performance to facilitate testing\n// Not incorporated into browser.js because the latter is poisonous when used outside the main thread\nconst performanceExists = typeof performance !== 'undefined';\nconst wrapper = {};\n\nwrapper.getEntriesByName = (url: string) => {\n    if (performanceExists && performance && performance.getEntriesByName)\n        return performance.getEntriesByName(url);\n    else\n        return false;\n};\n\nwrapper.mark = (name: string) => {\n    if (performanceExists && performance && performance.mark)\n        return performance.mark(name);\n    else\n        return false;\n};\n\nwrapper.measure = (name: string, startMark: string, endMark: string) => {\n    if (performanceExists && performance && performance.measure)\n        return performance.measure(name, startMark, endMark);\n    else\n        return false;\n};\n\nwrapper.clearMarks = (name: string) => {\n    if (performanceExists && performance && performance.clearMarks)\n        return performance.clearMarks(name);\n    else\n        return false;\n};\n\nwrapper.clearMeasures = (name: string) => {\n    if (performanceExists && performance && performance.clearMeasures)\n        return performance.clearMeasures(name);\n    else\n        return false;\n};\n\n/**\n * Safe wrapper for the performance resource timing API in web workers with graceful degradation\n *\n * @param {RequestParameters} request\n * @private\n */\nclass Performance {\n    _marks: {start: string, end: string, measure: string};\n\n    constructor (request: RequestParameters) {\n        this._marks = {\n            start: [request.url, 'start'].join('#'),\n            end: [request.url, 'end'].join('#'),\n            measure: request.url.toString()\n        };\n\n        wrapper.mark(this._marks.start);\n    }\n\n    finish() {\n        wrapper.mark(this._marks.end);\n        let resourceTimingData = wrapper.getEntriesByName(this._marks.measure);\n\n        // fallback if web worker implementation of perf.getEntriesByName returns empty\n        if (resourceTimingData.length === 0) {\n            wrapper.measure(this._marks.measure, this._marks.start, this._marks.end);\n            resourceTimingData = wrapper.getEntriesByName(this._marks.measure);\n\n            // cleanup\n            wrapper.clearMarks(this._marks.start);\n            wrapper.clearMarks(this._marks.end);\n            wrapper.clearMeasures(this._marks.measure);\n        }\n\n        return resourceTimingData;\n    }\n}\n\nwrapper.Performance = Performance;\n\nexport default wrapper;\n","// @flow\n\nimport { getArrayBuffer } from '../util/ajax';\n\nimport vt from '@mapbox/vector-tile';\nimport Protobuf from 'pbf';\nimport WorkerTile from './worker_tile';\nimport { extend } from '../util/util';\nimport performance from '../util/performance';\n\nimport type {\n    WorkerSource,\n    WorkerTileParameters,\n    WorkerTileCallback,\n    TileParameters\n} from '../source/worker_source';\n\nimport type {PerformanceResourceTiming} from '../types/performance_resource_timing';\nimport type Actor from '../util/actor';\nimport type StyleLayerIndex from '../style/style_layer_index';\nimport type {Callback} from '../types/callback';\n\nexport type LoadVectorTileResult = {\n    vectorTile: VectorTile;\n    rawData: ArrayBuffer;\n    expires?: any;\n    cacheControl?: any;\n    resourceTiming?: Array<PerformanceResourceTiming>;\n};\n\n/**\n * @callback LoadVectorDataCallback\n * @param error\n * @param vectorTile\n * @private\n */\nexport type LoadVectorDataCallback = Callback<?LoadVectorTileResult>;\n\nexport type AbortVectorData = () => void;\nexport type LoadVectorData = (params: WorkerTileParameters, callback: LoadVectorDataCallback) => ?AbortVectorData;\n\n/**\n * @private\n */\nfunction loadVectorTile(params: WorkerTileParameters, callback: LoadVectorDataCallback) {\n    const request = getArrayBuffer(params.request, (err: ?Error, data: ?ArrayBuffer, cacheControl: ?string, expires: ?string) => {\n        if (err) {\n            callback(err);\n        } else if (data) {\n            callback(null, {\n                vectorTile: new vt.VectorTile(new Protobuf(data)),\n                rawData: data,\n                cacheControl,\n                expires\n            });\n        }\n    });\n    return () => {\n        request.cancel();\n        callback();\n    };\n}\n\n/**\n * The {@link WorkerSource} implementation that supports {@link VectorTileSource}.\n * This class is designed to be easily reused to support custom source types\n * for data formats that can be parsed/converted into an in-memory VectorTile\n * representation.  To do so, create it with\n * `new VectorTileWorkerSource(actor, styleLayers, customLoadVectorDataFunction)`.\n *\n * @private\n */\nclass VectorTileWorkerSource implements WorkerSource {\n    actor: Actor;\n    layerIndex: StyleLayerIndex;\n    loadVectorData: LoadVectorData;\n    loading: { [string]: WorkerTile };\n    loaded: { [string]: WorkerTile };\n\n    /**\n     * @param [loadVectorData] Optional method for custom loading of a VectorTile\n     * object based on parameters passed from the main-thread Source. See\n     * {@link VectorTileWorkerSource#loadTile}. The default implementation simply\n     * loads the pbf at `params.url`.\n     */\n    constructor(actor: Actor, layerIndex: StyleLayerIndex, loadVectorData: ?LoadVectorData) {\n        this.actor = actor;\n        this.layerIndex = layerIndex;\n        this.loadVectorData = loadVectorData || loadVectorTile;\n        this.loading = {};\n        this.loaded = {};\n    }\n\n    /**\n     * Implements {@link WorkerSource#loadTile}. Delegates to\n     * {@link VectorTileWorkerSource#loadVectorData} (which by default expects\n     * a `params.url` property) for fetching and producing a VectorTile object.\n     */\n    loadTile(params: WorkerTileParameters, callback: WorkerTileCallback) {\n        const uid = params.uid;\n\n        if (!this.loading)\n            this.loading = {};\n\n        const perf = (params && params.request && params.request.collectResourceTiming) ?\n            new performance.Performance(params.request) : false;\n\n        const workerTile = this.loading[uid] = new WorkerTile(params);\n        workerTile.abort = this.loadVectorData(params, (err, response) => {\n            delete this.loading[uid];\n\n            if (err || !response) {\n                workerTile.status = 'done';\n                this.loaded[uid] = workerTile;\n                return callback(err);\n            }\n\n            const rawTileData = response.rawData;\n            const cacheControl = {};\n            if (response.expires) cacheControl.expires = response.expires;\n            if (response.cacheControl) cacheControl.cacheControl = response.cacheControl;\n\n            const resourceTiming = {};\n            if (perf) {\n                const resourceTimingData = perf.finish();\n                // it's necessary to eval the result of getEntriesByName() here via parse/stringify\n                // late evaluation in the main thread causes TypeError: illegal invocation\n                if (resourceTimingData)\n                    resourceTiming.resourceTiming = JSON.parse(JSON.stringify(resourceTimingData));\n            }\n\n            workerTile.vectorTile = response.vectorTile;\n            workerTile.parse(response.vectorTile, this.layerIndex, this.actor, (err, result) => {\n                if (err || !result) return callback(err);\n\n                // Transferring a copy of rawTileData because the worker needs to retain its copy.\n                callback(null, extend({rawTileData: rawTileData.slice(0)}, result, cacheControl, resourceTiming));\n            });\n\n            this.loaded = this.loaded || {};\n            this.loaded[uid] = workerTile;\n        });\n    }\n\n    /**\n     * Implements {@link WorkerSource#reloadTile}.\n     */\n    reloadTile(params: WorkerTileParameters, callback: WorkerTileCallback) {\n        const loaded = this.loaded,\n            uid = params.uid,\n            vtSource = this;\n        if (loaded && loaded[uid]) {\n            const workerTile = loaded[uid];\n            workerTile.showCollisionBoxes = params.showCollisionBoxes;\n\n            const done = (err, data) => {\n                const reloadCallback = workerTile.reloadCallback;\n                if (reloadCallback) {\n                    delete workerTile.reloadCallback;\n                    workerTile.parse(workerTile.vectorTile, vtSource.layerIndex, vtSource.actor, reloadCallback);\n                }\n                callback(err, data);\n            };\n\n            if (workerTile.status === 'parsing') {\n                workerTile.reloadCallback = done;\n            } else if (workerTile.status === 'done') {\n                // if there was no vector tile data on the initial load, don't try and re-parse tile\n                if (workerTile.vectorTile) {\n                    workerTile.parse(workerTile.vectorTile, this.layerIndex, this.actor, done);\n                } else {\n                    done();\n                }\n            }\n        }\n    }\n\n    /**\n     * Implements {@link WorkerSource#abortTile}.\n     *\n     * @param params\n     * @param params.uid The UID for this tile.\n     */\n    abortTile(params: TileParameters, callback: WorkerTileCallback) {\n        const loading = this.loading,\n            uid = params.uid;\n        if (loading && loading[uid] && loading[uid].abort) {\n            loading[uid].abort();\n            delete loading[uid];\n        }\n        callback();\n    }\n\n    /**\n     * Implements {@link WorkerSource#removeTile}.\n     *\n     * @param params\n     * @param params.uid The UID for this tile.\n     */\n    removeTile(params: TileParameters, callback: WorkerTileCallback) {\n        const loaded = this.loaded,\n            uid = params.uid;\n        if (loaded && loaded[uid]) {\n            delete loaded[uid];\n        }\n        callback();\n    }\n}\n\nexport default VectorTileWorkerSource;\n","// @flow\n\nimport DEMData from '../data/dem_data';\n\nimport type Actor from '../util/actor';\nimport type {\n    WorkerDEMTileParameters,\n    WorkerDEMTileCallback,\n    TileParameters\n} from './worker_source';\n\n\nclass RasterDEMTileWorkerSource {\n    actor: Actor;\n    loaded: {[string]: DEMData};\n\n    constructor() {\n        this.loaded = {};\n    }\n\n    loadTile(params: WorkerDEMTileParameters, callback: WorkerDEMTileCallback) {\n        const {uid, encoding, rawImageData} = params;\n        const dem = new DEMData(uid, rawImageData, encoding);\n\n        this.loaded = this.loaded || {};\n        this.loaded[uid] = dem;\n        callback(null, dem);\n    }\n\n    removeTile(params: TileParameters) {\n        const loaded = this.loaded,\n            uid = params.uid;\n        if (loaded && loaded[uid]) {\n            delete loaded[uid];\n        }\n    }\n}\n\nexport default RasterDEMTileWorkerSource;\n","module.exports.RADIUS = 6378137;\nmodule.exports.FLATTENING = 1/298.257223563;\nmodule.exports.POLAR_RADIUS = 6356752.3142;\n","var wgs84 = require('wgs84');\n\nmodule.exports.geometry = geometry;\nmodule.exports.ring = ringArea;\n\nfunction geometry(_) {\n    var area = 0, i;\n    switch (_.type) {\n        case 'Polygon':\n            return polygonArea(_.coordinates);\n        case 'MultiPolygon':\n            for (i = 0; i < _.coordinates.length; i++) {\n                area += polygonArea(_.coordinates[i]);\n            }\n            return area;\n        case 'Point':\n        case 'MultiPoint':\n        case 'LineString':\n        case 'MultiLineString':\n            return 0;\n        case 'GeometryCollection':\n            for (i = 0; i < _.geometries.length; i++) {\n                area += geometry(_.geometries[i]);\n            }\n            return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * Calculate the approximate area of the polygon were it projected onto\n *     the earth.  Note that this area will be positive if ring is oriented\n *     clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n *     Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n *     Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * Returns:\n * {float} The approximate signed geodesic area of the polygon in square\n *     meters.\n */\n\nfunction ringArea(coords) {\n    var p1, p2, p3, lowerIndex, middleIndex, upperIndex, i,\n    area = 0,\n    coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) {// i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength -1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) {// i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i+1;\n                upperIndex = i+2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += ( rad(p3[0]) - rad(p1[0]) ) * Math.sin( rad(p2[1]));\n        }\n\n        area = area * wgs84.RADIUS * wgs84.RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}","var geojsonArea = require('@mapbox/geojson-area');\n\nmodule.exports = rewind;\n\nfunction rewind(gj, outer) {\n    switch ((gj && gj.type) || null) {\n        case 'FeatureCollection':\n            gj.features = gj.features.map(curryOuter(rewind, outer));\n            return gj;\n        case 'GeometryCollection':\n            gj.geometries = gj.geometries.map(curryOuter(rewind, outer));\n            return gj;\n        case 'Feature':\n            gj.geometry = rewind(gj.geometry, outer);\n            return gj;\n        case 'Polygon':\n        case 'MultiPolygon':\n            return correct(gj, outer);\n        default:\n            return gj;\n    }\n}\n\nfunction curryOuter(a, b) {\n    return function(_) { return a(_, b); };\n}\n\nfunction correct(_, outer) {\n    if (_.type === 'Polygon') {\n        _.coordinates = correctRings(_.coordinates, outer);\n    } else if (_.type === 'MultiPolygon') {\n        _.coordinates = _.coordinates.map(curryOuter(correctRings, outer));\n    }\n    return _;\n}\n\nfunction correctRings(_, outer) {\n    outer = !!outer;\n    _[0] = wind(_[0], outer);\n    for (var i = 1; i < _.length; i++) {\n        _[i] = wind(_[i], !outer);\n    }\n    return _;\n}\n\nfunction wind(_, dir) {\n    return cw(_) === dir ? _ : _.reverse();\n}\n\nfunction cw(_) {\n    return geojsonArea.ring(_) >= 0;\n}\n","// @flow\n\nimport Point from '@mapbox/point-geometry';\n\nimport mvt from '@mapbox/vector-tile';\nconst toGeoJSON = mvt.VectorTileFeature.prototype.toGeoJSON;\nimport EXTENT from '../data/extent';\n\n// The feature type used by geojson-vt and supercluster. Should be extracted to\n// global type and used in module definitions for those two modules.\ntype Feature = {\n    type: 1,\n    id: mixed,\n    tags: {[string]: string | number | boolean},\n    geometry: Array<[number, number]>,\n} | {\n    type: 2 | 3,\n    id: mixed,\n    tags: {[string]: string | number | boolean},\n    geometry: Array<Array<[number, number]>>,\n}\n\nclass FeatureWrapper implements VectorTileFeature {\n    _feature: Feature;\n\n    extent: number;\n    type: 1 | 2 | 3;\n    id: number;\n    properties: {[string]: string | number | boolean};\n\n    constructor(feature: Feature) {\n        this._feature = feature;\n\n        this.extent = EXTENT;\n        this.type = feature.type;\n        this.properties = feature.tags;\n\n        // If the feature has a top-level `id` property, copy it over, but only\n        // if it can be coerced to an integer, because this wrapper is used for\n        // serializing geojson feature data into vector tile PBF data, and the\n        // vector tile spec only supports integer values for feature ids --\n        // allowing non-integer values here results in a non-compliant PBF\n        // that causes an exception when it is parsed with vector-tile-js\n        if ('id' in feature && !isNaN(feature.id)) {\n            this.id = parseInt(feature.id, 10);\n        }\n    }\n\n    loadGeometry() {\n        if (this._feature.type === 1) {\n            const geometry = [];\n            for (const point of this._feature.geometry) {\n                geometry.push([new Point(point[0], point[1])]);\n            }\n            return geometry;\n        } else {\n            const geometry = [];\n            for (const ring of this._feature.geometry) {\n                const newRing = [];\n                for (const point of ring) {\n                    newRing.push(new Point(point[0], point[1]));\n                }\n                geometry.push(newRing);\n            }\n            return geometry;\n        }\n    }\n\n    toGeoJSON(x: number, y: number, z: number) {\n        return toGeoJSON.call(this, x, y, z);\n    }\n}\n\nclass GeoJSONWrapper implements VectorTile, VectorTileLayer {\n    layers: {[string]: VectorTileLayer};\n    name: string;\n    extent: number;\n    length: number;\n    _features: Array<Feature>;\n\n    constructor(features: Array<Feature>) {\n        this.layers = { '_geojsonTileLayer': this };\n        this.name = '_geojsonTileLayer';\n        this.extent = EXTENT;\n        this.length = features.length;\n        this._features = features;\n    }\n\n    feature(i: number): VectorTileFeature {\n        return new FeatureWrapper(this._features[i]);\n    }\n}\n\nexport default GeoJSONWrapper;\n","'use strict'\n\nvar Point = require('@mapbox/point-geometry')\nvar VectorTileFeature = require('@mapbox/vector-tile').VectorTileFeature\n\nmodule.exports = GeoJSONWrapper\n\n// conform to vectortile api\nfunction GeoJSONWrapper (features, options) {\n  this.options = options || {}\n  this.features = features\n  this.length = features.length\n}\n\nGeoJSONWrapper.prototype.feature = function (i) {\n  return new FeatureWrapper(this.features[i], this.options.extent)\n}\n\nfunction FeatureWrapper (feature, extent) {\n  this.id = typeof feature.id === 'number' ? feature.id : undefined\n  this.type = feature.type\n  this.rawGeometry = feature.type === 1 ? [feature.geometry] : feature.geometry\n  this.properties = feature.tags\n  this.extent = extent || 4096\n}\n\nFeatureWrapper.prototype.loadGeometry = function () {\n  var rings = this.rawGeometry\n  this.geometry = []\n\n  for (var i = 0; i < rings.length; i++) {\n    var ring = rings[i]\n    var newRing = []\n    for (var j = 0; j < ring.length; j++) {\n      newRing.push(new Point(ring[j][0], ring[j][1]))\n    }\n    this.geometry.push(newRing)\n  }\n  return this.geometry\n}\n\nFeatureWrapper.prototype.bbox = function () {\n  if (!this.geometry) this.loadGeometry()\n\n  var rings = this.geometry\n  var x1 = Infinity\n  var x2 = -Infinity\n  var y1 = Infinity\n  var y2 = -Infinity\n\n  for (var i = 0; i < rings.length; i++) {\n    var ring = rings[i]\n\n    for (var j = 0; j < ring.length; j++) {\n      var coord = ring[j]\n\n      x1 = Math.min(x1, coord.x)\n      x2 = Math.max(x2, coord.x)\n      y1 = Math.min(y1, coord.y)\n      y2 = Math.max(y2, coord.y)\n    }\n  }\n\n  return [x1, y1, x2, y2]\n}\n\nFeatureWrapper.prototype.toGeoJSON = VectorTileFeature.prototype.toGeoJSON\n","var Pbf = require('pbf')\nvar GeoJSONWrapper = require('./lib/geojson_wrapper')\n\nmodule.exports = fromVectorTileJs\nmodule.exports.fromVectorTileJs = fromVectorTileJs\nmodule.exports.fromGeojsonVt = fromGeojsonVt\nmodule.exports.GeoJSONWrapper = GeoJSONWrapper\n\n/**\n * Serialize a vector-tile-js-created tile to pbf\n *\n * @param {Object} tile\n * @return {Buffer} uncompressed, pbf-serialized tile data\n */\nfunction fromVectorTileJs (tile) {\n  var out = new Pbf()\n  writeTile(tile, out)\n  return out.finish()\n}\n\n/**\n * Serialized a geojson-vt-created tile to pbf.\n *\n * @param {Object} layers - An object mapping layer names to geojson-vt-created vector tile objects\n * @param {Object} [options] - An object specifying the vector-tile specification version and extent that were used to create `layers`.\n * @param {Number} [options.version=1] - Version of vector-tile spec used\n * @param {Number} [options.extent=4096] - Extent of the vector tile\n * @return {Buffer} uncompressed, pbf-serialized tile data\n */\nfunction fromGeojsonVt (layers, options) {\n  options = options || {}\n  var l = {}\n  for (var k in layers) {\n    l[k] = new GeoJSONWrapper(layers[k].features, options)\n    l[k].name = k\n    l[k].version = options.version\n    l[k].extent = options.extent\n  }\n  return fromVectorTileJs({layers: l})\n}\n\nfunction writeTile (tile, pbf) {\n  for (var key in tile.layers) {\n    pbf.writeMessage(3, writeLayer, tile.layers[key])\n  }\n}\n\nfunction writeLayer (layer, pbf) {\n  pbf.writeVarintField(15, layer.version || 1)\n  pbf.writeStringField(1, layer.name || '')\n  pbf.writeVarintField(5, layer.extent || 4096)\n\n  var i\n  var context = {\n    keys: [],\n    values: [],\n    keycache: {},\n    valuecache: {}\n  }\n\n  for (i = 0; i < layer.length; i++) {\n    context.feature = layer.feature(i)\n    pbf.writeMessage(2, writeFeature, context)\n  }\n\n  var keys = context.keys\n  for (i = 0; i < keys.length; i++) {\n    pbf.writeStringField(3, keys[i])\n  }\n\n  var values = context.values\n  for (i = 0; i < values.length; i++) {\n    pbf.writeMessage(4, writeValue, values[i])\n  }\n}\n\nfunction writeFeature (context, pbf) {\n  var feature = context.feature\n\n  if (feature.id !== undefined) {\n    pbf.writeVarintField(1, feature.id)\n  }\n\n  pbf.writeMessage(2, writeProperties, context)\n  pbf.writeVarintField(3, feature.type)\n  pbf.writeMessage(4, writeGeometry, feature)\n}\n\nfunction writeProperties (context, pbf) {\n  var feature = context.feature\n  var keys = context.keys\n  var values = context.values\n  var keycache = context.keycache\n  var valuecache = context.valuecache\n\n  for (var key in feature.properties) {\n    var keyIndex = keycache[key]\n    if (typeof keyIndex === 'undefined') {\n      keys.push(key)\n      keyIndex = keys.length - 1\n      keycache[key] = keyIndex\n    }\n    pbf.writeVarint(keyIndex)\n\n    var value = feature.properties[key]\n    var type = typeof value\n    if (type !== 'string' && type !== 'boolean' && type !== 'number') {\n      value = JSON.stringify(value)\n    }\n    var valueKey = type + ':' + value\n    var valueIndex = valuecache[valueKey]\n    if (typeof valueIndex === 'undefined') {\n      values.push(value)\n      valueIndex = values.length - 1\n      valuecache[valueKey] = valueIndex\n    }\n    pbf.writeVarint(valueIndex)\n  }\n}\n\nfunction command (cmd, length) {\n  return (length << 3) + (cmd & 0x7)\n}\n\nfunction zigzag (num) {\n  return (num << 1) ^ (num >> 31)\n}\n\nfunction writeGeometry (feature, pbf) {\n  var geometry = feature.loadGeometry()\n  var type = feature.type\n  var x = 0\n  var y = 0\n  var rings = geometry.length\n  for (var r = 0; r < rings; r++) {\n    var ring = geometry[r]\n    var count = 1\n    if (type === 1) {\n      count = ring.length\n    }\n    pbf.writeVarint(command(1, count)) // moveto\n    // do not write polygon closing path as lineto\n    var lineCount = type === 3 ? ring.length - 1 : ring.length\n    for (var i = 0; i < lineCount; i++) {\n      if (i === 1 && type !== 1) {\n        pbf.writeVarint(command(2, lineCount - 1)) // lineto\n      }\n      var dx = ring[i].x - x\n      var dy = ring[i].y - y\n      pbf.writeVarint(zigzag(dx))\n      pbf.writeVarint(zigzag(dy))\n      x += dx\n      y += dy\n    }\n    if (type === 3) {\n      pbf.writeVarint(command(7, 1)) // closepath\n    }\n  }\n}\n\nfunction writeValue (value, pbf) {\n  var type = typeof value\n  if (type === 'string') {\n    pbf.writeStringField(1, value)\n  } else if (type === 'boolean') {\n    pbf.writeBooleanField(7, value)\n  } else if (type === 'number') {\n    if (value % 1 !== 0) {\n      pbf.writeDoubleField(3, value)\n    } else if (value < 0) {\n      pbf.writeSVarintField(6, value)\n    } else {\n      pbf.writeVarintField(5, value)\n    }\n  }\n}\n","// @flow\n\nimport { mat4 } from 'gl-matrix';\nimport EXTENT from '../data/extent';\nimport { PosArray } from '../data/array_types';\nimport { LineIndexArray } from '../data/index_array_type';\nimport posAttributes from '../data/pos_attributes';\nimport SegmentVector from '../data/segment';\nimport DepthMode from '../gl/depth_mode';\nimport StencilMode from '../gl/stencil_mode';\nimport CullFaceMode from '../gl/cull_face_mode';\nimport { debugUniformValues } from './program/debug_program';\nimport Color from '../style-spec/util/color';\n\nimport type Painter from './painter';\nimport type SourceCache from '../source/source_cache';\nimport type {OverscaledTileID} from '../source/tile_id';\n\nexport default drawDebug;\n\nfunction drawDebug(painter: Painter, sourceCache: SourceCache, coords: Array<OverscaledTileID>) {\n    for (let i = 0; i < coords.length; i++) {\n        drawDebugTile(painter, sourceCache, coords[i]);\n    }\n}\n\nfunction drawDebugTile(painter, sourceCache, coord) {\n    const context = painter.context;\n    const gl = context.gl;\n\n    const posMatrix = coord.posMatrix;\n    const program = painter.useProgram('debug');\n\n    const depthMode = DepthMode.disabled;\n    const stencilMode = StencilMode.disabled;\n    const colorMode = painter.colorModeForRenderPass();\n    const id = '$debug';\n\n    program.draw(context, gl.LINE_STRIP, depthMode, stencilMode, colorMode, CullFaceMode.disabled,\n        debugUniformValues(posMatrix, Color.red), id,\n        painter.debugBuffer, painter.tileBorderIndexBuffer, painter.debugSegments);\n\n    const vertices = createTextVertices(coord.toString(), 50, 200, 5);\n    const debugTextArray = new PosArray();\n    const debugTextIndices = new LineIndexArray();\n    for (let v = 0; v < vertices.length; v += 2) {\n        debugTextArray.emplaceBack(vertices[v], vertices[v + 1]);\n        debugTextIndices.emplaceBack(v, v + 1);\n    }\n    const debugTextBuffer = context.createVertexBuffer(debugTextArray, posAttributes.members);\n    const debugTextIndexBuffer = context.createIndexBuffer(debugTextIndices);\n    const debugTextSegment = SegmentVector.simpleSegment(0, 0, debugTextArray.length / 2, debugTextArray.length / 2);\n\n    // Draw the halo with multiple 1px lines instead of one wider line because\n    // the gl spec doesn't guarantee support for lines with width > 1.\n    const tileSize = sourceCache.getTile(coord).tileSize;\n    const onePixel = EXTENT / (Math.pow(2, painter.transform.zoom - coord.overscaledZ) * tileSize);\n    const translations = [[-1, -1], [-1, 1], [1, -1], [1, 1]];\n    for (let i = 0; i < translations.length; i++) {\n        const translation = translations[i];\n\n        program.draw(context, gl.LINES, depthMode, stencilMode, colorMode, CullFaceMode.disabled,\n            debugUniformValues(\n                mat4.translate([], posMatrix, [\n                    onePixel * translation[0],\n                    onePixel * translation[1], 0]),\n                Color.white),\n            id, debugTextBuffer, debugTextIndexBuffer, debugTextSegment);\n    }\n\n    program.draw(context, gl.LINES, depthMode, stencilMode, colorMode, CullFaceMode.disabled,\n        debugUniformValues(posMatrix, Color.black), id,\n        debugTextBuffer, debugTextIndexBuffer, debugTextSegment);\n}\n\n// Font data From Hershey Simplex Font\n// http://paulbourke.net/dataformats/hershey/\nconst simplexFont = {\n    \" \": [16, []],\n    \"!\": [10, [5, 21, 5, 7, -1, -1, 5, 2, 4, 1, 5, 0, 6, 1, 5, 2]],\n    \"\\\"\": [16, [4, 21, 4, 14, -1, -1, 12, 21, 12, 14]],\n    \"#\": [21, [11, 25, 4, -7, -1, -1, 17, 25, 10, -7, -1, -1, 4, 12, 18, 12, -1, -1, 3, 6, 17, 6]],\n    \"$\": [20, [8, 25, 8, -4, -1, -1, 12, 25, 12, -4, -1, -1, 17, 18, 15, 20, 12, 21, 8, 21, 5, 20, 3, 18, 3, 16, 4, 14, 5, 13, 7, 12, 13, 10, 15, 9, 16, 8, 17, 6, 17, 3, 15, 1, 12, 0, 8, 0, 5, 1, 3, 3]],\n    \"%\": [24, [21, 21, 3, 0, -1, -1, 8, 21, 10, 19, 10, 17, 9, 15, 7, 14, 5, 14, 3, 16, 3, 18, 4, 20, 6, 21, 8, 21, 10, 20, 13, 19, 16, 19, 19, 20, 21, 21, -1, -1, 17, 7, 15, 6, 14, 4, 14, 2, 16, 0, 18, 0, 20, 1, 21, 3, 21, 5, 19, 7, 17, 7]],\n    \"&\": [26, [23, 12, 23, 13, 22, 14, 21, 14, 20, 13, 19, 11, 17, 6, 15, 3, 13, 1, 11, 0, 7, 0, 5, 1, 4, 2, 3, 4, 3, 6, 4, 8, 5, 9, 12, 13, 13, 14, 14, 16, 14, 18, 13, 20, 11, 21, 9, 20, 8, 18, 8, 16, 9, 13, 11, 10, 16, 3, 18, 1, 20, 0, 22, 0, 23, 1, 23, 2]],\n    \"'\": [10, [5, 19, 4, 20, 5, 21, 6, 20, 6, 18, 5, 16, 4, 15]],\n    \"(\": [14, [11, 25, 9, 23, 7, 20, 5, 16, 4, 11, 4, 7, 5, 2, 7, -2, 9, -5, 11, -7]],\n    \")\": [14, [3, 25, 5, 23, 7, 20, 9, 16, 10, 11, 10, 7, 9, 2, 7, -2, 5, -5, 3, -7]],\n    \"*\": [16, [8, 21, 8, 9, -1, -1, 3, 18, 13, 12, -1, -1, 13, 18, 3, 12]],\n    \"+\": [26, [13, 18, 13, 0, -1, -1, 4, 9, 22, 9]],\n    \",\": [10, [6, 1, 5, 0, 4, 1, 5, 2, 6, 1, 6, -1, 5, -3, 4, -4]],\n    \"-\": [26, [4, 9, 22, 9]],\n    \".\": [10, [5, 2, 4, 1, 5, 0, 6, 1, 5, 2]],\n    \"/\": [22, [20, 25, 2, -7]],\n    \"0\": [20, [9, 21, 6, 20, 4, 17, 3, 12, 3, 9, 4, 4, 6, 1, 9, 0, 11, 0, 14, 1, 16, 4, 17, 9, 17, 12, 16, 17, 14, 20, 11, 21, 9, 21]],\n    \"1\": [20, [6, 17, 8, 18, 11, 21, 11, 0]],\n    \"2\": [20, [4, 16, 4, 17, 5, 19, 6, 20, 8, 21, 12, 21, 14, 20, 15, 19, 16, 17, 16, 15, 15, 13, 13, 10, 3, 0, 17, 0]],\n    \"3\": [20, [5, 21, 16, 21, 10, 13, 13, 13, 15, 12, 16, 11, 17, 8, 17, 6, 16, 3, 14, 1, 11, 0, 8, 0, 5, 1, 4, 2, 3, 4]],\n    \"4\": [20, [13, 21, 3, 7, 18, 7, -1, -1, 13, 21, 13, 0]],\n    \"5\": [20, [15, 21, 5, 21, 4, 12, 5, 13, 8, 14, 11, 14, 14, 13, 16, 11, 17, 8, 17, 6, 16, 3, 14, 1, 11, 0, 8, 0, 5, 1, 4, 2, 3, 4]],\n    \"6\": [20, [16, 18, 15, 20, 12, 21, 10, 21, 7, 20, 5, 17, 4, 12, 4, 7, 5, 3, 7, 1, 10, 0, 11, 0, 14, 1, 16, 3, 17, 6, 17, 7, 16, 10, 14, 12, 11, 13, 10, 13, 7, 12, 5, 10, 4, 7]],\n    \"7\": [20, [17, 21, 7, 0, -1, -1, 3, 21, 17, 21]],\n    \"8\": [20, [8, 21, 5, 20, 4, 18, 4, 16, 5, 14, 7, 13, 11, 12, 14, 11, 16, 9, 17, 7, 17, 4, 16, 2, 15, 1, 12, 0, 8, 0, 5, 1, 4, 2, 3, 4, 3, 7, 4, 9, 6, 11, 9, 12, 13, 13, 15, 14, 16, 16, 16, 18, 15, 20, 12, 21, 8, 21]],\n    \"9\": [20, [16, 14, 15, 11, 13, 9, 10, 8, 9, 8, 6, 9, 4, 11, 3, 14, 3, 15, 4, 18, 6, 20, 9, 21, 10, 21, 13, 20, 15, 18, 16, 14, 16, 9, 15, 4, 13, 1, 10, 0, 8, 0, 5, 1, 4, 3]],\n    \":\": [10, [5, 14, 4, 13, 5, 12, 6, 13, 5, 14, -1, -1, 5, 2, 4, 1, 5, 0, 6, 1, 5, 2]],\n    \";\": [10, [5, 14, 4, 13, 5, 12, 6, 13, 5, 14, -1, -1, 6, 1, 5, 0, 4, 1, 5, 2, 6, 1, 6, -1, 5, -3, 4, -4]],\n    \"<\": [24, [20, 18, 4, 9, 20, 0]],\n    \"=\": [26, [4, 12, 22, 12, -1, -1, 4, 6, 22, 6]],\n    \">\": [24, [4, 18, 20, 9, 4, 0]],\n    \"?\": [18, [3, 16, 3, 17, 4, 19, 5, 20, 7, 21, 11, 21, 13, 20, 14, 19, 15, 17, 15, 15, 14, 13, 13, 12, 9, 10, 9, 7, -1, -1, 9, 2, 8, 1, 9, 0, 10, 1, 9, 2]],\n    \"@\": [27, [18, 13, 17, 15, 15, 16, 12, 16, 10, 15, 9, 14, 8, 11, 8, 8, 9, 6, 11, 5, 14, 5, 16, 6, 17, 8, -1, -1, 12, 16, 10, 14, 9, 11, 9, 8, 10, 6, 11, 5, -1, -1, 18, 16, 17, 8, 17, 6, 19, 5, 21, 5, 23, 7, 24, 10, 24, 12, 23, 15, 22, 17, 20, 19, 18, 20, 15, 21, 12, 21, 9, 20, 7, 19, 5, 17, 4, 15, 3, 12, 3, 9, 4, 6, 5, 4, 7, 2, 9, 1, 12, 0, 15, 0, 18, 1, 20, 2, 21, 3, -1, -1, 19, 16, 18, 8, 18, 6, 19, 5]],\n    \"A\": [18, [9, 21, 1, 0, -1, -1, 9, 21, 17, 0, -1, -1, 4, 7, 14, 7]],\n    \"B\": [21, [4, 21, 4, 0, -1, -1, 4, 21, 13, 21, 16, 20, 17, 19, 18, 17, 18, 15, 17, 13, 16, 12, 13, 11, -1, -1, 4, 11, 13, 11, 16, 10, 17, 9, 18, 7, 18, 4, 17, 2, 16, 1, 13, 0, 4, 0]],\n    \"C\": [21, [18, 16, 17, 18, 15, 20, 13, 21, 9, 21, 7, 20, 5, 18, 4, 16, 3, 13, 3, 8, 4, 5, 5, 3, 7, 1, 9, 0, 13, 0, 15, 1, 17, 3, 18, 5]],\n    \"D\": [21, [4, 21, 4, 0, -1, -1, 4, 21, 11, 21, 14, 20, 16, 18, 17, 16, 18, 13, 18, 8, 17, 5, 16, 3, 14, 1, 11, 0, 4, 0]],\n    \"E\": [19, [4, 21, 4, 0, -1, -1, 4, 21, 17, 21, -1, -1, 4, 11, 12, 11, -1, -1, 4, 0, 17, 0]],\n    \"F\": [18, [4, 21, 4, 0, -1, -1, 4, 21, 17, 21, -1, -1, 4, 11, 12, 11]],\n    \"G\": [21, [18, 16, 17, 18, 15, 20, 13, 21, 9, 21, 7, 20, 5, 18, 4, 16, 3, 13, 3, 8, 4, 5, 5, 3, 7, 1, 9, 0, 13, 0, 15, 1, 17, 3, 18, 5, 18, 8, -1, -1, 13, 8, 18, 8]],\n    \"H\": [22, [4, 21, 4, 0, -1, -1, 18, 21, 18, 0, -1, -1, 4, 11, 18, 11]],\n    \"I\": [8, [4, 21, 4, 0]],\n    \"J\": [16, [12, 21, 12, 5, 11, 2, 10, 1, 8, 0, 6, 0, 4, 1, 3, 2, 2, 5, 2, 7]],\n    \"K\": [21, [4, 21, 4, 0, -1, -1, 18, 21, 4, 7, -1, -1, 9, 12, 18, 0]],\n    \"L\": [17, [4, 21, 4, 0, -1, -1, 4, 0, 16, 0]],\n    \"M\": [24, [4, 21, 4, 0, -1, -1, 4, 21, 12, 0, -1, -1, 20, 21, 12, 0, -1, -1, 20, 21, 20, 0]],\n    \"N\": [22, [4, 21, 4, 0, -1, -1, 4, 21, 18, 0, -1, -1, 18, 21, 18, 0]],\n    \"O\": [22, [9, 21, 7, 20, 5, 18, 4, 16, 3, 13, 3, 8, 4, 5, 5, 3, 7, 1, 9, 0, 13, 0, 15, 1, 17, 3, 18, 5, 19, 8, 19, 13, 18, 16, 17, 18, 15, 20, 13, 21, 9, 21]],\n    \"P\": [21, [4, 21, 4, 0, -1, -1, 4, 21, 13, 21, 16, 20, 17, 19, 18, 17, 18, 14, 17, 12, 16, 11, 13, 10, 4, 10]],\n    \"Q\": [22, [9, 21, 7, 20, 5, 18, 4, 16, 3, 13, 3, 8, 4, 5, 5, 3, 7, 1, 9, 0, 13, 0, 15, 1, 17, 3, 18, 5, 19, 8, 19, 13, 18, 16, 17, 18, 15, 20, 13, 21, 9, 21, -1, -1, 12, 4, 18, -2]],\n    \"R\": [21, [4, 21, 4, 0, -1, -1, 4, 21, 13, 21, 16, 20, 17, 19, 18, 17, 18, 15, 17, 13, 16, 12, 13, 11, 4, 11, -1, -1, 11, 11, 18, 0]],\n    \"S\": [20, [17, 18, 15, 20, 12, 21, 8, 21, 5, 20, 3, 18, 3, 16, 4, 14, 5, 13, 7, 12, 13, 10, 15, 9, 16, 8, 17, 6, 17, 3, 15, 1, 12, 0, 8, 0, 5, 1, 3, 3]],\n    \"T\": [16, [8, 21, 8, 0, -1, -1, 1, 21, 15, 21]],\n    \"U\": [22, [4, 21, 4, 6, 5, 3, 7, 1, 10, 0, 12, 0, 15, 1, 17, 3, 18, 6, 18, 21]],\n    \"V\": [18, [1, 21, 9, 0, -1, -1, 17, 21, 9, 0]],\n    \"W\": [24, [2, 21, 7, 0, -1, -1, 12, 21, 7, 0, -1, -1, 12, 21, 17, 0, -1, -1, 22, 21, 17, 0]],\n    \"X\": [20, [3, 21, 17, 0, -1, -1, 17, 21, 3, 0]],\n    \"Y\": [18, [1, 21, 9, 11, 9, 0, -1, -1, 17, 21, 9, 11]],\n    \"Z\": [20, [17, 21, 3, 0, -1, -1, 3, 21, 17, 21, -1, -1, 3, 0, 17, 0]],\n    \"[\": [14, [4, 25, 4, -7, -1, -1, 5, 25, 5, -7, -1, -1, 4, 25, 11, 25, -1, -1, 4, -7, 11, -7]],\n    \"\\\\\": [14, [0, 21, 14, -3]],\n    \"]\": [14, [9, 25, 9, -7, -1, -1, 10, 25, 10, -7, -1, -1, 3, 25, 10, 25, -1, -1, 3, -7, 10, -7]],\n    \"^\": [16, [6, 15, 8, 18, 10, 15, -1, -1, 3, 12, 8, 17, 13, 12, -1, -1, 8, 17, 8, 0]],\n    \"_\": [16, [0, -2, 16, -2]],\n    \"`\": [10, [6, 21, 5, 20, 4, 18, 4, 16, 5, 15, 6, 16, 5, 17]],\n    \"a\": [19, [15, 14, 15, 0, -1, -1, 15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3]],\n    \"b\": [19, [4, 21, 4, 0, -1, -1, 4, 11, 6, 13, 8, 14, 11, 14, 13, 13, 15, 11, 16, 8, 16, 6, 15, 3, 13, 1, 11, 0, 8, 0, 6, 1, 4, 3]],\n    \"c\": [18, [15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3]],\n    \"d\": [19, [15, 21, 15, 0, -1, -1, 15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3]],\n    \"e\": [18, [3, 8, 15, 8, 15, 10, 14, 12, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3]],\n    \"f\": [12, [10, 21, 8, 21, 6, 20, 5, 17, 5, 0, -1, -1, 2, 14, 9, 14]],\n    \"g\": [19, [15, 14, 15, -2, 14, -5, 13, -6, 11, -7, 8, -7, 6, -6, -1, -1, 15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3]],\n    \"h\": [19, [4, 21, 4, 0, -1, -1, 4, 10, 7, 13, 9, 14, 12, 14, 14, 13, 15, 10, 15, 0]],\n    \"i\": [8, [3, 21, 4, 20, 5, 21, 4, 22, 3, 21, -1, -1, 4, 14, 4, 0]],\n    \"j\": [10, [5, 21, 6, 20, 7, 21, 6, 22, 5, 21, -1, -1, 6, 14, 6, -3, 5, -6, 3, -7, 1, -7]],\n    \"k\": [17, [4, 21, 4, 0, -1, -1, 14, 14, 4, 4, -1, -1, 8, 8, 15, 0]],\n    \"l\": [8, [4, 21, 4, 0]],\n    \"m\": [30, [4, 14, 4, 0, -1, -1, 4, 10, 7, 13, 9, 14, 12, 14, 14, 13, 15, 10, 15, 0, -1, -1, 15, 10, 18, 13, 20, 14, 23, 14, 25, 13, 26, 10, 26, 0]],\n    \"n\": [19, [4, 14, 4, 0, -1, -1, 4, 10, 7, 13, 9, 14, 12, 14, 14, 13, 15, 10, 15, 0]],\n    \"o\": [19, [8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3, 16, 6, 16, 8, 15, 11, 13, 13, 11, 14, 8, 14]],\n    \"p\": [19, [4, 14, 4, -7, -1, -1, 4, 11, 6, 13, 8, 14, 11, 14, 13, 13, 15, 11, 16, 8, 16, 6, 15, 3, 13, 1, 11, 0, 8, 0, 6, 1, 4, 3]],\n    \"q\": [19, [15, 14, 15, -7, -1, -1, 15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3]],\n    \"r\": [13, [4, 14, 4, 0, -1, -1, 4, 8, 5, 11, 7, 13, 9, 14, 12, 14]],\n    \"s\": [17, [14, 11, 13, 13, 10, 14, 7, 14, 4, 13, 3, 11, 4, 9, 6, 8, 11, 7, 13, 6, 14, 4, 14, 3, 13, 1, 10, 0, 7, 0, 4, 1, 3, 3]],\n    \"t\": [12, [5, 21, 5, 4, 6, 1, 8, 0, 10, 0, -1, -1, 2, 14, 9, 14]],\n    \"u\": [19, [4, 14, 4, 4, 5, 1, 7, 0, 10, 0, 12, 1, 15, 4, -1, -1, 15, 14, 15, 0]],\n    \"v\": [16, [2, 14, 8, 0, -1, -1, 14, 14, 8, 0]],\n    \"w\": [22, [3, 14, 7, 0, -1, -1, 11, 14, 7, 0, -1, -1, 11, 14, 15, 0, -1, -1, 19, 14, 15, 0]],\n    \"x\": [17, [3, 14, 14, 0, -1, -1, 14, 14, 3, 0]],\n    \"y\": [16, [2, 14, 8, 0, -1, -1, 14, 14, 8, 0, 6, -4, 4, -6, 2, -7, 1, -7]],\n    \"z\": [17, [14, 14, 3, 0, -1, -1, 3, 14, 14, 14, -1, -1, 3, 0, 14, 0]],\n    \"{\": [14, [9, 25, 7, 24, 6, 23, 5, 21, 5, 19, 6, 17, 7, 16, 8, 14, 8, 12, 6, 10, -1, -1, 7, 24, 6, 22, 6, 20, 7, 18, 8, 17, 9, 15, 9, 13, 8, 11, 4, 9, 8, 7, 9, 5, 9, 3, 8, 1, 7, 0, 6, -2, 6, -4, 7, -6, -1, -1, 6, 8, 8, 6, 8, 4, 7, 2, 6, 1, 5, -1, 5, -3, 6, -5, 7, -6, 9, -7]],\n    \"|\": [8, [4, 25, 4, -7]],\n    \"}\": [14, [5, 25, 7, 24, 8, 23, 9, 21, 9, 19, 8, 17, 7, 16, 6, 14, 6, 12, 8, 10, -1, -1, 7, 24, 8, 22, 8, 20, 7, 18, 6, 17, 5, 15, 5, 13, 6, 11, 10, 9, 6, 7, 5, 5, 5, 3, 6, 1, 7, 0, 8, -2, 8, -4, 7, -6, -1, -1, 8, 8, 6, 6, 6, 4, 7, 2, 8, 1, 9, -1, 9, -3, 8, -5, 7, -6, 5, -7]],\n    \"~\": [24, [3, 6, 3, 8, 4, 11, 6, 12, 8, 12, 10, 11, 14, 8, 16, 7, 18, 7, 20, 8, 21, 10, -1, -1, 3, 8, 4, 10, 6, 11, 8, 11, 10, 10, 14, 7, 16, 6, 18, 6, 20, 7, 21, 10, 21, 12]]\n};\n\nfunction createTextVertices(text, left, baseline, scale) {\n    scale = scale || 1;\n\n    const strokes = [];\n    let i, len, j, len2, glyph, x, y, prev;\n\n    for (i = 0, len = text.length; i < len; i++) {\n        glyph = simplexFont[text[i]];\n        if (!glyph) continue;\n        prev = null;\n\n        for (j = 0, len2 = glyph[1].length; j < len2; j += 2) {\n            if (glyph[1][j] === -1 && glyph[1][j + 1] === -1) {\n                prev = null;\n\n            } else {\n                x = left + glyph[1][j] * scale;\n                y = baseline - glyph[1][j + 1] * scale;\n                if (prev) {\n                    strokes.push(prev.x, prev.y, x, y);\n                }\n                prev = {x, y};\n            }\n        }\n        left += glyph[0] * scale;\n    }\n\n    return strokes;\n}\n","// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // use fallback for big arrays to avoid stack overflow\n  if (len < 65537) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n  var dict;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      // Convert data if needed\n      if (typeof dictionary === 'string') {\n        dict = strings.string2buf(dictionary);\n      } else if (toString.call(dictionary) === '[object ArrayBuffer]') {\n        dict = new Uint8Array(dictionary);\n      } else {\n        dict = dictionary;\n      }\n\n      status = zlib_inflate.inflateSetDictionary(this.strm, dict);\n\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n","import VectorTileSource from 'mapbox-gl/src/source/vector_tile_source'\nimport pako from 'pako/lib/inflate'\nimport base64js from 'base64-js'\nimport Database from './database'\n\nclass MBTilesSource extends VectorTileSource {\n\n    constructor(id, options, dispatcher, eventedParent) {\n        super(id, options, dispatcher, eventedParent);\n        this.type = \"mbtiles\";\n        this.db = this.openDatabase(options.path);\n    }\n\n    openDatabase(dbLocation) {\n        return Database.openDatabase(dbLocation)\n    }\n\n    copyDatabaseFile(dbLocation, dbName, targetDir) {\n        return Database.copyDatabaseFile(dbLocation, dbName, targetDir)\n    }\n\n    readTile(z, x, y, callback) {\n        if (device.platform === 'browser') {\n            const query = 'SELECT tile_data FROM tiles WHERE zoom_level=? AND tile_column=? AND tile_row=?';\n            const params = [z, x, y];\n            this.db.then(function(db) {\n                db.each(query, params, function(result) {\n                    const rawData = pako.inflate(result.tile_data);\n                    callback(undefined, base64js.fromByteArray(rawData)); // Tile contents read, callback success.\n                }, function (done) {\n                    // Do nothing\n                });\n            }).catch(function(err) {\n                callback(err);\n            });\n\n            return;\n        }\n\n\n        const query = 'SELECT BASE64(tile_data) AS base64_tile_data FROM tiles WHERE zoom_level=? AND tile_column=? AND tile_row=?';\n        const params = [z, x, y];\n        this.db.then(function(db) {\n            db.transaction(function (txn) {\n                txn.executeSql(query, params, function (tx, res) {\n                    if (res.rows.length) {\n                        const base64Data = res.rows.item(0).base64_tile_data;\n                        const rawData = pako.inflate(base64js.toByteArray(base64Data));\n                        callback(undefined, base64js.fromByteArray(rawData)); // Tile contents read, callback success.\n                    } else {\n                        callback(new Error('tile ' + params.join(',') + ' not found'));\n                    }\n                });\n            }, function (error) {\n                callback(error); // Error executing SQL\n            });\n        }).catch(function(err) {\n            callback(err);\n        });\n    }\n\n    loadTile(tile, callback) {\n        const coord = tile.tileID.canonical;\n        const overscaling = coord.z > this.maxzoom ? Math.pow(2, coord.z - this.maxzoom) : 1;\n\n        const z = Math.min(coord.z, this.maxzoom || coord.z); // Don't try to get data over maxzoom\n        const x = coord.x;\n        const y = Math.pow(2,z)-coord.y-1; // Tiles on database are tms (inverted y axis)\n\n        this.readTile(z, x, y, dispatch.bind(this));\n\n        function dispatch(err, base64Data) {\n            if (err) {\n                return callback(err);\n            }\n            if (base64Data === undefined) {\n              return callback(new Error(\"empty data\"));\n            }\n\n            const params = {\n                request: { url: \"data:application/x-protobuf;base64,\" + base64Data },\n                uid: tile.uid,\n                tileID: tile.tileID,\n                zoom: coord.z,\n                tileSize: this.tileSize * overscaling,\n                type: this.type,\n                source: this.id,\n                pixelRatio: window.devicePixelRatio || 1,\n                overscaling: overscaling,\n                showCollisionBoxes: this.map.showCollisionBoxes\n            };\n\n            if (!tile.workerID || tile.state === 'expired') {\n                tile.workerID = this.dispatcher.send('loadTile', params, done.bind(this));\n            } else if (tile.state === 'loading') {\n                // schedule tile reloading after it has been loaded\n                tile.reloadCallback = callback;\n            } else {\n                this.dispatcher.send('reloadTile', params, done.bind(this), tile.workerID);\n            }\n\n            function done(err, data) {\n                if (tile.aborted)\n                    return;\n\n                if (err) {\n                    return callback(err);\n                }\n\n                if (this.map._refreshExpiredTiles) tile.setExpiryData(data);\n                tile.loadVectorData(data, this.map.painter);\n\n                callback(null);\n\n                if (tile.reloadCallback) {\n                    this.loadTile(tile, tile.reloadCallback);\n                    tile.reloadCallback = null;\n                }\n            }\n        }\n    }\n}\n\nexport default MBTilesSource;\n","// @flow\n\n'use strict';\n\nimport MBTilesSource from './mbtiles_source'\nimport RasterTileSourceOffline from \"./raster_tile_offline_source\"\nimport Map from 'mapbox-gl/src/ui/map'\nimport {extend} from 'mapbox-gl/src/util/util'\nimport window from 'mapbox-gl/src/util/window'\n\nconst readJSON = (url) => new Promise((resolve, reject) => {\n    const xhr = new window.XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.setRequestHeader('Accept', 'application/json');\n    xhr.onerror = (e) => reject(e);\n    xhr.onload = () => {\n        const isFile = xhr.responseURL.indexOf('file://') === 0;\n        if (((xhr.status >= 200 && xhr.status < 300) || isFile) && xhr.response) {\n            try {\n                resolve(JSON.parse(xhr.response));\n            } catch (err) {\n                reject(err);\n            }\n        } else {\n            reject(new Error(xhr.statusText, xhr.status));\n        }\n    };\n    xhr.send();\n    return xhr;\n});\n\nconst dereferenceStyle = (options) => {\n    if (typeof options.style === 'string' || options.style instanceof String) {\n        return readJSON(options.style).then((style) => extend({}, options, {style: style}));\n    } else {\n        return Promise.resolve(options);\n    }\n};\n\nconst absoluteSpriteUrl = (options) => {\n    const style = options.style;\n    const hasProtocol = /^.+:\\/\\//;\n    const path = window.location.origin + window.location.pathname.split('/').slice(0, -1).join('/');\n\n    if (('sprite' in style) && !style.sprite.match(hasProtocol) &&\n        ('glyphs' in style) && !style.glyphs.match(hasProtocol)) {\n        style.sprite = path + '/' +  style.sprite; // eslint-disable-line prefer-template\n        style.glyphs = path + '/' +  style.glyphs; // eslint-disable-line prefer-template\n    }\n    return options;\n};\n\nconst createEmptyMap = (options) => new Promise((resolve) => {\n    const emptyMapStyle = extend({}, options.style, {\n        sources: {},\n        layers: []\n    });\n    const emptyMapOptions = extend({}, options, {style: emptyMapStyle});\n    const map = new Map(emptyMapOptions);\n    map.once('load', () => {\n        let mbTilesSourceLoaded = new Promise((resolve) => {\n            map.addSourceType('mbtiles', MBTilesSource, () => resolve())\n        })\n        let rasterOfflineSourceLoaded = new Promise((resolve) => {\n            map.addSourceType('rasteroffline', RasterTileSourceOffline, () => resolve())\n        })\n\n        Promise.all([mbTilesSourceLoaded, rasterOfflineSourceLoaded]).then(() => resolve(map))\n    });\n});\n\nconst loadSources = (style) => (map) => {\n    Object.keys(style.sources).map((sourceName) => map.addSource(sourceName, style.sources[sourceName]));\n    return map;\n};\n\nconst loadLayers = (style) => (map) => {\n    style.layers.map((layer) => map.addLayer(layer));\n    return map;\n};\n\nconst OfflineMap = (options) =>\n    dereferenceStyle(options).then(absoluteSpriteUrl).then((newOptions) =>\n        createEmptyMap(newOptions)\n            .then(loadSources(newOptions.style))\n            .then(loadLayers(newOptions.style))\n    );\n\nexport default OfflineMap\n","import mapboxgl from 'mapbox-gl/src/index'\n\nimport offlineMap from './offline_map'\n\nmapboxgl.OfflineMap = offlineMap\n\nexport default mapboxgl\n","//\n// Our custom intro provides a specialized \"define()\" function, called by the\n// AMD modules below, that sets up the worker blob URL and then executes the\n// main module, storing its exported value as 'mapboxgl'\n\n// The three \"chunks\" imported here are produced by a first Rollup pass,\n// which outputs them as AMD modules.\n\n// Shared dependencies, i.e.:\n/*\ndefine(['exports'], function (exports) {\n    // Code for all common dependencies\n    // Each module's exports are attached attached to 'exports' (with\n    // names rewritten to avoid collisions, etc.)\n})\n*/\nimport './build/mapboxgl/shared';\n\n// Worker and its unique dependencies, i.e.:\n/*\ndefine(['./shared.js'], function (__shared__js) {\n    //  Code for worker script and its unique dependencies.\n    //  Expects the output of 'shared' module to be passed in as an argument,\n    //  since all references to common deps look like, e.g.,\n    //  __shared__js.shapeText().\n});\n*/\n// When this wrapper function is passed to our custom define() above,\n// it gets stringified, together with the shared wrapper (using\n// Function.toString()), and the resulting string of code is made into a\n// Blob URL that gets used by the main module to create the web workers.\nimport './build/mapboxgl/worker';\n\n// Main module and its unique dependencies\n/*\ndefine(['./shared.js'], function (__shared__js) {\n    //  Code for main GL JS module and its unique dependencies.\n    //  Expects the output of 'shared' module to be passed in as an argument,\n    //  since all references to common deps look like, e.g.,\n    //  __shared__js.shapeText().\n    //\n    //  Returns the actual mapboxgl (i.e. src/index.js)\n});\n*/\nimport './build/mapboxgl/index';\n\nexport default mapboxgl;\n"],"names":["buf","length","pos","subarray","writeFixed32","this","realloc","writeInt32","val","writeSFixed32","Math","writeSFixed64","floor","writeVarint","pbf","high","low","writeBigVarint","writeSVarint","str","String","c","i","charCodeAt","lead","writeUtf8","makeRoomForExtraLength","startPos","len","writeFloat","buffer","writeRawMessage","obj","writeMessage","tag","Pbf","arr","writePackedSVarint","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","writeBytesField","writeTag","writeBytes","writeFixed32Field","Fixed32","Fixed64","writeFixed64","writeSFixed64Field","writeVarintField","Varint","writeString","writeDouble","writeBooleanField","Boolean","readFontstacks","readFontstack","glyphs","id","left","top","width","border","height","metrics","readVarint","bitmap","readBytes","glyph","readSVarint","advance","GLYPH_PBF_BORDER","target","callbacks","receive","x","z","callback","targetMapId","mapId","data","serialize","buffers","sourceMapId","Actor","done","error","parent","type","remove","removeEventListener","LngLatBounds","sw","ne","setSouthWest","setNorthEast","LngLat","lng","lat","Array","convert","_sw","ne2","sw2","getNorthEast","_ne","getWest","getNorth","getEast","getSouth","toArray","toString","input","isNaN","Error","latitude","PI","cos","mercatorYfromLat","circumferenceAtLatitude","y","atan","y2","wrap","toBounds","const","isArray","Number","constructor","MercatorCoordinate","mercatorXfromLng","toAltitude","CanonicalTileID","url","urls","scheme","min","max","getMercCoords","quadkey","let","mask","replace","pow","bbox","tilesAtZoom","coord","EXTENT","calculateKey","canonical","overscaledZ","dim","equals","OverscaledTileID","targetZ","zDifference","rhs","getTilePoint","minzoom","bounds","validateBounds","TileBounds","contains","tileID","level","worldSize","ceil","dispatcher","_tileJSONRequest","loadTileJSON","err","tileJSON","tileBounds","maxzoom","_getMapId","fire","Event","sourceDataType","onAdd","map","onRemove","cancel","extend","_options","hasTile","loadTile","normalizeURL","tile","getImage","_transformRequest","ResourceType","Tile","img","state","painter","context","texture","update","useMipmap","Texture","texParameterf","extTextureFilterAnisotropic","TEXTURE_MAX_ANISOTROPY_EXT","extTextureFilterAnisotropicMax","request","saveTileTexture","Evented","uid","warnOnce","stride","pixels","encoding","set","unpack","j","get","DEMData","_idx","r","g","b","borderTile","dx","xMax","yMin","dy","yMax","ox","oy","register","string","DictionaryCoder","vectorTileFeature","_vectorTileFeature","undefined","toGeoJSON","_y","_z","_geometry","geometry","stateChanges","stringify","JSON","keys","Object","sort","getKey","layer","key","refProperties","StyleLayerIndex","layerConfigs","checkMaxAngle","line","anchor","labelLength","windowSize","maxAngle","segment","p","index","anchorDistance","dist","recentCorners","recentAngleDelta","prev","current","next","angleDelta","angleTo","abs","push","distance","shift","getLineLength","lineLength","k","getAngleWindowSize","shapedText","glyphSize","boxScale","getShapedLabelLength","shapedIcon","right","getCenterAnchor","angleWindowSize","prevDistance","centerDistance","a","segmentDistance","t","interpolate","Anchor","_round","getAnchors","spacing","overscaling","tileExtent","shapedLabelLength","isLineContinued","resample","offset","placeAtMiddle","halfLabelLength","markedDistance","anchors","segmentDist","angle","_layerConfigs","_layers","removedIds","layerConfig","createStyleLayer","_featureFilter","featureFilter","filter","familiesBySource","layers","groups","group","result","groupByLayout","values","visibility","sourceId","source","sourceGroup","sourceLayerId","sourceLayer","sourceLayerFamilies","CollisionFeature","collisionBoxArray","featureIndex","sourceLayerIndex","bucketIndex","shaped","padding","alignLine","rotate","y1","bottom","x1","x2","boxStartIndex","_addLineCollisionCircles","tl","Point","tr","bl","br","rotateRadians","_rotate","emplaceBack","boxEndIndex","boxSize","step","nBoxes","overscalingPaddingFactor","log","LN2","nPitchPaddingBoxes","firstBoxOffset","labelStartDistance","paddingStartDistance","segmentLength","boxOffset","boxDistanceToAnchor","segmentBoxDistance","p0","boxAnchorPoint","sub","_unit","_mult","_add","paddedAnchorDistance","TinyQueue","compare","defaultCompare","_down","polygon","area","points","f","Cell","compareMax","h","d","inside","minDistSq","Infinity","ring","distToSegmentSquared","sqrt","pointToPolygonDist","SQRT2","item","_up","pop","peek","halfLength","best","module","seed","remainder","bytes","h1","h1b","c1","c2","k1","l","murmur3","murmur2","performSymbolLayout","bucket","glyphMap","glyphPositions","imageMap","imagePositions","showCollisionBoxes","createArrays","tileSize","tilePixelRatio","compareText","iconsNeedLinear","layout","unevaluatedLayoutValues","_unevaluatedLayout","_values","sizes","textSizeData","functionType","zoomRange","compositeTextSizes","possiblyEvaluate","EvaluationParameters","iconSizeData","compositeIconSizes","layoutTextSize","zoom","layoutIconSize","textMaxSize","lineHeight","textAlongLine","keepUpright","features","feature","fontstack","evaluate","join","glyphPositionMap","shapedTextOrientations","text","unformattedText","textOffset","spacingIfAllowed","allowsLetterSpacing","textAnchor","textJustify","maxWidth","horizontal","shapeText","WritingMode","allowsVerticalWritingMode","vertical","icon","image","shapeIcon","sdfIcons","sdf","pixelRatio","constantOr","addFeature","generateCollisionDebugBuffers","iconOffset","fontScale","textBoxScale","textMaxBoxScale","iconBoxScale","symbolMinDistance","textPadding","iconPadding","textMaxAngle","iconAlongLine","symbolPlacement","textRepeatDistance","addSymbolAtAnchor","textCollisionFeature","iconCollisionFeature","lineArray","addToLineVertexArray","numIconVertices","numGlyphVertices","numVerticalGlyphVertices","placedTextSymbolIndices","textRotate","addTextVertices","horizontalOnly","textBoxStartIndex","textBoxEndIndex","iconQuads","alongLine","iconWidth","iconHeight","size","textLeft","textRight","textTop","textWidth","textHeight","padT","padR","padB","padL","offsetY","offsetX","sin","matrix","_matMult","tex","paddedRect","writingMode","glyphOffset","getIconQuads","iconRotate","sizeData","SIZE_PACK_FACTOR","MAX_PACKED_SIZE","layerIds","addSymbols","lineStartIndex","iconBoxStartIndex","iconBoxEndIndex","glyphOffsetArray","SymbolBucket","MAX_GLYPHS","symbolInstances","addSymbol","lines","clippedLines","clippedLine","p1","clipLine","anchorIsTooClose","classifyRings","poi","findPoleOfInaccessibility","point","glyphQuads","shaping","positions","positionedGlyphs","quads","positionedGlyph","fontStack","rect","rectBuffer","halfAdvance","scale","builtInOffset","w","center","verticalRotation","xOffsetCorrection","_rotateAround","getGlyphQuads","placedSymbolArray","repeatDistance","otherAnchors","GlyphAtlas","stacks","bins","stack","stackPositions","src","bin","potpack","AlphaImage","copy","WorkerTile","params","overscaleFactor","collectResourceTiming","returnDependencies","recalculateLayers","parameters","recalculate","parse","layerIndex","actor","status","CollisionBoxArray","sourceLayerCoder","FeatureIndex","bucketLayerIDs","iconMap","patternMap","buckets","options","layerFamilies","version","encode","family","createBucket","sourceID","populate","mapObject","glyphDependencies","send","maybePrepare","call","icons","iconDependencies","patterns","patternDependencies","glyphAtlas","imageAtlas","ImageAtlas","iconPositions","hasPattern","LineBucket","FillBucket","FillExtrusionBucket","addFeatures","patternPositions","isEmpty","glyphAtlasImage","performanceExists","performance","wrapper","getEntriesByName","name","mark","startMark","endMark","measure","clearMarks","clearMeasures","Performance","_marks","start","end","loadVectorTile","getArrayBuffer","cacheControl","expires","vectorTile","vt","VectorTile","Protobuf","rawData","finish","resourceTimingData","VectorTileWorkerSource","loadVectorData","loading","loaded","perf","workerTile","abort","response","rawTileData","resourceTiming","slice","reloadTile","vtSource","reloadCallback","abortTile","removeTile","RasterDEMTileWorkerSource","rawImageData","dem","polygonArea","coords","ringArea","p2","lowerIndex","middleIndex","upperIndex","coordsLength","rad","wgs84","RADIUS","_","coordinates","geometries","rewind","gj","outer","curryOuter","correctRings","correct","wind","dir","geojsonArea","cw","reverse","mvt","VectorTileFeature","prototype","FeatureWrapper","_feature","extent","properties","tags","parseInt","loadGeometry","newRing","GeoJSONWrapper","_geojsonTileLayer","_features","require","rawGeometry","rings","fromVectorTileJs","out","writeLayer","writeTile","writeStringField","keycache","valuecache","writeFeature","m_pos","utf16buf","Z_PARTIAL_FLUSH","Z_TREES","Z_STREAM_END","Z_NEED_DICT","Z_DEFAULT_COMPRESSION","Z_HUFFMAN_ONLY","Z_FIXED","2","avail_in","total_in","time","xflags","extra","comment","Inflate","utils","assign","chunkSize","windowBits","opt","strm","header","GZheader","zlib_inflate","inflate","msg","inflator","utf8str","dictionary","allowBufError","mode","strings","next_in","avail_out","output","Z_NO_FLUSH","Uint8Array","dict","Z_BUF_ERROR","Z_OK","ended","next_out","_mode","to","tail","arraySet","onData","inflateEnd","Z_SYNC_FLUSH","chunk","chunks","flattenChunks","exports","eventedParent","openDatabase","dbLocation","dbName","targetDir","copyDatabaseFile","readTile","device","platform","db","txn","tx","rows","pako","base64Data","base64js","fromByteArray","then","window","devicePixelRatio","workerID","bind","setExpiryData","dereferenceStyle","style","reject","XMLHttpRequest","xhr","e","onload","responseURL","indexOf","isFile","statusText","resolve","absoluteSpriteUrl","hasProtocol","path","location","pathname","split","sprite","match","mapboxgl","OfflineMap","newOptions","Promise","emptyMapStyle","Map","mbTilesSourceLoaded","rasterOfflineSourceLoaded","addSourceType","RasterTileSourceOffline","all","sources","addSource","sourceName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;mBAuNYA,WAAaA,cACFA,cACGC,WAId,WAGJ,wBAFmBC,SACdA,WACOF,IAAIG,SAAS,OAAQF,SAGrCG,aAAc,YACVC,KAAKC,QAAQ,GACbC,QAAgBP,IAAKQ,YACrBH,KAAKH,KAAO,GAGhBO,cAAe,SAASD,GACpBH,KAAKC,WACLC,GAAWF,WAAeA,gBACrBH,iCAILG,iBACAE,GAAWF,YAAUG,YACrBD,GAAWF,SAAUK,cA/NR,qBA+N+CR,IAAM,GAClEG,UAAY,GAGhBM,cAAe,2CAEUH,EAAUH,WAC/BE,QAAgBP,IAAKU,KAAKE,MAAMJ,KAvOnB,sCA2OjBK,YAAa,gBACFL,GAAO,cAESA,EAAM,EAkKrC,SAAwBA,EAAKM,GACzB,MAASC,uBAGwB,IACrBP,EAAM,WAAe,mCAE7BQ,OAAgB,iBAIC,OAEP,EACND,EAAQA,GAAO,MAIvB,MAAW,qBAAuBP,iFAIlCM,EAAIR,QAAQ,IAMhB,YAAgCS,EAAMD,WACtBZ,OAAe,UAAac,eAC5Bd,aAAsB,iBAC1BY,EAAIZ,WAASc,EAAa,WAClCF,EAAId,IAAIc,SAAmB,IAANE,EAAa,cAC9BhB,IAAIc,EAAIZ,SAASc,OATQF,GAYjC,WAAkCA,UACZ,WAElBA,qBAAsCC,KAAU,OAAY,IAASA,SACL,GAAhED,MAAQA,EAAIZ,OAAiB,SAASa,aAAsB,aACI,kBAAnC,iCACmC,UAAxDD,iBAA8BC,QAAe,UAAsB,OACX,2BAA1BA,KAAU,OAAY,IAASA,EAAM,cACnED,UAAqB,SAnBJA,GA1LjBG,CAAeT,cAIdF,WAELD,SAASA,KAAKH,oBAA+C,UAAsB,MACnFG,KAAKL,8BAA2CQ,aAA4BA,cACvER,gBAAkC,cAASQ,aAA4BA,GAAO,eAC1EH,2BAGba,yBACIb,iHAQAc,EAAMC,2BACWnB,QAEjBI,WAEA,oBAEKH,iBAkSgBA,WACTmB,QAASC,IAAQrB,gBAC7BoB,EAAIF,EAAII,wBAEc,WACdC,KAYQ,OAAWF,gBACftB,EAAIE,WACAA,SACJF,EAAIE,YAEGmB,sBAhBK,uBAGZrB,aACOqB,aAGHG,YAAsBH,+DAiBlCG,EAAO,cAIHtB,kCAKQ,MACJF,EAAIE,KAASmB,GAAK,QAElBrB,OAAaqB,UACbrB,EAAIE,QAAc,MAAa,KAEnCF,OAAaqB,KAAW,GAAO,OAE/BnB,UAAoB,cAjVjBuB,UAAoBN,OAAUjB,KACzC,oBAEW,KAAMwB,GAAuBC,EAAUC,QAGlDvB,KAAKH,MAAiB,EACtBG,iCAIJwB,WAAY,YACRxB,mBACcA,SAAUG,EAAKH,YAAgB,MAC7CA,KAAKH,KAAO,eAGH,SAASM,sCAEgBN,KAAK,EAAM,GAAI,aACrC,cAGJ,kBACE4B,SACVzB,KAAKQ,YAAYe,QACZtB,uBACWgB,EAAIM,WAAe5B,SAASE,OAAS4B,EAAOR,IAGhES,gBAAiB,cACb1B,KAAKH,UAGDyB,EAAWtB,KAAKH,MACjB8B,YACCJ,aAEAA,GAAO,QAA6BD,EAAUC,EAAKvB,eAG5CsB,SACNd,eACLR,KAAKH,QAGT+B,6BACI5B,cAAc6B,EAAKC,UACnB9B,uBAAyB2B,iCAGMI,wCACnCC,mCAAkDpC,aAAagC,aAAaC,EAAKG,GAAoBD,+CAC3C/B,KAAK4B,aAAaC,KAAyBE,8BACvEF,eAA4B7B,KAAK4B,kBAAoCG,+BACrEF,KAAgBE,EAAInC,aAAagC,aAAaC,KAAwBE,IACpGE,mBAAqB,WAAcF,GAAWA,EAAInC,QAAQI,KAAK4B,eAAkBK,2CAC/BrC,QAAQI,KAAK4B,aAAaC,EAAKK,OACjFC,mBAAqB,cAAyBJ,EAAInC,aAAagC,aAAaC,EAAKM,GAAoBJ,IACrGK,oBAAqB,WAAcL,GAAWA,UAAY/B,KAAK4B,eAAkBQ,OAEjFC,gBAAiB,SAASR,UACjBS,SAAST,iBACTU,eAETC,kBAAmB,SAASX,EAAK1B,QACxBmC,uBACLtC,kBAAkBG,gCAEO0B,EAAK1B,QACzBmC,SAAST,KAASY,cAClBrC,oCAEU,mBACVkC,SAAST,EAAKC,GAAIY,cAClBC,aAAaxC,IAEtByC,mBAAoB,SAASf,EAAK1B,QACzBmC,SAAST,EAAKC,GAAIY,6BACJvC,IAEvB0C,iBAAkB,WAAc1C,QACvBmC,SAAST,KAASiB,QACvB9C,kBAAiBG,sBAEF,cACfH,mBAAuB8C,aAClBjC,6CAEuBC,GAC5Bd,KAAKsC,WAAcR,eACdiB,YAAYjC,6GAMMe,EAAK1B,iBACd0B,EAAKC,iBACdkB,YAAY7C,IAErB8C,6BAA4BpB,EAAK1B,SACxB0C,iBAAiBhB,EAAKqB,QAAQ/C,wBC1XlCgD,GAAetB,IAAwCpB,wBAExC2C,GAAeC,YAI9BD,GAAcvB,EAAawB,EAA2B5C,GAC3D,SAAe,CACX,uBAAmF,IAA5E6C,uCAA2BC,SAAMC,2BAC5B,aAEA,QACJC,MAAOA,IAAYC,GACnBC,kBAEJC,QAAS,uBAAgBL,MAAMC,mCAM3B,QAASF,KAASO,sBACJC,OAASrD,EAAIsD,aACtB,MAAGC,EAAMP,MAAQhD,EAAIoD,aACrB,IAARhC,WAA0BpB,EAAIoD,aACtB,IAARhC,EAAWmC,EAAMT,OAAWU,cACpB,IAARpC,QAAuBpB,EAAIwD,cACnB,IAARpC,IAAWmC,EAAME,QAAUzD,oBAO3B0D,kBChBGC,OACRpE,KAAKoE,oCAGLpE,KAAKqE,UAAY,mBACC,4BAEbD,uCAAwCE,SAAS,gBCqCvCC,IAAMC,mBACO,QAAU,aAAgB,KAI1D,6BAHwD,wBACA,kCD7BxBC,EAAqBC,wDAE7CD,qCAEJzE,wDAEsB2E,0BAGlBC,KAAMC,GAAUD,EAAME,UAGtB,MAAO,0BACW9E,oCAEV+E,oCAEAzB,kBA3CR0B,aAiDRV,8CAEkBhB,SAGLoB,kBAAoBC,QAAUC,mBAGjCK,uBACKjF,EAAKqE,iBACNS,EAA+B,uCAEfH,mDAGY,KAC9BC,QAAgBA,EAAME,kCAIkB,sBACjC9E,sDAEUkF,aACSA,iDAIX5B,IAAsBtD,0BAGpCqE,gCACmBc,8CACsB,yGAKwB,+GAOtEnF,YAAY4E,EAAKQ,WAAuBR,sBAIhDS,mBACIrF,KAAKoE,OAAOkB,oBAAoB,eAAgBhB,iBE/FlDiB,YAKUC,EAASC,2CAIsBA,GACd,IAAdD,EAAG5F,iCACmB,qBAAsB,WAEnDI,KAAK0F,eAAgB,IAAIC,sBAblBJ,mCAuBFE,mCACyB,IAAIG,IAAOH,EAAGI,sBAA8BJ,GACvEzF,OAzBIuF,qFAmC6CO,KAAOF,uGAgBrDjE,IACAA,OAEH,KAAIA,aAAe4D,WAOlBQ,yBACcA,8BACsBC,QAAQrE,+BAKzC3B,UAbD2B,EAAIsE,IACVC,aAEaA,sEAmBKC,EAAIL,IAAKN,OAC3BC,EAAGI,uGALuBA,IAAKK,QAS5BlG,+CAYA,IAAI4F,aAAiBC,kBAAsB,8EAQtB7F,uBAOhCoG,+BAAgCpG,KAAKqG,KA7GtBd,4CAoHiB,OAAWvF,KAAKsG,UAAWtG,KAAKuG,yDAOhC,IAAIX,GAAO5F,KAAKwG,4BA3HjCjB,uCAkIYvF,cAlIZuF,aAyIfkB,oBAAqB,gBAAgBX,KAzItBP,aAgJfiB,+BAAgCH,IAAIR,KAhJrBN,aAuJfgB,2BAA4BvG,8CAYxB,gBAAiB0G,UAAW1G,SAAS0G,0BAYzCC,+CACgCV,oBAAmBjG,KAAKqG,oBAhLzCd,kDAyLUvF,WAzLVuF,GA0MRS,iBAAQY,GACX,OAAKA,IAASA,qDCtMVC,UAAcA,mBACJC,6DAEFjB,YACAC,EACR9F,aAAiBA,UAAY,mBACb,8DC1B5B,YAAiC+G,iBACEC,gBACHC,WAAoBD,GAAK,KAGlD,YAA0BnB,GAC7B,cAAqB,IAGlB,SAASqB,iBACG,IAAM7G,KAAK2G,gDAA+D,8BAIvEG,GAAwBrB,wBAQ/B,SAAMsB,SACV,iBAAqBC,cAAcC,OAAUN,GAAK,MAAQ,GDRxDpB,aAwBT2B,8BACsBA,EAAKvH,KAAK6F,KAAM,cAAgBC,mBAWtDY,+CApCSd,+DAiDyB5F,cAjDzB4F,aA6DT4B,uCACIC,8BAEqCR,gBAAsBjH,qBAEhDuF,OAAiBK,GAAO5F,KAAK6F,kBACpC,uBAAwCC,6BAgBjCc,GACX,0BACWA,WAEDc,QAAQd,uBAAiCA,iBACxC,oBAA6Be,OAAOf,8CAEXA,GAAgC,oBACrDhB,UAEA,UAAkBgB,aACzBe,SAAa7B,YAGf,WAAU,gLCvDpB8B,aAAkCpD,+BAE9BxE,KAAKoH,KACLpH,WARiB6H,2CAqBwC,mCAG9CA,GACHC,oEAcR,cAzEO,WAAM,8BAsFjBC,6BA9EkCvD,EA+EDxE,cAAaoH,EA9EvC5C,QAA6C4C,IADjD,gBClBHQ,gBAII5H,KAAKwE,EAAIA,OACJD,WACI6C,wBAZYY,6BAgBlB1E,eACSkB,oBAA4BD,YAAgBjB,kBAI5D2E,aAAIC,EAAqBC,OJqBR5D,EAAG6C,2BIpBsBA,EJoBnB5C,SAInB4D,WAAiC,KAFrChB,qBAE0C5C,GACtC6D,EAAMC,UAAmB,GAAoB,eAEtC,OAAWF,EAAI,GAAK,mBI1BrBG,eAyIYnB,IAEtB,KADAoB,WACSvH,wBACQA,EAAI,KACW,MAAUwH,IAAW,GAErD,yBA/I+CzI,KAAKoH,yBAErBA,GAAKc,EAAKtI,mCACF,0BAA6B,IAAI+G,wCACpCnC,IAC3BkE,qBAAsB1I,KAAKuE,wCACoBoE,uDAE/CD,2BAA4BE,IA/BZZ,0CAmCfa,QAAmBF,IAAI,UAC7B,gBACWpE,gBACNuE,MAAwB9I,QAAU+I,qBAS/BxB,KACRvH,KAAKuH,OACLvH,0BACWgJ,GAAazB,EAAM0B,EAAUzE,EAAGyE,EAAU1E,WAWzDqD,eAA0DrD,EAAW6C,QAE5D8B,cACLlJ,iBACKiJ,cAAgBjB,GAAgBxD,qBACb+C,UAsFhC,gBAA+ChD,EAAW6C,IACtDG,GAAQ,UACqB,EAARA,EAAY,IACjCE,KAAM0B,EAAM,GAAK3E,EACjB,OAA2C,UAAf2E,EAAM/B,yYAvFlCgC,0BACWpJ,qBAAwBkJ,yBAA6B5F,8BAAiCA,EAAG2F,YAhB1EI,+BAmBjBC,cAEoBL,UAAUzE,WAC/B8E,iBAAyB9E,EAClB,IAAI6E,GAAiBC,iBAAyBL,4CAA8C7B,UAEvEkC,cAA6BtJ,eAAeuE,KAAkBvE,KAAKiJ,aAAeM,0CAK9GpE,EAAOoC,sCAIc0B,cAAqBA,uBAEvC9D,eACHA,EAAO+D,0CACc3E,sBAA2BgF,GAC5CpE,EAAO8D,UAAU7B,UAAY6B,WAAU7B,2CAI3CpH,KAAKkJ,qBAEE,KAAKG,GAAiBrJ,KAAKkJ,wBAA4BlJ,eAAewE,iDAGlEyE,cACT1E,uBACuB,OAAd0E,mBAEX,SAAwBjJ,qBACpBqJ,UAAyB9B,SAAa,SACtC8B,GAAiB7E,YAAcA,EAAGD,EAAG6C,EAAI,GAC7C,IAAIiC,GAAiB7E,EAAGxE,KAAKuH,4IASxB2B,YAAcM,oCAEIP,kCACAA,WAAU1E,IAEjCvE,eAAeoH,EAAIoC,iBArEDH,8CA0EMrJ,KAAKkJ,mBAAqBD,UAAUzE,iBAAkBD,oDAG7EgD,GACL,OAAO,gCAAkD0B,gDA9EnCI,wCAkFtB,OAAOhJ,KAAKsI,WAAYO,YAAclJ,mBAlFhBqJ,uDAsFU9B,UAAW0B,yBAG/CtC,gDACkC3G,qBAAoBA,KAAKiJ,UAAhD,gBAGXQ,qCACgBR,UAAUQ,oCAA+DrC,QAqBpF,yBACA,6BAA8C,eC7KvD,OAKIQ,WAAsD8B,oBACvB1D,6BAA4B2D,SAClDD,QAAUA,GAAW,mCAI9BE,wBAAeD,GAEX,OAAK5D,cAAc4D,QAAWA,SACvB,WAAW,eAAsBtB,mBAA0BD,QAASuB,gBAAqB,GAAIA,iBAD9B,SAb7DE,aAiBbC,kBAASC,GACLtC,eAA2B,OACrBuC,EACI3J,MAAKE,SAAuBP,YAAYsG,WAAa2D,GADzDD,aAEe9C,QAAsByC,uBAFrCK,eAG+BhK,KAAK2J,4BAC3BO,KAAKhD,qCAER6C,KAAYC,eAAmDA,GAAcD,EAAO3C,mCCWxF9D,8BAEEA,OACL6G,sCAGLnK,KAAKoF,oEAIA+C,aACLnI,mBACAA,wDAGmC,6JAInCA,UAAU,2CACVA,KAAKoK,iBAAmBC,8EACI,qBAEKC,UAElBtK,GAAMuK,cACQvK,EAAKwK,WAAa,SAAwBb,OAAQ3J,GAAK0J,QAAS1J,EAAKyK,aAEvEF,YACFA,QAAgBvK,MAAS0K,eAKrCC,SAASC,GAAM,iBAAmB,6CAC7B,IAAIA,oBAAyB,SAAUC,4CAK7DC,eAAMC,GACF/K,KAAK+K,+BAITC,kEAE8BC,cACjBb,oCAIbvF,sBACI,OAAOqG,KAAWlL,KAAKmL,uBAG3BC,4DAC+CtB,mCAG/CuB,oCACgBC,EAAaC,EAAKxB,sBAAqB/J,WAAYA,KAAKmI,QAASnI,KAAKiI,mBAClFsD,UAAeC,QAAcT,IAAIU,oBAAuBC,GAAaC,iBAAaC,GAG9E,UAFOL,uBAGEM,8BAEF,yIAQsBC,QAAQC,UACtBA,KACXR,EAAKS,cAAmBF,uBAAuBF,EAAInI,iBAE/C8H,EAAKS,QAAQC,OAAOL,EAAK,CAAEM,WAAW,mBAEnBC,kIAIZC,2BAA6BL,EAAQM,6BAA4BC,6BAAoCC,0CAInG,SAEb9H,EAAS,yCAKX8G,OACGiB,WACLjB,EAAKiB,wBACEjB,WAEX9G,sCAGO8G,gBACWvL,KAAK+K,IAAIe,QAAQW,6EAK5B,MAnIgBC,OCD3B9E,gBAEI,GADA5H,SAAW2M,aACS/H,EAAKnB,MAAO,qEACsB,gBAAa,OAAOmJ,6FAGpEzD,EAAMnJ,8BACEA,KAAKmJ,oCACa0D,4BAE1BC,yBACSC,EAA2B/M,6CAC1BoH,IAASA,YACZ7C,EAAI,sBACK4E,EAAM5E,QAEfyI,IAAIzI,EAAG6C,EAAG6F,OAAkBH,EAAOI,KAAQJ,iBAO/CvI,EAAI,EAAGA,aAEPyI,cAAgBG,IAAI,WAEpBH,MAASzI,WAAY4E,EAAM,EAAG5E,gBAEtB,WAAYA,EAAG,aAEnBA,EAAG4E,OAAUgE,MAAOhE,MAGjCnJ,WAAU,GAAI,EAAGA,KAAKmN,wBACJnN,sBACbgN,KAAK,iBAA0B,SAC/BA,MAAS7D,EAAKnJ,SAASmJ,IAASA,EAAM,KA3CtBiE,aA8CzBJ,yBACSpI,KAAK5E,KAAKqN,iDAGJjG,gCACmBA,wBAGlCiG,4BACkB9I,QAAU4E,sBAAgCA,IAAM,QAAS,eAAe,yDAC1E,kBAAwB,wCAG1BmE,EAAWC,EAAWC,wBAGPD,KAAiB,+CAG7BD,OAGb,qEAIO,6DAAwEtN,KAAK4E,oDAGzE6I,UACPzN,WAAayN,MAAgB,MAAM,UAAU,gCAEtCC,EAAK1N,KAAKmJ,IACjBwE,SAAiBxE,IAAMnJ,SACvB4N,eACOC,OAAU1E,IAAMnJ,SAE3B,eACM,mBAGD,QAKL,mBAEW8N,EAAO,qBASlB,QAFMC,iBACMF,EAAK7N,KAAKmJ,MACTyE,UACT,QAASrJ,iBACAyI,UAAqBG,QAAY/F,EAAI4G,KAM1DC,wHC3HA,OAIIrG,4EAGgChI,gBAClBsO,+BACyBjN,8BATrBkN,uCAgBPnO,yFCjBf,OAQI4H,SAAYwG,EAAsC5J,IAAsB4C,4BAG/DiH,mBAAqBD,OACI5J,EAC7B4J,OACAA,OAEDpO,gBAAkBoO,aAEU,kBACnB9K,GAAK8K,kEAWd,YANuBE,qBACnBtO,uCAAyCuO,UACpCvO,KAAKqO,sBACLrO,wBAA8BwO,QACzBH,mBAAyBI,mBAE3BC,cAGZC,yBACA3O,eAAiBuN,uDAKEoB,UAEnB,gCACQ1N,+FC3BhB,OAKI2G,WACI5H,mBACK4O,gBACL5O;;gDCvBR,SAAS6O,EAAUlN,GACf8F,IAAMrC,SAAczD,EACpB,GAAa,WAATyD,GAA8B,YAATA,GAA+B,WAATA,GAA3CA,MAAgEzD,EAChE,OAAOmN,KAAKD,UAAUlN,GAE1B,GAAIoE,MAAM2B,QAAQ/F,GAAM,CAEpB,IADA6G,IAAI1H,EAAM,UACQa,kBAAK,CACnBb,GAAU+N,aAEd,OAAU/N,MAMd,IAHA2G,IAAMsH,EAAOC,OAAOD,KAAKpN,GAAKsN,OAE1BnO,EAAM,IACDG,EAAI,EAAGA,EAAI8N,EAAKnP,OAAQqB,IAC7BH,GAAUgO,KAAKD,UAAUE,EAAK9N,QAAO4N,EAAUlN,EAAIoN,EAAK9N,SAE5D,OAAUH,MAGd,SAASoO,EAAOC,GAEZ,IADA3G,IAAI4G,EAAM,SACMC,gCAAe,CAC3BD,GAAO,IAAIP,EAAUM,UAEzB,OAAOC,ECfX,IAAME,EAMF1H,SAAY2H,GACJA,GACAvP,KAAK0I,QAAQ6G,KCHzB,SAASC,EAAcC,EAAoBC,EAAgBC,EAAqBC,EAAoBC,GAGhG,QAAuBvB,IAAnBoB,EAAOI,QAAuB,QAAO,EAOzC,IALAtH,IAAIuH,EAAIL,EACJM,EAAQN,EAAOI,QAAU,EACzBG,EAAiB,EAGdA,GAAkBN,EAAc,GAAG,CAItC,KAHAK,EAGY,EAAG,QAAO,EAEtBC,GAAkBR,EAAKO,GAAOE,KAAKH,GACnCA,EAAIN,EAAKO,IAGbC,GAAkBR,EAAKO,GAAOE,KAAKT,EAAKO,EAAQ,IAChDA,IAOA,IAJAvI,IAAM0I,EAAgB,GAClBC,EAAmB,EAGhBH,EAAiBN,EAAc,GAAG,CACrClI,IAAM4I,EAAOZ,EAAKO,EAAQ,GACpBM,EAAUb,EAAKO,GACfO,EAAOd,EAAKO,EAAQ,GAG1B,IAAKO,EAAM,QAAO,EAElB/H,IAAIgI,EAAaH,EAAKI,QAAQH,GAAWA,EAAQG,QAAQF,GAWzD,IATAC,EAAanQ,KAAKqQ,KAAMF,EAAa,EAAInQ,KAAK2G,KAAiB,EAAV3G,KAAK2G,IAAW3G,KAAK2G,IAE1EmJ,EAAcQ,KAAK,CACfC,SAAUX,aACVO,IAEJJ,GAAoBI,EAGbP,EAAiBE,EAAc,GAAGS,SAAWhB,GAChDQ,GAAoBD,EAAcU,QAAQL,WAI9C,GAAIJ,EAAmBP,EAAU,QAAO,EAExCG,IACAC,GAAkBK,EAAQJ,KAAKK,IAInC,QAAO,ECnEX,SAASO,EAAcrB,GAEnB,IADAjH,IAAIuI,EAAa,EACRC,EAAI,EAAGA,EAAIvB,EAAK7P,OAAS,EAAGoR,IACjCD,GAActB,EAAKuB,GAAGd,KAAKT,EAAKuB,EAAI,IAExC,OAAOD,EAGX,SAASE,EAAmBC,EACAC,EACAC,GACxB,OAAOF,EACH,GAAQC,EAAYC,EACpB,EAGR,SAASC,EAAqBH,EAAsBI,GAChD,OAAOjR,KAAKgI,IACR6I,EAAaA,EAAWK,MAAQL,EAAW3N,KAAO,EAClD+N,EAAaA,EAAWC,MAAQD,EAAW/N,KAAO,GAG1D,SAASiO,EAAgB/B,EACAI,EACAqB,EACAI,EACAH,EACAC,GAOrB,IANA3J,IAAMgK,EAAkBR,EAAmBC,EAAYC,EAAWC,GAC5DzB,EAAc0B,EAAqBH,EAAYI,GAAcF,EAE/DM,EAAe,EACbC,EAAiBb,EAAcrB,GAAQ,EAEpCxO,EAAI,EAAGA,EAAIwO,EAAK7P,OAAS,EAAGqB,IAAK,CAEtCwG,IAAMmK,EAAInC,EAAKxO,GACXuM,EAAIiC,EAAKxO,EAAI,GAEX4Q,EAAkBD,EAAE1B,KAAK1C,GAE/B,GAAIkE,EAAeG,EAAkBF,EAAgB,CAEjDlK,IAAMqK,GAAKH,EAAiBD,GAAgBG,EACxCtN,EAAIwN,SAAYH,EAAErN,EAAGiJ,EAAEjJ,EAAGuN,GAC1B1K,EAAI2K,SAAYH,EAAExK,EAAGoG,EAAEpG,EAAG0K,GAExBpC,EAAS,IAAIsC,SAAOzN,EAAG6C,EAAGoG,EAAEiD,QAAQmB,GAAI3Q,GAE9C,OADAyO,EAAOuC,UACFR,GAAmBjC,EAAcC,EAAMC,EAAQC,EAAa8B,EAAiB5B,GACvEH,OAEP,EAIRgC,GAAgBG,IAIxB,SAASK,EAAWzC,EACA0C,EACAtC,EACAqB,EACAI,EACAH,EACAC,EACAgB,EACAC,GAMhB5K,IAAMgK,EAAkBR,EAAmBC,EAAYC,EAAWC,GAC5DkB,EAAoBjB,EAAqBH,EAAYI,GACrD3B,EAAc2C,EAAoBlB,EAGlCmB,EAAgC,IAAd9C,EAAK,GAAGlL,GAAWkL,EAAK,GAAGlL,IAAM8N,GAA4B,IAAd5C,EAAK,GAAGrI,GAAWqI,EAAK,GAAGrI,IAAMiL,EAmBxG,OAfIF,EAAUxC,EAAcwC,EAAU,IAClCA,EAAUxC,EAAcwC,EAAU,GAkB1C,SAASK,EAAS/C,EAAMgD,EAAQN,EAASV,EAAiB5B,EAAUF,EAAa4C,EAAiBG,EAAeL,GAE7G5K,IAAMkL,EAAkBhD,EAAc,EACtClI,IAAMsJ,EAAaD,EAAcrB,GAEjCjH,IAAIoI,EAAW,EACXgC,EAAiBH,EAASN,EAE9B3J,IAAIqK,EAAU,GAEd,IAAKrK,IAAIvH,EAAI,EAAGA,EAAIwO,EAAK7P,OAAS,EAAGqB,IAAK,CAQtC,IANAwG,IAAMmK,EAAInC,EAAKxO,GACXuM,EAAIiC,EAAKxO,EAAI,GAEX6R,EAAclB,EAAE1B,KAAK1C,GACvBuF,EAAQvF,EAAEiD,QAAQmB,GAEfgB,EAAiBT,EAAUvB,EAAWkC,GAAa,CAGtDrL,IAAMqK,IAFNc,GAAkBT,GAEUvB,GAAYkC,EACpCvO,EAAIwN,SAAYH,EAAErN,EAAGiJ,EAAEjJ,EAAGuN,GAC1B1K,EAAI2K,SAAYH,EAAExK,EAAGoG,EAAEpG,EAAG0K,GAK9B,GAAIvN,GAAK,GAAKA,EAAI8N,GAAcjL,GAAK,GAAKA,EAAIiL,GACtCO,EAAiBD,GAAmB,GACpCC,EAAiBD,GAAmB5B,EAAY,CACpDtJ,IAAMiI,EAAS,IAAIsC,SAAOzN,EAAG6C,EAAG2L,EAAO9R,GACvCyO,EAAOuC,SAEFR,IAAmBjC,EAAcC,EAAMC,EAAQC,EAAa8B,EAAiB5B,IAC9EgD,EAAQlC,KAAKjB,KAKzBkB,GAAYkC,GAGXJ,GAAkBG,EAAQjT,QAAW2S,IAMtCM,EAAUL,EAAS/C,EAAMmB,EAAW,EAAGuB,EAASV,EAAiB5B,EAAUF,EAAa4C,GAAiB,EAAMF,IAGnH,OAAOQ,EAxDAL,CAAS/C,EAJA8C,EAEXJ,EAAU,EAAIC,EAAeD,GAD5BG,EAAoB,EAHW,EAAZnB,GAGyBC,EAAWgB,EAAeD,EAG9CA,EAASV,EAAiB5B,EAAUF,EAAa4C,GAAiB,EAAOF,GF/FrF/C,YAYlB5G,iBAAQ6G,GACJvP,KAAKgT,cAAgB,GACrBhT,KAAKiT,QAAU,QACVhH,OAAOsD,EAAc,MAfZD,YAkBlBrD,gBAAOsD,EAAyC2D,wBAClB3D,kBAAc,KAA7B4D,OACPnT,EAAKgT,cAAcG,EAAY7P,IAAM6P,EAErC1L,IAAM0H,EAAQnP,EAAKiT,QAAQE,EAAY7P,IAAM8P,mBAAiBD,KACxDE,eAAiBC,gBAAcnE,EAAMoE,uBAE9BL,kBAAY,KAAlB5P,cACAtD,EAAKgT,cAAc1P,UACnBtD,EAAKiT,QAAQ3P,IAGxBtD,KAAKwT,iBAAmB,OAExB/L,UDER,SAAuBgM,GAGnB,IAFAhM,IAAMiM,EAAS,GAENzS,EAAI,EAAGA,EAAIwS,EAAO7T,OAAQqB,IAAK,CACpCwG,IAAMuJ,EAAI9B,EAAOuE,EAAOxS,IACpB0S,EAAQD,EAAO1C,GACd2C,IACDA,EAAQD,EAAO1C,GAAK,IAExB2C,EAAMhD,KAAK8C,EAAOxS,KAGtBwG,IAAMmM,EAAS,GAEf,QAAW5C,KAAK0C,EACZE,EAAOjD,KAAK+C,EAAO1C,IAGvB,OAAO4C,ECpBYC,CAAcC,SAAO9T,KAAKgT,gCAEN,KACzBS,OAAsB1I,aAAKoI,UAAgBnT,EAAKiT,QAAQE,EAAY7P,MAEpE6L,EAAQsE,EAAO,GACrB,GAAyB,SAArBtE,EAAM4E,WAAV,KAIMC,EAAW7E,EAAM8E,QAAU,GAC7BC,EAAclU,EAAKwT,iBAAiBQ,GACnCE,MACalU,EAAKwT,iBAAiBQ,GAAY,QAG9CG,EAAgBhF,EAAMiF,aAAe,oBACvCC,EAAsBH,EAAYC,GACjCE,MACqBH,EAAYC,GAAiB,IAGvDE,EAAoB1D,KAAK8C,OGvDrC,IAAMa,EAcF1M,SAAY2M,EACA9E,EACAC,EACA8E,EACAC,EACAC,EACAC,EACAvD,EACAwD,EACAC,EACAzC,EACA0C,OACJC,EAAKJ,EAAOnR,IAAM4N,EAAWwD,EAC7BtN,EAAKqN,EAAOK,OAAS5D,EAAWwD,EAChCK,EAAKN,EAAOpR,KAAO6N,EAAWwD,EAC9BM,EAAKP,EAAOpD,MAAQH,EAAWwD,KAEnC5U,KAAKmV,cAAgBZ,EAAkB3U,OAEnCiV,EAAW,CAEXrM,IAAI7E,EAAS2D,EAAKyN,EACZnV,EAASsV,EAAKD,EAEhBtR,EAAS,IAETA,EAAStD,KAAKgI,IAAI,GAAK+I,EAAUzN,QAE5ByR,yBAAyBb,EAAmB9E,EAAMC,EAASA,EAAOI,QAAelQ,EAAQ+D,EAAQ6Q,EAAcC,EAAkBC,EAAatC,SAGpJ,IACC0C,EAAQ,KAKFO,EAAK,IAAIC,QAAML,EAAIF,GACnBQ,EAAK,IAAID,QAAMJ,EAAIH,GACnBS,EAAK,IAAIF,QAAML,EAAI3N,GACnBmO,EAAK,IAAIH,QAAMJ,EAAI5N,GAEnBoO,EAAgBZ,EAASzU,KAAK2G,GAAK,IAEzCqO,EAAGM,QAAQD,GACXH,EAAGI,QAAQD,GACXF,EAAGG,QAAQD,GACXD,EAAGE,QAAQD,KAKNrV,KAAK+H,IAAIiN,EAAG9Q,EAAGgR,EAAGhR,EAAGiR,EAAGjR,EAAGkR,EAAGlR,KAC9BlE,KAAKgI,IAAIgN,EAAG9Q,EAAGgR,EAAGhR,EAAGiR,EAAGjR,EAAGkR,EAAGlR,KAC9BlE,KAAK+H,IAAIiN,EAAGjO,EAAGmO,EAAGnO,EAAGoO,EAAGpO,EAAGqO,EAAGrO,KAC9B/G,KAAKgI,IAAIgN,EAAGjO,EAAGmO,EAAGnO,EAAGoO,EAAGpO,EAAGqO,EAAGrO,IAEvCmN,EAAkBqB,YAAYlG,EAAOnL,EAAGmL,EAAOtI,EAAG6N,EAAIF,EAAIG,EAAI5N,EAAIkN,EAAcC,EAAkBC,EAC9F,EAAG,IAGX1U,KAAK6V,YAActB,EAAkB3U,SA3EtB0U,YAsFnBc,kCAAyBb,EACF9E,EACAC,EACAI,EACAH,EACAmG,EACAtB,EACAC,EACAC,EACAtC,GACnB3K,IAAMsO,EAAOD,EAAU,EACjBE,EAAS3V,KAAKE,MAAMoP,EAAcoG,IAAS,EAS3CE,EAA2B,EAAI,GAAK5V,KAAK6V,IAAI9D,GAAe/R,KAAK8V,IACjEC,EAAqB/V,KAAKE,MAAMyV,EAASC,EAA2B,GAIpEI,GAAkBP,EAAU,EAE9B/F,EAAIL,EACJM,EAAQF,EAAU,EAClBG,EAAiBoG,EACfC,GAAsB3G,EAAc,EACpC4G,EAAuBD,EAAqB3G,EAAc,EAEhE,EAAG,CAGC,OAAY,EAAG,CACX,GAAIM,EAAiBqG,EAGjB,SAIQ,EACR,SAGc7G,EAAKO,GAAOE,KAAKH,GACnCA,EAAIN,EAAKO,UAERC,EAAiBsG,GAI1B,IAFA/N,IAAIgO,EAAgB/G,EAAKO,GAAOE,KAAKT,EAAKO,EAAQ,IAEzC/O,GAAKmV,EAAoBnV,EAAI+U,EAASI,EAAoBnV,IAAK,CAGpEwG,IAAMgP,EAAYxV,EAAI8U,EAClBW,EAAsBJ,EAAqBG,EAM/C,GAHIA,EAAY,IAAGC,GAAuBD,GACtCA,EAAY9G,IAAa+G,GAAuBD,EAAY9G,KAE5D+G,EAAsBzG,GAA1B,CAOA,KAAOA,EAAiBuG,EAAgBE,GAAqB,OACvCF,MAIN,GAAK/G,EAAK7P,OAClB,OAGJ4W,EAAgB/G,EAAKO,GAAOE,KAAKT,EAAKO,EAAQ,KAIlDvI,IAAMkP,EAAqBD,EAAsBzG,EAE3C2G,EAAKnH,EAAKO,GAEV6G,EADKpH,EAAKO,EAAQ,GACE8G,IAAIF,GAAIG,QAAQC,MAAML,GAAoBM,KAAKL,GAAI3E,SAMvEiF,EAAuB7W,KAAKqQ,IAAIgG,EAAsBL,GAAkBN,EAC1E,EACyC,IAAxCW,EAAsBL,GAE3B9B,EAAkBqB,YAAYiB,EAAetS,EAAGsS,EAAezP,GAC1D0O,EAAU,GAAIA,EAAU,EAAGA,EAAU,EAAGA,EAAU,EACnDtB,EAAcC,EAAkBC,EAChCoB,EAAU,EAAGoB,OCzMd,IAAMC,EACjBvP,SAAYhD,EAAWwS,GAKnB,kBALe,mBAAcC,GAC7BrX,KAAK4E,KAAOA,OACPhF,OAASI,KAAK4E,KAAKhF,OACxBI,KAAKoX,QAAUA,EAEXpX,KAAKJ,OAAS,MACT4I,IAAIvH,QAAUrB,QAAU,GAAK,EAAGqB,GAAK,EAAGA,SAAUqW,MAAMrW,KAoEzE,SAASoW,EAAezF,EAAGpE,GACvB,OAAOoE,EAAIpE,GAAK,EAAIoE,EAAIpE,EAAI,EAAI,0XCqCpC,SAAyB+J,GAKrB,IAJA/O,IAAIgP,EAAO,EACPjT,EAAI,EACJ6C,EAAI,EACFqQ,EAASF,EAAQ,GACdtW,EAAI,EAAGM,EAAMkW,EAAO7X,OAAQsN,EAAI3L,EAAM,EAAGN,EAAIM,EAAK2L,EAAIjM,IAAK,CAChEwG,IAAMmK,EAAI6F,EAAOxW,GACXuM,EAAIiK,EAAOvK,GACXwK,EAAI9F,EAAErN,EAAIiJ,EAAEpG,EAAIoG,EAAEjJ,EAAIqN,EAAExK,EAC9B7C,IAAMqN,EAAErN,EAAIiJ,EAAEjJ,GAAKmT,EACnBtQ,IAAMwK,EAAExK,EAAIoG,EAAEpG,GAAKsQ,EACnBF,GAAY,EAAJE,GAEZ,OAAO,IAAIC,EAAKpT,EAAIiT,EAAMpQ,EAAIoQ,EAAM,EAAGD,uYA/C3C,SAASK,EAAWhG,EAAGpE,GACnB,OAAOA,EAAEnF,IAAMuJ,EAAEvJ,IAGrB,SAASsP,EAAKpT,EAAG6C,EAAGyQ,EAAGN,GACnBvX,KAAK+P,EAAI,IAAIuF,QAAM/Q,EAAG6C,GACtBpH,KAAK6X,EAAIA,EACT7X,KAAK8X,EAKT,SAA4B/H,EAAGwH,GAI3B,IAHA/O,IAAIuP,GAAS,EACTC,EAAYC,EAAAA,EAEPjH,EAAI,EAAGA,EAAIuG,EAAQ3X,OAAQoR,IAGhC,IAFAvJ,IAAMyQ,EAAOX,EAAQvG,GAEZ/P,EAAI,EAAGM,EAAM2W,EAAKtY,OAAQsN,EAAI3L,EAAM,EAAGN,EAAIM,EAAK2L,EAAIjM,IAAK,CAC9DwG,IAAMmK,EAAIsG,EAAKjX,GACTuM,EAAI0K,EAAKhL,GAEV0E,EAAExK,EAAI2I,EAAE3I,GAAMoG,EAAEpG,EAAI2I,EAAE3I,GACtB2I,EAAExL,GAAKiJ,EAAEjJ,EAAIqN,EAAErN,IAAMwL,EAAE3I,EAAIwK,EAAExK,IAAMoG,EAAEpG,EAAIwK,EAAExK,GAAKwK,EAAErN,IAAIwT,GAAUA,GAErEC,EAAY3X,KAAK+H,IAAI4P,EAAWG,uBAAqBpI,EAAG6B,EAAGpE,KAInE,QAAQuK,EAAS,GAAK,GAAK1X,KAAK+X,KAAKJ,GAvB5BK,CAAmBrY,KAAK+P,EAAGwH,GACpCvX,KAAKqI,IAAMrI,KAAK8X,EAAI9X,KAAK6X,EAAIxX,KAAKiY,ODvFPnB,YAW3BxG,cAAK4H,QACI3T,KAAK+L,KAAK4H,GACfvY,KAAKJ,cACA4Y,IAAIxY,KAAKJ,OAAS,KAdAuX,YAiB3BsB,eACI,GAAoB,IAAhBzY,KAAKJ,OAAT,KAEM4D,EAAMxD,KAAK4E,KAAK,UACtB5E,KAAKJ,SAEDI,KAAKJ,OAAS,IACdI,KAAK4E,KAAK,GAAK5E,KAAK4E,KAAK5E,KAAKJ,QAC9BI,KAAKsX,MAAM,IAEftX,KAAK4E,KAAK6T,MAEHjV,IA7BgB2T,YAgC3BuB,gBACI,OAAO1Y,KAAK4E,KAAK,IAjCMuS,YAoC3BqB,aAAI3Y,GAIA,QAHO+E,EAAiB5E,UAAXoX,EAAWpX,aAClBuY,EAAO3T,EAAK/E,GAEXA,EAAM,GAAG,KACNsF,EAAUtF,EAAM,GAAM,EACtByQ,EAAU1L,EAAKO,MACjBiS,EAAQmB,EAAMjI,IAAY,EAAG,MACjC1L,EAAK/E,GAAOyQ,IACNnL,GAGVP,EAAK/E,GAAO0Y,IAhDWpB,YAmD3BG,eAAMzX,GAKF,QAJO+E,EAAiB5E,UAAXoX,EAAWpX,aAClB2Y,EAAa3Y,KAAKJ,QAAU,EAC5B2Y,EAAO3T,EAAK/E,GAEXA,EAAM8Y,GAAY,KACjBpV,EAAoB,GAAZ1D,GAAO,GACf+Y,EAAOhU,EAAKrB,GACVgO,EAAQhO,EAAO,KAEjBgO,OAAa3R,QAAUwX,EAAQxS,EAAK2M,GAAQqH,GAAQ,MAC7CrH,EACPqH,EAAOhU,EAAK2M,IAEZ6F,EAAQwB,EAAML,IAAS,EAAG,MAE9B3T,EAAK/E,GAAO+Y,IACNrV,GAGVqB,EAAK/E,GAAO0Y,6CENlBM,UArDF,SAA2BzJ,EAAK0J,GAC/B,IAAIC,EAAWC,EAAOC,EAAIC,EAAKC,EAASC,EAASC,EAAIpY,EASrD,IAPA8X,EAAyB,EAAb3J,EAAIxP,OAChBoZ,EAAQ5J,EAAIxP,OAASmZ,EACrBE,EAAKH,EACLK,EAAK,WACLC,EAAK,UACLnY,EAAI,EAEGA,EAAI+X,GACRK,EACwB,IAApBjK,EAAIlO,WAAWD,IACO,IAAtBmO,EAAIlO,aAAaD,KAAc,GACT,IAAtBmO,EAAIlO,aAAaD,KAAc,IACT,IAAtBmO,EAAIlO,aAAaD,KAAc,KACnCA,EASFgY,EAAwB,OAAV,OADdC,EAAyB,GAAV,OADTD,GADNA,GAFAI,GAAc,OADdA,GADAA,GAAc,MAALA,GAAeF,KAAUE,IAAO,IAAMF,EAAM,QAAW,IAAQ,aAC5D,GAAOE,IAAO,KACFD,KAAUC,IAAO,IAAMD,EAAM,QAAW,IAAQ,aAGtD,GAAOH,IAAO,OACe,GAAbA,IAAO,IAAW,QAAW,IAAQ,eACnB,OAAdC,IAAQ,IAAgB,QAAW,IAK1E,OAFAG,EAAK,EAEGN,GACP,KAAK,EAAGM,IAA+B,IAAxBjK,EAAIlO,WAAWD,EAAI,KAAc,GAChD,KAAK,EAAGoY,IAA+B,IAAxBjK,EAAIlO,WAAWD,EAAI,KAAc,EAChD,KAAK,EAKLgY,GADAI,GAAa,OADbA,GADAA,GAAa,OAFLA,GAA2B,IAApBjK,EAAIlO,WAAWD,KAEPkY,KAAUE,IAAO,IAAMF,EAAM,QAAW,IAAO,aAC1D,GAAOE,IAAO,KACHD,KAAUC,IAAO,IAAMD,EAAM,QAAW,IAAO,YAYvE,OARAH,GAAM7J,EAAIxP,OAGVqZ,EAAuB,YAAV,OADbA,GAAMA,IAAO,OACyC,YAAbA,IAAO,IAAoB,QAAW,IAAO,WAEtFA,EAAwB,YAAV,OADdA,GAAMA,IAAO,OAC0C,YAAbA,IAAO,IAAoB,QAAW,IAAQ,YACxFA,GAAMA,IAAO,MAEC,2CCVbJ,UAvCF,SAA2B/X,EAAKgY,GAO9B,IANA,IAIE9H,EAHAsI,EAAIxY,EAAIlB,OACRiY,EAAIiB,EAAOQ,EACXrY,EAAI,EAGCqY,GAAK,GAOVtI,EAAqB,YAAV,OANZA,EACwB,IAApBlQ,EAAII,WAAWD,IACO,IAAtBH,EAAII,aAAaD,KAAc,GACT,IAAtBH,EAAII,aAAaD,KAAc,IACT,IAAtBH,EAAII,aAAaD,KAAc,OAEiB,YAAZ+P,IAAM,IAAoB,QAAW,IAI/E6G,EAAqB,YAAV,MAAJA,KAA4C,YAAZA,IAAM,IAAoB,QAAW,KAFzE7G,EAAqB,YAAV,OADXA,GAAKA,IAAM,OACwC,YAAZA,IAAM,IAAoB,QAAW,KAI5EsI,GAAK,IACHrY,EAGJ,OAAQqY,GACR,KAAK,EAAGzB,IAA8B,IAAxB/W,EAAII,WAAWD,EAAI,KAAc,GAC/C,KAAK,EAAG4W,IAA8B,IAAxB/W,EAAII,WAAWD,EAAI,KAAc,EAC/C,KAAK,EACG4W,EAAqB,YAAV,OADXA,GAA0B,IAApB/W,EAAII,WAAWD,OAC8B,YAAZ4W,IAAM,IAAoB,QAAW,KAOpF,OAHAA,EAAqB,YAAV,OADXA,GAAKA,IAAM,OACwC,YAAZA,IAAM,IAAoB,QAAW,KAC5EA,GAAKA,IAAM,MAEE,QC7CE0B,IACQA,IACAC,ECmDlB,SAASC,EAAoBC,EACPC,EACAC,EACAC,EACAC,EACAC,GACzBL,EAAOM,eAEPvS,IAAMwS,EAAW,IAAMP,EAAOtH,YAC9BsH,EAAOQ,eAAiBnR,SAASkR,EACjCP,EAAOS,YAAc,GACrBT,EAAOU,iBAAkB,EAEzB3S,IAAM4S,EAASX,EAAOjG,OAAO,GAAG4G,OAC1BC,EAA0BZ,EAAOjG,OAAO,GAAG8G,mBAAmBC,QAE9DC,EAAQ,GAEd,GAAyC,cAArCf,EAAOgB,aAAaC,aAA8B,CAClD,MAAmBjB,EAAOgB,aAAaE,UAAhCxS,QAAKC,QACZoS,EAAMI,mBAAqB,CACvBP,EAAwB,aAAaQ,iBAAiB,IAAIC,uBAAqB3S,IAC/EkS,EAAwB,aAAaQ,iBAAiB,IAAIC,uBAAqB1S,MAIvF,GAAyC,cAArCqR,EAAOsB,aAAaL,aAA8B,CAClD,MAAmBjB,EAAOsB,aAAaJ,UAAhCxS,QAAKC,QACZoS,EAAMQ,mBAAqB,CACvBX,EAAwB,aAAaQ,iBAAiB,IAAIC,uBAAqB3S,IAC/EkS,EAAwB,aAAaQ,iBAAiB,IAAIC,uBAAqB1S,MAIvFoS,EAAMS,eAAiBZ,EAAwB,aAAaQ,iBAAiB,IAAIC,uBAAqBrB,EAAOyB,KAAO,IACpHV,EAAMW,eAAiBd,EAAwB,aAAaQ,iBAAiB,IAAIC,uBAAqBrB,EAAOyB,KAAO,IACpHV,EAAMY,YAAcf,EAAwB,aAAaQ,iBAAiB,IAAIC,uBAAqB,KAQnG,IANAtT,IACM6T,EADQ,GACKjB,EAAOlN,IAAI,oBACxBoO,EAA0D,QAA1ClB,EAAOlN,IAAI,4BAA2E,UAAnCkN,EAAOlN,IAAI,oBAC9EqO,EAAcnB,EAAOlN,IAAI,2BAGTuM,EAAO+B,yBAAU,KAA5BC,OACDC,EAAYtB,EAAOlN,IAAI,aAAayO,SAASF,EAAS,IAAIG,KAAK,KAC/DC,EAAmBlC,EAEnBmC,EAAyB,GACzBC,EAAON,EAAQM,KACrB,GAAIA,EAAM,CACNvU,IAAMwU,EAAkBD,EAAKrV,WACvBuV,EAAgC7B,EAAOlN,IAAI,eAAeyO,SAASF,EAAS,IAAI3Q,aAAK+G,UAdrF,GAc2FA,IAC3FK,EAfA,GAeUkI,EAAOlN,IAAI,uBAAuByO,SAASF,EAAS,IAC9DS,EAAmBC,sBAAoBH,GAAmB9J,EAAU,EACpEkK,EAAahC,EAAOlN,IAAI,eAAeyO,SAASF,EAAS,IACzDY,EAAcjC,EAAOlN,IAAI,gBAAgByO,SAASF,EAAS,IAC3Da,EAA8C,UAAnClC,EAAOlN,IAAI,oBAnBtB,GAoBFkN,EAAOlN,IAAI,kBAAkByO,SAASF,EAAS,IAC/C,EAEJK,EAAuBS,WAAaC,YAAUT,EAAMrC,EAAUgC,EAAWY,EAAUjB,EAAYe,EAAYC,EAAaH,EAAkBD,EAvBpI,GAuBuJQ,cAAYF,YACrKG,4BAA0BV,IAAoBV,GAAiBC,IAC/DO,EAAuBa,SAAWH,YAAUT,EAAMrC,EAAUgC,EAAWY,EAAUjB,EAAYe,EAAYC,EAAaH,EAAkBD,EAzBtI,GAyByJQ,cAAYE,YAI/KpU,IAAI8I,SACJ,GAAIoK,EAAQmB,KAAM,CACdpV,IAAMqV,EAAQjD,EAAS6B,EAAQmB,MAC3BC,IACAxL,EAAayL,YACTjD,EAAe4B,EAAQmB,MACvBxC,EAAOlN,IAAI,eAAeyO,SAASF,EAAS,IAC5CrB,EAAOlN,IAAI,eAAeyO,SAASF,EAAS,UACxBpN,IAApBoL,EAAOsD,SACPtD,EAAOsD,SAAWF,EAAMG,IACjBvD,EAAOsD,WAAaF,EAAMG,KACjCrQ,WAAS,uEAETkQ,EAAMI,aAAexD,EAAOwD,WAC5BxD,EAAOU,iBAAkB,EAC0B,IAA5CC,EAAOlN,IAAI,eAAegQ,WAAW,KAC5CzD,EAAOU,iBAAkB,MAKjC2B,EAAuBS,YAAclL,IACrC8L,EAAW1D,EAAQgC,EAASK,EAAwBzK,EAAYwK,EAAkBrB,IAItFV,GACAL,EAAO2D,iCAYf,SAASD,EAAW1D,EACAgC,EACAK,EACAzK,EACAwK,EACArB,GAChBhT,IAAMyT,EAAiBT,EAAMS,eAAeU,SAASF,EAAS,IACxDN,EAAiBX,EAAMW,eAAeQ,SAASF,EAAS,IAM1DL,EAAcZ,EAAMY,YAAYO,SAASF,EAAS,SAClCpN,IAAhB+M,IACAA,EAAcH,GAGlBzT,IAAM4S,EAASX,EAAOjG,OAAO,GAAG4G,OAC1B6B,EAAa7B,EAAOlN,IAAI,eAAeyO,SAASF,EAAS,IACzD4B,EAAajD,EAAOlN,IAAI,eAAeyO,SAASF,EAAS,IAG3D6B,EAAYrC,EADE,GAEdsC,EAAe9D,EAAOQ,eAAiBqD,EACvCE,EAAkB/D,EAAOQ,eAAiBmB,EAH5B,GAIdqC,EAAehE,EAAOQ,eAAiBkB,EACvCuC,EAAoBjE,EAAOQ,eAAiBG,EAAOlN,IAAI,kBACvDyQ,EAAcvD,EAAOlN,IAAI,gBAAkBuM,EAAOQ,eAClD2D,EAAcxD,EAAOlN,IAAI,gBAAkBuM,EAAOQ,eAClD4D,EAAezD,EAAOlN,IAAI,kBAAoB,IAAM9M,KAAK2G,GACzDuU,EAA0D,QAA1ClB,EAAOlN,IAAI,4BAA2E,UAAnCkN,EAAOlN,IAAI,oBAC9E4Q,EAA0D,QAA1C1D,EAAOlN,IAAI,4BAA2E,UAAnCkN,EAAOlN,IAAI,oBAC9E6Q,EAAkB3D,EAAOlN,IAAI,oBAC7B8Q,EAAqBN,EAAoB,EAEvCO,WAAqBzO,EAAMC,GACzBA,EAAOnL,EAAI,GAAKmL,EAAOnL,GAAKwE,UAAU2G,EAAOtI,EAAI,GAAKsI,EAAOtI,GAAK2B,UAqI9E,SAAmB2Q,EACAhK,EACAD,EACAsM,EACAzK,EACAnC,EACAoF,EACAC,EACAC,EACAC,EACA8I,EACAI,EACArC,EACAW,EACAwB,EACAG,EACAE,EACAT,EACA5B,EACAI,EACArB,GACfhT,IAEI0W,EAAsBC,EAFpBC,EAAY3E,EAAO4E,qBAAqB5O,EAAQD,GAIlD8O,EAAkB,EAClBC,EAAmB,EACnBC,EAA2B,EACzBrP,EAAMmK,EAAQwC,EAAuBS,WAAaT,EAAuBS,WAAWR,KAAO,IAC3F0C,EAA0B,GAChC,GAAI3C,EAAuBS,WAAY,CAGnC/U,IAAMkX,EAAaxP,EAAMkL,OAAOlN,IAAI,eAAeyO,SAASF,EAAS,IACrEyC,EAAuB,IAAI7J,EAAiBC,EAAmB9E,EAAMC,EAAQ8E,EAAcC,EAAkBC,EAAaqH,EAAuBS,WAAYgB,EAAcI,EAAarC,EAAe7B,EAAOtH,YAAauM,GAC3NH,GAAoBI,EAAgBlF,EAAQhK,EAAQqM,EAAuBS,WAAYrN,EAAOoM,EAAeG,EAASQ,EAAYmC,EAAWtC,EAAuBa,SAAWF,cAAYF,WAAaE,cAAYmC,eAAgBH,EAAyB5C,EAAkBrB,GAE3QsB,EAAuBa,WACvB6B,GAA4BG,EAAgBlF,EAAQhK,EAAQqM,EAAuBa,SAAUzN,EAAOoM,EAAeG,EAASQ,EAAYmC,EAAW3B,cAAYE,SAAU8B,EAAyB5C,EAAkBrB,KAI5NhT,IAAMqX,EAAoBX,EAAuBA,EAAqBhJ,cAAgBuE,EAAOnF,kBAAkB3U,OACzGmf,EAAkBZ,EAAuBA,EAAqBtI,YAAc6D,EAAOnF,kBAAkB3U,OAE3G,GAAI0R,EAAY,CACZ7J,IAAMuX,EC9UP,SAAsBtP,EACP4B,EACAnC,EACA8P,EACA/N,EACAwK,GAClBjU,IAYI4N,EAAIE,EAAIE,EAAID,EAZVsH,EAAQxL,EAAWwL,MACnBzC,EAASlL,EAAMkL,OAOf7W,EAAM8N,EAAW9N,IAFR,EAEuBsZ,EAAMI,WACtC3Z,EAAO+N,EAAW/N,KAHT,EAGyBuZ,EAAMI,WACxClI,EAAS1D,EAAW0D,OAJX,EAI6B8H,EAAMI,WAC5C3L,EAAQD,EAAWC,MALV,EAK2BuL,EAAMI,WAIhD,GAAoC,SAAhC7C,EAAOlN,IAAI,kBAA+B+D,EAAY,CACtDzJ,IAAMyX,EAAa3N,EAAQhO,EACvB4b,EAAcnK,EAASxR,EACvB4b,EAAO/E,EAAOlN,IAAI,aAAayO,SAASF,EAAS,IAAM,GACvD2D,EAAWnO,EAAW3N,KAAO6b,EAC7BE,EAAYpO,EAAWK,MAAQ6N,EAC/BG,EAAUrO,EAAW1N,IAAM4b,EAE3BI,EAAYF,EAAYD,EACxBI,EAFavO,EAAW8D,OAASoK,EAEPG,EAC1BG,EAAOrF,EAAOlN,IAAI,yBAAyB,GAC3CwS,EAAOtF,EAAOlN,IAAI,yBAAyB,GAC3CyS,EAAOvF,EAAOlN,IAAI,yBAAyB,GAC3C0S,EAAOxF,EAAOlN,IAAI,yBAAyB,GAC3C2S,EAA0C,UAAhCzF,EAAOlN,IAAI,iBAA2D,IAA3BsS,EAAaN,GAAoB,EACtFY,EAA0C,WAAhC1F,EAAOlN,IAAI,iBAA0D,IAAzBqS,EAAYN,GAAmB,EACrFzb,EAAwC,UAAhC4W,EAAOlN,IAAI,kBAAgE,SAAhCkN,EAAOlN,IAAI,iBAA8BqS,EAAYN,EACxGvb,EAAyC,WAAhC0W,EAAOlN,IAAI,kBAAiE,SAAhCkN,EAAOlN,IAAI,iBAA8BsS,EAAaN,EAC/G9J,EAAK,IAAIC,QAAM+J,EAAWU,EAAUF,EAAcN,EAAUO,EAAUJ,GACtEnK,EAAK,IAAID,QAAM+J,EAAWU,EAAUJ,EAAOlc,EAAO8b,EAAUO,EAAUJ,GACtEjK,EAAK,IAAIH,QAAM+J,EAAWU,EAAUJ,EAAOlc,EAAO8b,EAAUO,EAAUF,EAAOjc,GAC7E6R,EAAK,IAAIF,QAAM+J,EAAWU,EAAUF,EAAcN,EAAUO,EAAUF,EAAOjc,SAG7E0R,EAAK,IAAIC,QAAM/R,EAAMC,GACrB+R,EAAK,IAAID,QAAM/D,EAAO/N,GACtBiS,EAAK,IAAIH,QAAM/D,EAAOyD,GACtBQ,EAAK,IAAIF,QAAM/R,EAAMyR,GAGzBvN,IAAMsL,EAAQ5D,EAAMkL,OAAOlN,IAAI,eAAeyO,SAASF,EAAS,IAAMrb,KAAK2G,GAAK,IAEhF,GAAI+L,EAAO,CACPtL,IAAMuY,EAAM3f,KAAK2f,IAAIjN,GACjB9L,EAAM5G,KAAK4G,IAAI8L,GACfkN,EAAS,CAAChZ,GAAM+Y,EAAKA,EAAK/Y,GAE9BoO,EAAG6K,SAASD,GACZ1K,EAAG2K,SAASD,GACZzK,EAAG0K,SAASD,GACZxK,EAAGyK,SAASD,IAIhB,OAAO,CAAC,IAAC5K,KAAIE,KAAIC,KAAIC,EAAI0K,IAAKrD,EAAMsD,WAAYC,iBAAa/R,EAAWgS,YAAa,CAAC,EAAG,KD6QnEC,CAAa7Q,EAAQ4B,EAAYnC,EAC/B4O,EAAehC,EAAuBS,WACtCd,GACd8E,EAAarR,EAAMkL,OAAOlN,IAAI,eAAeyO,SAASF,EAAS,IACrE0C,EAAuB,IAAI9J,EAAiBC,EAAmB9E,EAAMC,EAAQ8E,EAAcC,EAAkBC,EAAapD,EAAYoM,EAAcG,GAAoC,EAAOnE,EAAOtH,YAAaoO,GAEnNjC,EAAqC,EAAnBS,EAAUpf,OAE5B6H,IAAMgZ,EAAW/G,EAAOsB,aACpBA,EAAe,KAEW,WAA1ByF,EAAS9F,cACTK,EAAe,CACX0F,mBAAmBvR,EAAMkL,OAAOlN,IAAI,aAAayO,SAASF,EAAS,MAEtD,GAAKiF,GAClB/T,WAAY8M,EAAOkH,SAAS,kEAEC,cAA1BH,EAAS9F,gBAChBK,EAAe,CACX0F,mBAAmBjG,EAAMQ,mBAAmB,GAAGW,SAASF,EAAS,IACjEgF,mBAAmBjG,EAAMQ,mBAAmB,GAAGW,SAASF,EAAS,MAEpD,GAAKiF,GAAmB3F,EAAa,GAAK2F,IACvD/T,WAAY8M,EAAOkH,SAAS,kEAIpClH,EAAOmH,WACHnH,EAAOmD,KACPmC,EACAhE,EACAsC,EACAS,EACArC,GACA,EACAhM,EACA2O,EAAUyC,eACVzC,EAAUtN,aAGlBtJ,IAAMsZ,EAAoB3C,EAAuBA,EAAqBjJ,cAAgBuE,EAAOnF,kBAAkB3U,OACzGohB,EAAkB5C,EAAuBA,EAAqBvI,YAAc6D,EAAOnF,kBAAkB3U,OAEvG8Z,EAAOuH,iBAAiBrhB,QAAUshB,eAAaC,YAAYvU,WAC3D,oGAGJ8M,EAAO0H,gBAAgBxL,YACnBlG,EAAOnL,EACPmL,EAAOtI,EACPsX,EAAwB9e,OAAS,EAAI8e,EAAwB,IAAM,EACnEA,EAAwB9e,OAAS,EAAI8e,EAAwB,IAAM,EACnEtP,EACA0P,EACAC,EACAgC,EACAC,EACAxM,EACAgK,EACAC,EACAF,EACA,IA1OA8C,CAAU3H,EAAQhK,EAAQD,EAAMsM,EAAwBzK,EAAYoI,EAAOjG,OAAO,GAC9EiG,EAAOnF,kBAAmBmH,EAAQ1L,MAAO0L,EAAQjH,iBAAkBiF,EAAO1J,MAC1EwN,EAAcI,EAAarC,EAAeW,EAC1CwB,EAAcG,EAAaE,EAAeT,EAC1C5B,EAASI,EAAkBrB,KAGnC,GAAwB,SAApBuD,EACA,cErMR,SAAkBsD,EAA4BrM,EAAYF,EAAYG,EAAY5N,GAG9E,IAFAG,IAAM8Z,EAAe,GAEZjI,EAAI,EAAGA,EAAIgI,EAAM1hB,OAAQ0Z,IAI9B,IAHA7R,IAAMgI,EAAO6R,EAAMhI,GACfkI,SAEKvgB,EAAI,EAAGA,EAAIwO,EAAK7P,OAAS,EAAGqB,IAAK,CACtCuH,IAAIoO,EAAKnH,EAAKxO,GACVwgB,EAAKhS,EAAKxO,EAAI,GAGd2V,EAAGrS,EAAI0Q,GAAMwM,EAAGld,EAAI0Q,IAEb2B,EAAGrS,EAAI0Q,EACd2B,EAAK,IAAItB,QAAML,EAAI2B,EAAGxP,GAAKqa,EAAGra,EAAIwP,EAAGxP,KAAO6N,EAAK2B,EAAGrS,IAAMkd,EAAGld,EAAIqS,EAAGrS,KAAK0N,SAClEwP,EAAGld,EAAI0Q,IACdwM,EAAK,IAAInM,QAAML,EAAI2B,EAAGxP,GAAKqa,EAAGra,EAAIwP,EAAGxP,KAAO6N,EAAK2B,EAAGrS,IAAMkd,EAAGld,EAAIqS,EAAGrS,KAAK0N,UAGzE2E,EAAGxP,EAAI2N,GAAM0M,EAAGra,EAAI2N,IAEb6B,EAAGxP,EAAI2N,EACd6B,EAAK,IAAItB,QAAMsB,EAAGrS,GAAKkd,EAAGld,EAAIqS,EAAGrS,KAAOwQ,EAAK6B,EAAGxP,IAAMqa,EAAGra,EAAIwP,EAAGxP,IAAK2N,GAAI9C,SAClEwP,EAAGra,EAAI2N,IACd0M,EAAK,IAAInM,QAAMsB,EAAGrS,GAAKkd,EAAGld,EAAIqS,EAAGrS,KAAOwQ,EAAK6B,EAAGxP,IAAMqa,EAAGra,EAAIwP,EAAGxP,IAAK2N,GAAI9C,UAGzE2E,EAAGrS,GAAK2Q,GAAMuM,EAAGld,GAAK2Q,IAEf0B,EAAGrS,GAAK2Q,EACf0B,EAAK,IAAItB,QAAMJ,EAAI0B,EAAGxP,GAAKqa,EAAGra,EAAIwP,EAAGxP,KAAO8N,EAAK0B,EAAGrS,IAAMkd,EAAGld,EAAIqS,EAAGrS,KAAK0N,SAClEwP,EAAGld,GAAK2Q,IACfuM,EAAK,IAAInM,QAAMJ,EAAI0B,EAAGxP,GAAKqa,EAAGra,EAAIwP,EAAGxP,KAAO8N,EAAK0B,EAAGrS,IAAMkd,EAAGld,EAAIqS,EAAGrS,KAAK0N,UAGzE2E,EAAGxP,GAAKE,GAAMma,EAAGra,GAAKE,IAEfsP,EAAGxP,GAAKE,EACfsP,EAAK,IAAItB,QAAMsB,EAAGrS,GAAKkd,EAAGld,EAAIqS,EAAGrS,KAAO+C,EAAKsP,EAAGxP,IAAMqa,EAAGra,EAAIwP,EAAGxP,IAAKE,GAAI2K,SAClEwP,EAAGra,GAAKE,IACfma,EAAK,IAAInM,QAAMsB,EAAGrS,GAAKkd,EAAGld,EAAIqS,EAAGrS,KAAO+C,EAAKsP,EAAGxP,IAAMqa,EAAGra,EAAIwP,EAAGxP,IAAKE,GAAI2K,UAGxEuP,GAAgB5K,EAAGxN,OAAOoY,EAAYA,EAAY5hB,OAAS,MAC5D4hB,EAAc,CAAC5K,GACf2K,EAAa5Q,KAAK6Q,IAGtBA,EAAY7Q,KAAK8Q,QAIzB,OAAOF,EFgJgBG,CAAShG,EAAQ/M,SAAU,EAAG,EAAG5F,SAAQA,0BAYxD,QAZO0G,aACSyC,EACZzC,EACAkO,EACAG,EACA/B,EAAuBa,UAAYb,EAAuBS,WAC1DlL,EApCM,GAsCNmM,EACA/D,EAAOtH,YACPrJ,0BAE0B,KAAnB2G,OACDwB,EAAa6K,EAAuBS,WACrCtL,GAAeyQ,EAAiBjI,EAAQxI,EAAW8K,KAAMiC,EAAoBvO,IAC9EwO,EAAkBzO,EAAMC,SAIjC,GAAwB,gBAApBsO,EAGP,cAAmBtC,EAAQ/M,yBAAU,KAA1Bc,OACP,GAAIA,EAAK7P,OAAS,EAAG,CACjB6H,IAAMiI,EAAS8B,EACX/B,EACAqO,EACA/B,EAAuBa,UAAYb,EAAuBS,WAC1DlL,EA1DE,GA4DFmM,GACA/N,GACAwO,EAAkBzO,EAAMC,UAIjC,GAAqB,YAAjBgM,EAAQtW,KACf,cAAsBwc,gBAAclG,EAAQ/M,SAAU,mBAAI,KAA/C4I,OAEDsK,EAAMC,EAA0BvK,EAAS,IAC/C2G,EAAkB3G,EAAQ,GAAI,IAAIvF,SAAO6P,EAAItd,EAAGsd,EAAIza,EAAG,UAExD,GAAqB,eAAjBsU,EAAQtW,KAEf,cAAmBsW,EAAQ/M,yBAAU,KAA1Bc,OACPyO,EAAkBzO,EAAM,IAAIuC,SAAOvC,EAAK,GAAGlL,EAAGkL,EAAK,GAAGrI,EAAG,UAE1D,GAAqB,UAAjBsU,EAAQtW,KACf,cAAqBsW,EAAQ/M,yBACzB,wCAA4B,KAAjBoT,UACP7D,EAAkB,CAAC6D,IAAQ,IAAI/P,SAAO+P,GAAMxd,EAAGwd,GAAM3a,EAAG,8BAMxEK,IAAMkZ,EAAkB,MAExB,SAAS/B,EAAgBlF,EACAhK,EACAwB,EACA/B,EACAoM,EACAG,EACAQ,EACAmC,EACAgC,EACA3B,EACA5C,EACArB,GACrBhT,IAAMua,ECxKH,SAAuBtS,EACPuS,EACA9S,EACA8P,EACAvD,EACAwG,GAUnB,IARAza,IACMkX,EAAaxP,EAAMkL,OAAOlN,IAAI,eAAeyO,SAASF,EAAS,IAAMrb,KAAK2G,GAAK,IAC/EkV,EAAa/M,EAAMkL,OAAOlN,IAAI,eAAeyO,SAASF,EAAS,IAAI3Q,aAAK+G,UAFhE,GAEsEA,IAE9EqQ,EAAmBF,EAAQE,iBAC3BC,EAAQ,GAGLpR,EAAI,EAAGA,EAAImR,EAAiBviB,OAAQoR,IAAK,CAC9CvJ,IAAM4a,EAAkBF,EAAiBnR,GACnC4I,EAAiBsI,EAAUG,EAAgBC,WAC3Cte,EAAQ4V,GAAkBA,EAAeyI,EAAgBre,OAC/D,GAAKA,EAAL,CAEAyD,IAAM8a,EAAOve,EAAMue,KACnB,GAAKA,EAAL,CAGA9a,IACM+a,EAAare,mBADE,EAGfse,EAAcze,EAAMJ,QAAQM,QAAUme,EAAgBK,MAAQ,EAE9DpC,EAAcrB,EAChB,CAACoD,EAAgB9d,EAAIke,EAAaJ,EAAgBjb,GAClD,CAAC,EAAG,GAEFub,EAAgB1D,EAClB,CAAC,EAAG,GACJ,CAACoD,EAAgB9d,EAAIke,EAAcvG,EAAW,GAAImG,EAAgBjb,EAAI8U,EAAW,IAE/EjH,GAAMjR,EAAMJ,QAAQL,KAAOif,GAAcH,EAAgBK,MAAQD,EAAcE,EAAc,GAC7F5N,IAAO/Q,EAAMJ,QAAQJ,IAAMgf,GAAcH,EAAgBK,MAAQC,EAAc,GAC/EzN,EAAKD,EAAKsN,EAAKK,EAAIP,EAAgBK,MACnCpb,EAAKyN,EAAKwN,EAAK1K,EAAIwK,EAAgBK,MAEnCrN,EAAK,IAAIC,QAAML,EAAIF,GACnBQ,EAAK,IAAID,QAAMJ,EAAIH,GACnBS,EAAM,IAAIF,QAAML,EAAI3N,GACpBmO,EAAK,IAAIH,QAAMJ,EAAI5N,GAEzB,GAAI2X,GAAaoD,EAAgBzF,SAAU,CAQvCnV,IAAMob,EAAS,IAAIvN,SAAOmN,EAAaA,GACjCK,GAAoBziB,KAAK2G,GAAK,EAC9B+b,EAAoB,IAAIzN,QAAM,EAAG,GACvCD,EAAG2N,cAAcF,EAAkBD,GAAQ5L,KAAK8L,GAChDxN,EAAGyN,cAAcF,EAAkBD,GAAQ5L,KAAK8L,GAChDvN,EAAGwN,cAAcF,EAAkBD,GAAQ5L,KAAK8L,GAChDtN,EAAGuN,cAAcF,EAAkBD,GAAQ5L,KAAK8L,IAGpD,GAAIpE,EAAY,CACZlX,IAAMuY,EAAM3f,KAAK2f,IAAIrB,GACjB1X,EAAM5G,KAAK4G,IAAI0X,GACfsB,EAAS,CAAChZ,GAAM+Y,EAAKA,EAAK/Y,GAE9BoO,EAAG6K,SAASD,GACZ1K,EAAG2K,SAASD,GACZzK,EAAG0K,SAASD,GACZxK,EAAGyK,SAASD,IAGhBmC,EAAMzR,KAAK,IAAC0E,KAAIE,KAAIC,KAAIC,EAAI0K,IAAKoC,EAAMlC,YAAa4B,EAAQ5B,wBAAaC,OAG7E,OAAO8B,EDyFYa,CAAcvT,EAAQwB,EACjB/B,EAAOoM,EAAeG,EAASI,GAEjD2E,EAAW/G,EAAOgB,aACpBA,EAAe,KAmCnB,OAjC8B,WAA1B+F,EAAS9F,cACTD,EAAe,CACXgG,mBAAmBvR,EAAMkL,OAAOlN,IAAI,aAAayO,SAASF,EAAS,MAEtD,GAAKiF,GAClB/T,WAAY8M,EAAOkH,SAAS,kEAEC,cAA1BH,EAAS9F,gBAChBD,EAAe,CACXgG,mBAAmBjG,EAAMI,mBAAmB,GAAGe,SAASF,EAAS,IACjEgF,mBAAmBjG,EAAMI,mBAAmB,GAAGe,SAASF,EAAS,MAEpD,GAAKiF,GAAmBjG,EAAa,GAAKiG,IACvD/T,WAAY8M,EAAOkH,SAAS,kEAIpClH,EAAOmH,WACHnH,EAAOsC,KACPgG,EACAtH,EACAwB,EACAX,EACAG,EACA2E,EACA3Q,EACA2O,EAAUyC,eACVzC,EAAUtN,YAId2N,EAAwB/N,KAAK+I,EAAOsC,KAAKkH,kBAAkBtjB,OAAS,GAEzC,EAApBoiB,EAAWpiB,OAwHtB,SAAS+hB,EAAiBjI,EAAasC,EAAcmH,EAAwBzT,GACzEjI,IAAM0S,EAAcT,EAAOS,YAC3B,GAAM6B,KAAQ7B,GAIV,IADA1S,IAAM2b,EAAejJ,EAAY6B,GACxBhL,EAAIoS,EAAaxjB,OAAS,EAAGoR,GAAK,EAAGA,IAC1C,GAAItB,EAAOQ,KAAKkT,EAAapS,IAAMmS,EAE/B,QAAO,OANfhJ,EAAY6B,GAAQ,GAYxB,OADA7B,EAAY6B,GAAMrL,KAAKjB,IAChB,EGlcXjI,IAgBqB4b,EAIjBzb,SAAY0b,GACR7b,IAAMya,EAAY,GACZqB,EAAO,GAEb,QAAWC,KAASF,EAAQ,KAClBjgB,EAASigB,EAAOE,GAChBC,EAAiBvB,EAAUsB,GAAS,GAE1C,QAAWlgB,KAAMD,EAAQ,KACfqgB,EAAMrgB,GAAQC,GACpB,GAAKogB,GAA4B,IAArBA,EAAI5f,OAAOL,OAAqC,IAAtBigB,EAAI5f,OAAOH,OAAjD,KAEMggB,EAAM,GACL,IACA,IACAD,EAAI5f,OAAOL,MAAQ,IACnBigB,EAAI5f,OAAOH,OAAS,GAE3B4f,EAAK5S,KAAKgT,GACVF,EAAengB,GAAM,MAAOqgB,EAAK/f,QAAS8f,EAAI9f,kBAIvCggB,UAAQL,GAAhBX,MAAG/K,MACJiF,EAAQ,IAAI+G,aAAW,CAACpgB,MAAOmf,GAAK,EAAGjf,OAAQkU,GAAK,IAE1D,QAAW2L,KAASF,EAAQ,KAClBjgB,EAASigB,EAAOE,GAEtB,QAAWlgB,KAAMD,EAAQ,KACfqgB,EAAMrgB,GAAQC,GACpB,GAAKogB,GAA4B,IAArBA,EAAI5f,OAAOL,OAAqC,IAAtBigB,EAAI5f,OAAOH,OAAjD,CACA8D,IAAMkc,EAAMzB,EAAUsB,GAAOlgB,GAAIif,kBACtBuB,KAAKJ,EAAI5f,OAAQgZ,EAAO,GAAI,IAAM,GAAI,CAACvY,EAAGof,EAAIpf,EArDzD,EAqDsE6C,EAAGuc,EAAIvc,EArD7E,GAqD2Fsc,EAAI5f,WAIvG9D,KAAK8c,MAAQA,EACb9c,KAAKkiB,UAAYA,IAIzBjU,WAAS,aAAcoV,GCzCvB,IAAMU,EAoBFnc,SAAYoc,GACRhkB,KAAK+J,OAAS,IAAIV,mBAAiB2a,EAAOja,OAAOb,YAAa8a,EAAOja,OAAOxC,KAAMyc,EAAOja,OAAOd,UAAUzE,EAAGwf,EAAOja,OAAOd,UAAU1E,EAAGyf,EAAOja,OAAOd,UAAU7B,GAChKpH,KAAK2M,IAAMqX,EAAOrX,IAClB3M,KAAKmb,KAAO6I,EAAO7I,KACnBnb,KAAKkd,WAAa8G,EAAO9G,WACzBld,KAAKia,SAAW+J,EAAO/J,SACvBja,KAAKiU,OAAS+P,EAAO/P,YAChB7B,YAAcpS,KAAK+J,OAAOka,kBAC/BjkB,KAAK+Z,mBAAqBiK,EAAOjK,wBAC5BmK,wBAA0BF,EAAOE,2BACjCC,qBAAuBH,EAAOG,qBAwJ3C,SAASC,EAAkB3Q,EAAoC0H,GAG3D,IADA1T,IAAM4c,EAAa,IAAItJ,uBAAqBI,SACxB1H,kBAAQ,MAClB6Q,YAAYD,KA1LTN,YAiCbQ,eAAM3f,EAAkB4f,EAA6BC,EAAchgB,cAC/DzE,KAAK0kB,OAAS,UACd1kB,KAAK4E,KAAOA,EAEZ5E,KAAKuU,kBAAoB,IAAIoQ,oBAC7Bld,IAAMmd,EAAmB,IAAIzW,kBAAgBa,OAAOD,KAAKnK,EAAK6O,QAAQxE,QAEhEuF,EAAe,IAAIqQ,eAAa7kB,KAAK+J,QAC3CyK,EAAasQ,eAAiB,GAE9Brd,IAsDIvC,EACAyU,EACAoL,EACAC,EAzDEC,EAA8B,GAE9BC,EAAU,cACZ1Q,mBACkB,uBACG,qBACF,IAGjB2Q,EAAgBX,EAAWhR,iBAAiBxT,KAAKiU,QACvD,QAAWE,KAAiBgR,EAAe,KACjC/Q,EAAcxP,EAAK6O,OAAOU,MAC3BC,GAIuB,IAAxBA,EAAYgR,SACZxY,WAAS,uBAAuB5M,qBAAuBmU,sFAM3D,QAFMM,EAAmBmQ,EAAiBS,OAAOlR,GAC3CsH,EAAW,GACRzL,EAAQ,EAAGA,EAAQoE,EAAYxU,OAAQoQ,IAAS,KAC/C0L,EAAUtH,EAAYsH,QAAQ1L,KAC3BW,KAAK,SAAE+K,QAAS1L,mBAAOyE,KAGpC,cAAqB0Q,EAAchR,mBAAgB,KAAxCmR,OACDnW,EAAQmW,EAAO,GAGrB,KAAInW,EAAMzF,SAAW1J,EAAKmb,KAAO9a,KAAKE,MAAM4O,EAAMzF,eAC9CyF,EAAM1E,SAAWzK,EAAKmb,MAAQhM,EAAM1E,SACxC,GAAyB,SAArB0E,EAAM4E,aAEQuR,EAAQtlB,EAAKmb,OAEhB8J,EAAQ9V,EAAM7L,IAAM6L,EAAMoW,aAAa,CAClDvV,MAAOwE,EAAasQ,eAAellB,cAC3B0lB,EACRnK,KAAMnb,EAAKmb,KACX+B,WAAYld,EAAKkd,WACjB9K,YAAapS,EAAKoS,YAClBmC,kBAAmBvU,EAAKuU,mCACxBE,EACA+Q,SAAUxlB,EAAKiU,UAGZwR,SAAShK,EAAUyJ,GAC1B1Q,EAAasQ,eAAenU,KAAK2U,EAAOva,aAAKuO,UAAMA,EAAEhW,aASvDggB,EAASoC,YAAUR,EAAQS,2BAAoBtiB,UAAW2L,OAAOD,KAAK1L,GAAQ0H,IAAIpD,UACpFqH,OAAOD,KAAKuU,GAAQ1jB,OACpB6kB,EAAMmB,KAAK,YAAa,CAACjZ,IAAK3M,KAAK2M,WAAK2W,YAAUhZ,EAAKsJ,GAC9C1O,MACOoF,IACGsJ,EACXiS,EAAaC,KAAK9lB,SAIf,GAGfyH,IAAMse,EAAQ/W,OAAOD,KAAKmW,EAAQc,kBAC9BD,EAAMnmB,OACN6kB,EAAMmB,KAAK,YAAa,OAACG,YAASzb,EAAKsJ,GAC9B1O,MACOoF,IACEsJ,EACViS,EAAaC,KAAK9lB,SAIhB,GAGdyH,IAAMwe,EAAWjX,OAAOD,KAAKmW,EAAQgB,8BAgB5BL,OACD3gB,EACA,OAAOT,EAASS,GACb,GAAIyU,GAAYoL,GAAWC,EAAY,KACpCmB,EAAa,IAAI9C,EAAW1J,GAC5ByM,EAAa,IAAIC,aAAWtB,EAASC,GAE3C,QAAW5V,KAAO6V,EAAS,KACjBvL,EAASuL,EAAQ7V,GACnBsK,aAAkBwH,kBACAxH,EAAOjG,YAAa0H,QAClBzB,EAAQC,EAAUwM,EAAWjE,UAAW6C,EAASqB,EAAWE,mBAAoBvM,qBAC7FL,EAAO6M,aACb7M,aAAkB8M,cAClB9M,aAAkB+M,cAClB/M,aAAkBgN,2BACDhN,EAAOjG,YAAa0H,QAC/BwL,YAAYzB,EAASkB,EAAWQ,oBAI/C5mB,KAAK0kB,OAAS,SACL,KAAM,CACXO,QAASnR,SAAOmR,GAAS1R,gBAAO/F,WAAMA,EAAEqZ,yBACxCrS,EACAD,kBAAmBvU,KAAKuU,kBACxBuS,gBAAiBX,EAAWrJ,iBAC5BsJ,WAEUpmB,KAAKmkB,mBAAqBxK,EAAW,aACtC3Z,KAAKmkB,mBAAqBY,EAAU,oBAC7B/kB,KAAKmkB,mBAAqBgC,EAAWjE,UAAY,SA9CzE+D,EAASrmB,OACT6kB,EAAMmB,KAAK,YAAa,CAACG,MAAOE,YAAY3b,EAAKsJ,GACxC1O,MACOoF,IACKsJ,EACbiS,EAAaC,KAAK9lB,SAIb,GAIjB6lB,EAAaC,KAAK9lB,QCrK1ByH,IAAMsf,EAA2C,oBAAhBC,YAC3BC,EAAU,CAEhBA,0BAA4Bhf,GACxB,UAAI8e,GAAqBC,aAAeA,YAAYE,mBACzCF,YAAYE,iBAAiBjf,IAK5Cgf,cAAgBE,GACZ,UAAIJ,GAAqBC,aAAeA,YAAYI,OACzCJ,YAAYI,KAAKD,IAKhCF,iBAAmBE,EAAcE,EAAmBC,GAChD,UAAIP,GAAqBC,aAAeA,YAAYO,UACzCP,YAAYO,QAAQJ,EAAME,EAAWC,IAKpDL,oBAAsBE,GAClB,UAAIJ,GAAqBC,aAAeA,YAAYQ,aACzCR,YAAYQ,WAAWL,IAKtCF,uBAAyBE,GACrB,UAAIJ,GAAqBC,aAAeA,YAAYS,gBACzCT,YAAYS,cAAcN,KAWnCO,EAGF9f,SAAa4E,QACJmb,OAAS,CACVC,MAAO,GAAS3f,IAAK,SAAS4T,KAAK,KACnCgM,IAAK,GAAS5f,IAAK,OAAO4T,KAAK,KAC/B0L,QAAS/a,EAAQvE,IAAItB,cAGjBygB,KAAKpnB,KAAK2nB,OAAOC,SChBjC,SAASE,EAAe9D,EAA8Bvf,GAClDgD,IAAM+E,EAAUub,iBAAe/D,EAAOxX,iBAAUlC,EAAa1F,EAAoBojB,EAAuBC,GAChG3d,EACA7F,EAAS6F,GACF1F,GACPH,EAAS,KAAM,CACXyjB,WAAY,IAAIC,MAAGC,WAAW,IAAIC,WAASzjB,IAC3C0jB,QAAS1jB,eACTojB,UACAC,OAIZ,kBACIzb,EAAQvB,SACRxG,MDTUijB,YAada,oBACYnB,KAAKpnB,KAAK2nB,OAAOE,KACzBrf,IAAIggB,EAAqBvB,EAAQC,iBAAiBlnB,KAAK2nB,OAAOJ,gBAG5B,IAA9BiB,EAAmB5oB,WACX2nB,QAAQvnB,KAAK2nB,OAAOJ,QAASvnB,KAAK2nB,OAAOC,MAAO5nB,KAAK2nB,OAAOE,KACpEW,EAAqBvB,EAAQC,iBAAiBlnB,KAAK2nB,OAAOJ,WAGlDC,WAAWxnB,KAAK2nB,OAAOC,SACvBJ,WAAWxnB,KAAK2nB,OAAOE,OACvBJ,cAAcznB,KAAK2nB,OAAOJ,UAG/BiB,GAIfvB,EAAQS,YAAcA,ECVtB,IAAMe,EAaF7gB,SAAY6c,EAAcD,EAA6BkE,GACnD1oB,KAAKykB,MAAQA,EACbzkB,KAAKwkB,WAAaA,EAClBxkB,KAAK0oB,eAAiBA,GAAkBZ,EACxC9nB,KAAK2oB,QAAU,GACf3oB,KAAK4oB,OAAS,KAlB+BH,YA0BjDpd,kBAAS2Y,EAA8Bvf,cAC7BkI,EAAMqX,EAAOrX,IAEd3M,KAAK2oB,UACN3oB,KAAK2oB,QAAU,QAEbE,KAAQ7E,GAAUA,EAAOxX,SAAWwX,EAAOxX,QAAQ0X,wBACrD,IAAI8C,EAAYU,YAAY1D,EAAOxX,SAEjCsc,EAAa9oB,KAAK2oB,QAAQhc,GAAO,IAAIoX,EAAWC,GACtD8E,EAAWC,MAAQ/oB,KAAK0oB,eAAe1E,WAAS1Z,EAAK0e,GAGjD,UAFOhpB,EAAK2oB,QAAQhc,GAEhBrC,IAAQ0e,EAGR,OAFAF,EAAWpE,OAAS,SACfkE,OAAOjc,GAAOmc,EACZrkB,EAAS6F,GAGpB7C,IAAMwhB,EAAcD,EAASV,QACvBN,EAAe,GACjBgB,EAASf,UAASD,EAAaC,QAAUe,EAASf,SAClDe,EAAShB,eAAcA,EAAaA,aAAegB,EAAShB,cAEhEvgB,IAAMyhB,EAAiB,MACnBL,EAAM,KACAL,EAAqBK,EAAKN,SAG5BC,IACAU,EAAeA,eAAiBpa,KAAKyV,MAAMzV,KAAKD,UAAU2Z,MAGlEM,EAAWZ,WAAac,EAASd,aACtB3D,MAAMyE,EAASd,WAAYloB,EAAKwkB,WAAYxkB,EAAKykB,eAAQna,EAAKsJ,GACrE,GAAItJ,IAAQsJ,EAAQ,OAAOnP,EAAS6F,KAG3B,KAAMY,SAAO,CAAC+d,YAAaA,EAAYE,MAAM,IAAKvV,EAAQoU,EAAckB,SAGhFN,OAAS5oB,EAAK4oB,QAAU,KACxBA,OAAOjc,GAAOmc,OApEsBL,YA2EjDW,oBAAWpF,EAA8Bvf,GACrCgD,IAAMmhB,EAAS5oB,KAAK4oB,OAChBjc,EAAMqX,EAAOrX,IACb0c,EAAWrpB,KACf,GAAI4oB,GAAUA,EAAOjc,GAAM,KACjBmc,EAAaF,EAAOjc,GAC1Bmc,EAAW/O,mBAAqBiK,EAAOjK,uBAEjC9U,WAAQqF,EAAK1F,GACf6C,IAAM6hB,EAAiBR,EAAWQ,eAC9BA,WACOR,EAAWQ,eAClBR,EAAWvE,MAAMuE,EAAWZ,WAAYmB,EAAS7E,WAAY6E,EAAS5E,MAAO6E,IAEjF7kB,EAAS6F,EAAK1F,KAGQ,YAAtBkkB,EAAWpE,OACXoE,EAAWQ,eAAiBrkB,EACC,SAAtB6jB,EAAWpE,SAEdoE,EAAWZ,WACXY,EAAWvE,MAAMuE,EAAWZ,WAAYloB,KAAKwkB,WAAYxkB,KAAKykB,MAAOxf,WAjGpCwjB,YA+GjDc,mBAAUvF,EAAwBvf,GAC9BgD,IAAMkhB,EAAU3oB,KAAK2oB,QACjBhc,EAAMqX,EAAOrX,IACbgc,GAAWA,EAAQhc,IAAQgc,EAAQhc,GAAKoc,QACxCJ,EAAQhc,GAAKoc,eACNJ,EAAQhc,UApH0B8b,YA+HjDe,oBAAWxF,EAAwBvf,GAC/BgD,IAAMmhB,EAAS5oB,KAAK4oB,OAChBjc,EAAMqX,EAAOrX,IACbic,GAAUA,EAAOjc,WACVic,EAAOjc,SC/L1B,IAAM8c,EAIF7hB,WACI5H,KAAK4oB,OAAS,KALUa,YAQ5Bpe,kBAAS2Y,EAAiCvf,OAC/BkI,QAAKI,aAAU2c,iBAChBC,EAAM,IAAIvc,UAAQT,EAAK+c,EAAc3c,QAEtC6b,OAAS5oB,KAAK4oB,QAAU,QACxBA,OAAOjc,GAAOgd,EACnBllB,EAAS,KAAMklB,KAdSF,YAiB5BD,oBAAWxF,GACPvc,IAAMmhB,EAAS5oB,KAAK4oB,OAChBjc,EAAMqX,EAAOrX,IACbic,GAAUA,EAAOjc,WACVic,EAAOjc,KCjC1BkM,cAAwB,mBACI,EAAE,2BACA,cC0B9B,SAAS+Q,EAAYC,GACjB,IAAIrS,EAAO,EACX,GAAIqS,GAAUA,EAAOjqB,OAAS,EAAG,CAC7B4X,GAAQnX,KAAKqQ,IAAIoZ,EAASD,EAAO,KACjC,IAAK,IAAI5oB,EAAI,EAAGA,EAAI4oB,EAAOjqB,OAAQqB,IAC/BuW,GAAQnX,KAAKqQ,IAAIoZ,EAASD,EAAO5oB,MAGzC,OAAOuW,EAkBX,SAASsS,EAASD,GACd,IAAIpI,EAAIsI,EAAQC,EAAYC,EAAaC,EAAYjpB,EACrDuW,EAAO,EACP2S,EAAeN,EAAOjqB,OAEtB,GAAIuqB,EAAe,EAAG,CAClB,IAAKlpB,EAAI,EAAGA,EAAIkpB,EAAclpB,IACtBA,IAAMkpB,EAAe,GACrBH,EAAaG,EAAe,EAC5BF,EAAcE,EAAc,EAC5BD,EAAa,GACNjpB,IAAMkpB,EAAe,GAC5BH,EAAaG,EAAe,EAC5BF,EAAc,EACdC,EAAa,IAEbF,EAAa/oB,EACbgpB,EAAchpB,EAAE,EAChBipB,EAAajpB,EAAE,GAEnBwgB,EAAKoI,EAAOG,GACZD,EAAKF,EAAOI,GAEZzS,IAAU4S,EADLP,EAAOK,GACK,IAAME,EAAI3I,EAAG,KAAQphB,KAAK2f,IAAKoK,EAAIL,EAAG,KAG3DvS,EAAOA,EAAO6S,EAAMC,OAASD,EAAMC,OAAS,GAGhD,OAAO9S,EAGX,SAAS4S,EAAIG,GACT,OAAOA,EAAIlqB,KAAK2G,GAAK,oBAlFzB,SAAS2H,EAAS4b,GACd,IAActpB,EAAVuW,EAAO,EACX,OAAQ+S,EAAEnlB,MACN,IAAK,UACD,OAAOwkB,EAAYW,EAAEC,aACzB,IAAK,eACD,IAAKvpB,EAAI,EAAGA,EAAIspB,EAAEC,YAAY5qB,OAAQqB,IAClCuW,GAAQoS,EAAYW,EAAEC,YAAYvpB,IAEtC,OAAOuW,EACX,IAAK,QACL,IAAK,aACL,IAAK,aACL,IAAK,kBACD,OAAO,EACX,IAAK,qBACD,IAAKvW,EAAI,EAAGA,EAAIspB,EAAEE,WAAW7qB,OAAQqB,IACjCuW,GAAQ7I,EAAS4b,EAAEE,WAAWxpB,IAElC,OAAOuW,SArBGsS,KCCtB,SAASY,EAAOC,EAAIC,GAChB,OAASD,GAAMA,EAAGvlB,MAAS,MACvB,IAAK,oBAED,OADAulB,EAAGlP,SAAWkP,EAAGlP,SAAS1Q,IAAI8f,EAAWH,EAAQE,IAC1CD,EACX,IAAK,qBAED,OADAA,EAAGF,WAAaE,EAAGF,WAAW1f,IAAI8f,EAAWH,EAAQE,IAC9CD,EACX,IAAK,UAED,OADAA,EAAGhc,SAAW+b,EAAOC,EAAGhc,SAAUic,GAC3BD,EACX,IAAK,UACL,IAAK,eACD,OAUZ,SAAiBJ,EAAGK,GACD,YAAXL,EAAEnlB,KACFmlB,EAAEC,YAAcM,EAAaP,EAAEC,YAAaI,GAC1B,iBAAXL,EAAEnlB,OACTmlB,EAAEC,YAAcD,EAAEC,YAAYzf,IAAI8f,EAAWC,EAAcF,KAE/D,OAAOL,EAhBQQ,CAAQJ,EAAIC,GACvB,QACI,OAAOD,IAInB,SAASE,EAAWjZ,EAAGpE,GACnB,OAAO,SAAS+c,GAAK,OAAO3Y,EAAE2Y,EAAG/c,IAYrC,SAASsd,EAAaP,EAAGK,GACrBA,IAAUA,EACVL,EAAE,GAAKS,EAAKT,EAAE,GAAIK,GAClB,IAAK,IAAI3pB,EAAI,EAAGA,EAAIspB,EAAE3qB,OAAQqB,IAC1BspB,EAAEtpB,GAAK+pB,EAAKT,EAAEtpB,IAAK2pB,GAEvB,OAAOL,EAGX,SAASS,EAAKT,EAAGU,GACb,OAGJ,SAAYV,GACR,OAAOW,EAAYhT,KAAKqS,IAAM,EAJvBY,CAAGZ,KAAOU,EAAMV,EAAIA,EAAEa,UCzCjC3jB,IAAM8G,EAAY8c,MAAIC,kBAAkBC,UAAUhd,UAiB5Cid,EAQF5jB,SAAY8T,GACR1b,KAAKyrB,SAAW/P,EAEhB1b,KAAK0rB,OAAS3iB,SACd/I,KAAKoF,KAAOsW,EAAQtW,KACpBpF,KAAK2rB,WAAajQ,EAAQkQ,KAQtB,OAAQlQ,IAAY7U,MAAM6U,EAAQpY,MAClCtD,KAAKsD,GAAKuoB,SAASnQ,EAAQpY,GAAI,OAtBOkoB,YA0B9CM,2BAC+B,IAAvB9rB,KAAKyrB,SAASrmB,KAAY,CAE1B,IADAqC,IAAMkH,EAAW,cACQ8c,SAAS9c,yBAAU,KAAjCoT,OACPpT,EAASgC,KAAK,CAAC,IAAI2E,QAAMyM,EAAM,GAAIA,EAAM,cAEtCpT,EAGP,IADAlH,IAAMkH,EAAW,cACO8c,SAAS9c,yBAAU,SACjCod,EAAU,8BACU,KAAfhK,OACPgK,EAAQpb,KAAK,IAAI2E,QAAMyM,EAAM,GAAIA,EAAM,MAE3CpT,EAASgC,KAAKob,WAEXpd,GA1C+B6c,YA8C9Cjd,mBAAUhK,EAAW6C,EAAW5C,GAC5B,OAAO+J,EAAUuX,KAAK9lB,KAAMuE,EAAG6C,EAAG5C,IAI1C,IAAMwnB,EAOFpkB,SAAY6T,QACHhI,OAAS,CAAEwY,kBAAqBjsB,MACrCA,KAAKmnB,KAAO,oBACZnnB,KAAK0rB,OAAS3iB,SACd/I,KAAKJ,OAAS6b,EAAS7b,OACvBI,KAAKksB,UAAYzQ,IAZmCuQ,YAexDtQ,iBAAQza,UACG,IAAIuqB,EAAexrB,KAAKksB,UAAUjrB,KCtFjD,IAAIqqB,EAAoBa,aAA+Bb,oBAEtCU,EAGjB,SAASA,EAAgBvQ,EAAUyJ,GACjCllB,KAAKklB,QAAUA,GAAW,GAC1BllB,KAAKyb,SAAWA,EAChBzb,KAAKJ,OAAS6b,EAAS7b,QAOzB,SAAS4rB,EAAgB9P,EAASgQ,GAChC1rB,KAAKsD,GAA2B,iBAAfoY,EAAQpY,GAAkBoY,EAAQpY,QAAKgL,EACxDtO,KAAKoF,KAAOsW,EAAQtW,KACpBpF,KAAKosB,YAA+B,IAAjB1Q,EAAQtW,KAAa,CAACsW,EAAQ/M,UAAY+M,EAAQ/M,SACrE3O,KAAK2rB,WAAajQ,EAAQkQ,KAC1B5rB,KAAK0rB,OAASA,GAAU,MAT1BM,EAAeT,UAAU7P,QAAU,SAAUza,GAC3C,OAAO,IAAIuqB,EAAexrB,KAAKyb,SAASxa,GAAIjB,KAAKklB,QAAQwG,SAW3DF,EAAeD,UAAUO,aAAe,eAClCO,EAAQrsB,KAAKosB,YACjBpsB,KAAK2O,SAAW,GAEhB,IAAK,IAAI1N,EAAI,EAAGA,EAAIorB,EAAMzsB,OAAQqB,IAAK,CAGrC,IAFA,IAAIiX,EAAOmU,EAAMprB,GACb8qB,EAAU,GACL7e,EAAI,EAAGA,EAAIgL,EAAKtY,OAAQsN,IAC/B6e,EAAQpb,KAAK,IAAI2E,UAAM4C,EAAKhL,GAAG,GAAIgL,EAAKhL,GAAG,UAExCyB,SAASgC,KAAKob,IAErB,OAAO/rB,KAAK2O,UAGd6c,EAAeD,UAAU3iB,KAAO,WACzB5I,KAAK2O,UAAU3O,KAAK8rB,eAQzB,IANA,IAAIO,EAAQrsB,KAAK2O,SACbsG,EAAKgD,EAAAA,EACL/C,GAAM+C,EAAAA,EACNlD,EAAKkD,EAAAA,EACL3Q,GAAM2Q,EAAAA,EAEDhX,EAAI,EAAGA,EAAIorB,EAAMzsB,OAAQqB,IAGhC,IAFA,IAAIiX,EAAOmU,EAAMprB,GAERiM,EAAI,EAAGA,EAAIgL,EAAKtY,OAAQsN,IAAK,CACpC,IAAIpE,EAAQoP,EAAKhL,GAEjB+H,EAAK5U,KAAK+H,IAAI6M,EAAInM,EAAMvE,GACxB2Q,EAAK7U,KAAKgI,IAAI6M,EAAIpM,EAAMvE,GACxBwQ,EAAK1U,KAAK+H,IAAI2M,EAAIjM,EAAM1B,GACxBE,EAAKjH,KAAKgI,IAAIf,EAAIwB,EAAM1B,IAI5B,OAAO,CAAC6N,EAAIF,EAAIG,EAAI5N,IAGtBkkB,EAAeD,UAAUhd,UAAY+c,EAAkBC,UAAUhd,UC/DjEsK,MAAiByT,KACiBA,KAyBlC,SAAwB7Y,EAAQyR,GAC9BA,EAAUA,GAAW,GACrB,IAAI5L,EAAI,GACR,QAAStI,KAAKyC,EACZ6F,EAAEtI,GAAK,IAAIgb,EAAevY,EAAOzC,GAAGyK,SAAUyJ,GAC9C5L,EAAEtI,GAAGmW,KAAOnW,EACZsI,EAAEtI,GAAGoU,QAAUF,EAAQE,QACvB9L,EAAEtI,GAAG0a,OAASxG,EAAQwG,OAExB,OAAOY,GAAiB,CAAC7Y,OAAQ6F,QAhCH0S,EAQhC,SAASM,GAAkB/gB,GACzB,IAAIghB,EAAM,IAAIzqB,MAEd,OAwBF,SAAoByJ,EAAM9K,GACxB,QAAS2O,KAAO7D,EAAKkI,OACnBhT,EAAImB,aAAa,EAAG4qB,GAAYjhB,EAAKkI,OAAOrE,KA3B9Cqd,CAAUlhB,EAAMghB,GACTA,EAAIhE,SA8Bb,SAASiE,GAAYrd,EAAO1O,GAK1B,IAAIQ,EAJJR,EAAIoC,iBAAiB,GAAIsM,EAAMiW,SAAW,GAC1C3kB,EAAIisB,iBAAiB,EAAGvd,EAAMgY,MAAQ,IACtC1mB,EAAIoC,iBAAiB,EAAGsM,EAAMuc,QAAU,MAGxC,IAAI3f,EAAU,CACZgD,KAAM,GACN+E,OAAQ,GACR6Y,SAAU,GACVC,WAAY,IAGd,IAAK3rB,EAAI,EAAGA,EAAIkO,EAAMvP,OAAQqB,IAC5B8K,EAAQ2P,QAAUvM,EAAMuM,QAAQza,GAChCR,EAAImB,aAAa,EAAGirB,GAAc9gB,GAGpC,IAAIgD,EAAOhD,EAAQgD,KACnB,IAAK9N,EAAI,EAAGA,EAAI8N,EAAKnP,OAAQqB,IAC3BR,EAAIisB,iBAAiB,EAAG3d,EAAK9N,IAG/B,IAAI6S,EAAS/H,EAAQ+H,OACrB,IAAK7S,EAAI,EAAGA,EAAI6S,EAAOlU,OAAQqB;;OCoGkM,eAAsB,WCrHzO,sBADU6rB,gCAEoB1T,EAAK,YAI3CpY,EAAI,OAEFC,mDAKS,yBAGbtB,EAAIsB,KAAO,UAAkB,cACN,SAGnBA,SAAeD,yBACW,KAC1BC,kBACJtB,EAAIsB,KAAO,UAIf,6BA4BA,IAAItB,EAAM,sBACDsB,MAAatB,SAAYsB,eACnBC,qBAERvB,eAKsBA,EAAK0I,SAC3BkkB,WACU5sB,SAKbotB,cAAqBxrB,SAEd,IAAO,EAAGN,aACXA,oEASRD,SAAmB,gBAEJ,aACH,EAAiB,+BAOzBA,EAAI,MACN+rB,6DAI4B/rB,eAIDurB,kBAUGlkB,mBAGrB1I,UACHA,mEAQY0I,yBAM0BA,mBC/J5B,EACpB2kB,gBAAoB,8BAEA,uBAGpBC,eAKoB,EACpBC,cAAoB,EACpBC,0DAGoB,wEASpBC,uBAA0B,eAI1BC,uBAC0B,EAC1BC,QAA0B,gCAIA,SACA,+BCvCX,CACfC,EAAQ,iLCDV,sBAEe,KACbvtB,oBAEKwtB,gBAEAC,uBAES,KACdztB,cAAgB,kCAIC,EAEjBA,SAAW,GAEXA,gBAEAA,sCCpBF,gBAEOgc,YAEA0R,OAEL1tB,KAAK2tB,wBAIAC,WAEL5tB,sBAWKmnB,QAILnnB,MAAK6tB,qBAIa,EAElB7tB,WAAkB,MC3CLgP,0BAiFf,SAAS8e,GAAQ5I,mCACwB,uBAExB6I,GAAMC,OAAO,CAC1BC,gBACAC,gBACI,IACHhJ,GAAW,IAEd,mBAIIiJ,OAAYA,8BAA0C,KACxDA,cAAkBA,mBACVD,aAAoBC,EAAID,YAAc,OAI3CC,cAAkB,GAAOA,kBACxBjJ,GAAWA,EAAQgJ,aACvBC,mCAK4BA,iBAGE,yBACxBD,YAAc,IAItBluB,SAAc,GACdA,wBACc,EACdA,YAAc,IAEdA,KAAKouB,kCAGL,IAAI1J,uBACG0J,KACLD,kBAGEzJ,IAAW1jB,kBACH8F,kBAGPunB,WAAaC,GAElBC,qBAA8BvuB,gCAwOvBwuB,GAAQ5nB,EAAOse,GACtB,MAAe,oBAEDte,QAGD0D,KAAO,QAAemkB,KAAOA,IAAIC,oCA/M9B/d,KAAO,SAAU/L,iBAKR+pB,IAJrBP,EAAOpuB,iBACUklB,QAAQ+I,yBACCW,YAO1BC,8BAGKC,MAAWA,EAAQA,OAASA,4BAGjB,2BAELC,GAAsBnqB,GACF,yBAAxB+B,QAAc/B,IACvBwpB,kCAEaxpB,EAGfwpB,EAAKY,qBACWZ,2BAGLa,YACPb,GAAKc,qCAEAD,gBAGEV,WAAqBH,EAAMptB,GAAEmuB,kBAErBhC,aAAeyB,4BAGFA,yCAEnB,IAAIQ,oDAKyCC,WAIvCC,kBAAeT,SACnBU,KACXV,GAAgB,UAGD3B,kBAA2BlsB,kCAErCwuB,YAIHpB,EAAKqB,4BACqB/K,IAAW1jB,sBAAmBotB,gBAAkCptB,aAAc0uB,IAAU1uB,mBAE1F,gBAAfkkB,QAAQyK,SAEoBvB,WAAkBqB,cAEzCA,kBACsBP,UAGlCd,EAAKqB,aACAR,UAAYhB,EAAY2B,QACXC,SAASzB,EAAKc,OAAQd,qBAEnC0B,OAAOnB,+BAGqBO,SAAaO,6BAYN,IAAnBrB,EAAKa,YAC9BJ,+BAG2BT,EAAKa,YAAoBvK,sBAOxD,gDAAc1jB,aACZ0jB,KAAsBqL,iCACXrL,qBAEO1jB,SAIhB0uB,OAAYM,uDAmBlBlC,oBAA2B,SAAUmC,oBAClBA,OAcX1E,yBAA4B7G,UAEjB6K,uBACNrK,QAAQyK,GAGf3vB,YAAcA,KAAKkwB,OAAOrU,wBAENsU,8BAGxBnwB,+BAEKyuB,mBAgFP2B,gBAAkBtC,kCAjBElnB,EAAOse,IAGzB,0BAAete,gCCzYbgB,aAAgBsd,0BACmBmL,uBAE/BrwB,aAAeswB,+HAGnBA,sBAAaC,IACT,kBAAgBD,aAAaC,0CAGhBA,EAAYC,GAAQC,GACjC,kBAAgBC,mBAA6BF,kBAGjDG,oBAAYpsB,EAAG6C,EAAG3C,GACd,eAAImsB,OAAOC,SAAX,CAkBAppB,MACe,CAACjD,OAChBxE,aAAa,YACT8wB,eAAe,UAAUC,0IACmBC,KACpC,UAAapxB,OAAQ,CACjB6H,QAAuBwpB,UAAU,oBAC3B3I,EAAU4I,kCAAkCC,WACzC7iB,EAAW8iB,WAASC,cAAc/I,qBAExB,eAAsB,gCAGxCpjB,KACAA,sBAECoF,GACd7F,EAAS6F,SAnCb,CACI7C,IACMuc,UACNhkB,QAAQsxB,KAAK,mBAFC,6FAGsB1d,SACZsd,wBAChBzsB,OAAS6J,aAAoB+iB,cAAc/I,8DAiC3Djd,kBAASE,SACCzC,WAAoBG,UACpBmJ,WAA6B3H,aAAe9B,QAAanE,EAAIxE,KAAKyK,SAAW,EAE7EjG,eAAsBxE,KAAKyK,SAAW3B,EAAMtE,OAClCD,kBACQuE,EAAM1B,EAAE,EAEhCpH,gBAAiBuE,qBAGT+F,EACA,OAAO7F,EAAS6F,GAEpB,QAAmBgE,eACD,UAAU,mBAGtB0V,EAAS,SACF,CAAE/b,IAAK,yCAChB0E,IAAKpB,EAAKoB,oBAEVwO,KAAMrS,EAAMtE,EACZyV,SAAUja,KAAKia,SAAW7H,OACpBpS,KAAKoF,iBACE9B,GACb4Z,WAAYqU,OAAOC,oBACnBpf,iCACoBpS,KAAK+K,IAAIgP,sBAGvB0X,sBAAYlmB,EAAKM,MAED,YAAfN,EAAKM,wBAEUpH,wBAED,iBAA2BitB,KAAK1xB,MAAOuL,EAAKkmB,qBALjDzxB,KAAKmK,2BAA4B6Z,SAAkBhkB,uBASnE,cAAA,CAGA,KACI,YAGAA,iCAAoC2xB,+FAMtBpmB,qCACQ,4BCrFpCqmB,eACF,yBAAmBC,SAA8BA,2BAC7B3M,+BAvBwB4M,GAC5CrqB,UAAgB8pB,SAAOQ,eAiBvB,oBAhBgB9pB,MAChB+pB,4BAA+B,uCAChBC,gBACfD,EAAIE,4BACeF,EAAIG,YAAYC,mBAC/B,MAAU1N,aAAiBsN,EAAItN,YAAiB2N,0BAE3B9N,QAAUyE,kBAClB1e,GACLwnB,EAAOxnB,QAGXwnB,YAAiBE,EAAIM,uBAG7BN,EAAIpM,OACGoM,KAK4BV,cAAMO,UAAU3mB,SAAO,GAAIga,EAAS,CAAC2M,MAAOA,eAE5DU,eAzBLtqB,GA6BZuqB,YAAqBtN,GACvBzd,QAAsBoqB,MAChBY,EAAc,WACdC,EAAOnB,SAAOoB,gBAAkBpB,mBAAgBqB,SAASC,MAAM,KAAK1J,MAAM,GAAI,aAOpF,MALK,iBAA6B2J,OAAOC,MAAMN,IAC1C,WAAYZ,MAAiBxuB,OAAO0vB,WACrClB,EAAMiB,OAASJ,EAAO,IAAOb,EAAMiB,OACnCjB,EAAMxuB,OAASqvB,EAAO,MAAarvB,QAEhC6hB,UC7CX8N,GAASC,qBD6EW/N,UAChB0M,GAAiB1M,GAASoM,SAAwBA,cAAM4B,YACrCA,EA/Ba,IAAIC,uCACHjO,EAAQ2M,kBAErCpe,cAEoBvI,YAAWga,SAAiBkO,UACpCC,MAChBtoB,OAAS,sBACDuoB,MAA0BH,iBAASZ,GACnCxnB,gBAAkB,uCAElBwoB,MAAgCJ,iBAASZ,KACrCiB,cAAc,gBAAiBC,oDAGvCN,QAAQO,KAAKJ,EAAqBC,IAA4BjC,uBAAWiB,EAAQxnB,UAiB5EumB,QAAiB4B,iBAbEnoB,IAE5B,OADAiE,cAAkB2kB,gCAA6B5oB,EAAI6oB,YAAsB/B,EAAM8B,QAAQE,WAa9EvC,cATOO,mBAAW9mB,YACrB0I,OAAO1I,aAAKoE,UAAUpE,WAAaoE,KAClCpE,kBAPU8mB;;AEvErB,EAAE;;;;;;;;"}